{
  "components": {
    "schemas": {
      "wireless.v1.command": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "command": {
            "type": "string"
          },
          "command_mode": {
            "enum": [
              "text",
              "binary"
            ],
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "delivery_receipt_requested": {
            "type": "boolean"
          },
          "direction": {
            "enum": [
              "from_sim",
              "to_sim"
            ],
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^DC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sim_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^DE[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "status": {
            "enum": [
              "queued",
              "sent",
              "delivered",
              "received",
              "failed"
            ],
            "type": "string"
          },
          "transport": {
            "enum": [
              "sms",
              "ip"
            ],
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "wireless.v1.rate_plan": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "data_enabled": {
            "type": "boolean"
          },
          "data_limit": {
            "type": "integer"
          },
          "data_metering": {
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "friendly_name": {
            "type": "string"
          },
          "international_roaming": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "international_roaming_data_limit": {
            "type": "integer"
          },
          "messaging_enabled": {
            "type": "boolean"
          },
          "national_roaming_data_limit": {
            "type": "integer"
          },
          "national_roaming_enabled": {
            "type": "boolean"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^WP[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "unique_name": {
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          },
          "voice_enabled": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "wireless.v1.sim": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "commands_callback_method": {
            "enum": [
              "head",
              "get",
              "post",
              "patch",
              "put",
              "delete",
              "HEAD",
              "GET",
              "POST",
              "PATCH",
              "PUT",
              "DELETE"
            ],
            "type": "string"
          },
          "commands_callback_url": {
            "format": "uri",
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "e_id": {
            "type": "string"
          },
          "friendly_name": {
            "type": "string"
          },
          "iccid": {
            "type": "string"
          },
          "ip_address": {
            "type": "string"
          },
          "links": {
            "patternProperties": {
              "^.+$": {
                "format": "uri",
                "type": "string"
              }
            },
            "type": "object"
          },
          "rate_plan_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^WP[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "reset_status": {
            "enum": [
              "resetting"
            ],
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^DE[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sms_fallback_method": {
            "enum": [
              "head",
              "get",
              "post",
              "patch",
              "put",
              "delete",
              "HEAD",
              "GET",
              "POST",
              "PATCH",
              "PUT",
              "DELETE"
            ],
            "type": "string"
          },
          "sms_fallback_url": {
            "format": "uri",
            "type": "string"
          },
          "sms_method": {
            "enum": [
              "head",
              "get",
              "post",
              "patch",
              "put",
              "delete",
              "HEAD",
              "GET",
              "POST",
              "PATCH",
              "PUT",
              "DELETE"
            ],
            "type": "string"
          },
          "sms_url": {
            "format": "uri",
            "type": "string"
          },
          "status": {
            "enum": [
              "new",
              "ready",
              "active",
              "suspended",
              "deactivated",
              "canceled",
              "scheduled",
              "updating"
            ],
            "type": "string"
          },
          "unique_name": {
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          },
          "voice_fallback_method": {
            "enum": [
              "head",
              "get",
              "post",
              "patch",
              "put",
              "delete",
              "HEAD",
              "GET",
              "POST",
              "PATCH",
              "PUT",
              "DELETE"
            ],
            "type": "string"
          },
          "voice_fallback_url": {
            "format": "uri",
            "type": "string"
          },
          "voice_method": {
            "enum": [
              "head",
              "get",
              "post",
              "patch",
              "put",
              "delete",
              "HEAD",
              "GET",
              "POST",
              "PATCH",
              "PUT",
              "DELETE"
            ],
            "type": "string"
          },
          "voice_url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "wireless.v1.sim.data_session": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "cell_id": {
            "type": "string"
          },
          "cell_location_estimate": {
            "type": "object"
          },
          "end": {
            "format": "date-time",
            "type": "string"
          },
          "imei": {
            "type": "string"
          },
          "last_updated": {
            "format": "date-time",
            "type": "string"
          },
          "operator_country": {
            "type": "string"
          },
          "operator_mcc": {
            "type": "string"
          },
          "operator_mnc": {
            "type": "string"
          },
          "operator_name": {
            "type": "string"
          },
          "packets_downloaded": {
            "type": "integer"
          },
          "packets_uploaded": {
            "type": "integer"
          },
          "radio_link": {
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^WN[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sim_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^DE[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "start": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "wireless.v1.sim.usage_record": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "commands": {
            "type": "object"
          },
          "data": {
            "type": "object"
          },
          "period": {
            "type": "object"
          },
          "sim_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^DE[0-9a-fA-F]{32}$",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "accountSid_authToken": {
        "scheme": "basic",
        "type": "http"
      }
    }
  },
  "info": {
    "contact": {
      "email": "support@twilio.com",
      "name": "Twilio Support",
      "url": "https://support.twilio.com"
    },
    "description": "This is the public Twilio REST API.",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "termsOfService": "https://www.twilio.com/legal/tos",
    "title": "Twilio REST API",
    "version": "81ff5a4"
  },
  "openapi": "3.0.1",
  "paths": {
    "/v1/Commands": {
      "description": "Machine-to-machine commands sent to/from devices",
      "get": {
        "description": "Retrieve a list of Commands from your account.",
        "parameters": [
          {
            "description": "Only return Commands to or from this SIM.",
            "in": "query",
            "name": "Sim",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Only return Commands with this status value.",
            "in": "query",
            "name": "Status",
            "required": false,
            "schema": {
              "enum": [
                "queued",
                "sent",
                "delivered",
                "received",
                "failed"
              ],
              "type": "string"
            }
          },
          {
            "description": "Only return Commands with this direction value.",
            "in": "query",
            "name": "Direction",
            "required": false,
            "schema": {
              "enum": [
                "from_sim",
                "to_sim"
              ],
              "type": "string"
            }
          },
          {
            "description": "Only return Commands with this transport value.",
            "in": "query",
            "name": "Transport",
            "required": false,
            "schema": {
              "enum": [
                "sms",
                "ip"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "commands": {
                      "items": {
                        "$ref": "#/components/schemas/wireless.v1.command"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": "Send a Command to a Sim.",
        "parameters": [
          {
            "description": "The message body of the Command or a Base64 encoded byte string in binary mode.",
            "in": "query",
            "name": "Command",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The Sid or UniqueName of the SIM to send the Command to.",
            "in": "query",
            "name": "Sim",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The HTTP method Twilio will use when making a request to the callback URL.",
            "in": "query",
            "name": "CallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "Twilio will make a request to this URL when the Command has finished sending.",
            "in": "query",
            "name": "CallbackUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "A string representing which mode to send the SMS message using.",
            "in": "query",
            "name": "CommandMode",
            "required": false,
            "schema": {
              "enum": [
                "text",
                "binary"
              ],
              "type": "string"
            }
          },
          {
            "description": "When sending a Command to a SIM in text mode, Twilio can automatically include the Sid of the Command in the message body, which could be used to ensure that the device does not process the same Command more than once.",
            "in": "query",
            "name": "IncludeSid",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A boolean representing whether to request delivery receipt from the recipient.",
            "in": "query",
            "name": "DeliveryReceiptRequested",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wireless.v1.command"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://wireless.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "command_mode",
        "transport",
        "status",
        "direction",
        "date_created"
      ]
    },
    "/v1/Commands/{Sid}": {
      "delete": {
        "description": "Delete a Command instance from your account.",
        "parameters": [
          {
            "description": "A 34 character string that uniquely identifies this resource.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^DC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "Machine-to-machine commands sent to/from devices",
      "get": {
        "description": "Fetch a Command instance from your account.",
        "parameters": [
          {
            "description": "A 34 character string that uniquely identifies this resource.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^DC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wireless.v1.command"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://wireless.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "command_mode",
        "transport",
        "status",
        "direction",
        "date_created"
      ]
    },
    "/v1/RatePlans": {
      "description": "Capabilities and restrictions for SIMs",
      "get": {
        "description": null,
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "rate_plans": {
                      "items": {
                        "$ref": "#/components/schemas/wireless.v1.rate_plan"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "A user-provided string that uniquely identifies this resource as an alternative to the Sid.",
            "in": "query",
            "name": "UniqueName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A user-provided string that identifies this resource.",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Defines whether SIMs are capable of using GPRS/3G/LTE data connectivity.",
            "in": "query",
            "name": "DataEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Network-enforced limit specifying the total Megabytes of data usage allowed during one month on the home network.",
            "in": "query",
            "name": "DataLimit",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The model by which to meter data usage, in accordance with the two available data metering models.",
            "in": "query",
            "name": "DataMetering",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Defines whether SIMs are capable of making and sending and receiving SMS messages via either Commands or Programmable SMS APIs.",
            "in": "query",
            "name": "MessagingEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Defines whether SIMs are capable of making and receiving voice calls.",
            "in": "query",
            "name": "VoiceEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Defines whether SIMs can roam onto other networks in the SIM's home country.",
            "in": "query",
            "name": "NationalRoamingEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "InternationalRoaming",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Network-enforced limit specifying the total Megabytes of national roaming data usage allowed during one month.",
            "in": "query",
            "name": "NationalRoamingDataLimit",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "InternationalRoamingDataLimit",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wireless.v1.rate_plan"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://wireless.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "unique_name",
        "friendly_name",
        "date_created"
      ]
    },
    "/v1/RatePlans/{Sid}": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^WP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "Capabilities and restrictions for SIMs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^WP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wireless.v1.rate_plan"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^WP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A user-provided string that uniquely identifies this resource as an alternative to the Sid.",
            "in": "query",
            "name": "UniqueName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A user-provided string that identifies this resource.",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wireless.v1.rate_plan"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://wireless.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "unique_name",
        "friendly_name",
        "date_created"
      ]
    },
    "/v1/Sims": {
      "description": "Individual wireless SIMs",
      "get": {
        "description": "Retrieve a list of Sims from your account.",
        "parameters": [
          {
            "description": "Only return Sims with this status.",
            "in": "query",
            "name": "Status",
            "required": false,
            "schema": {
              "enum": [
                "new",
                "ready",
                "active",
                "suspended",
                "deactivated",
                "canceled",
                "scheduled",
                "updating"
              ],
              "type": "string"
            }
          },
          {
            "description": "Return Sims with this Iccid.",
            "in": "query",
            "name": "Iccid",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Only return Sims with this Rate Plan.",
            "in": "query",
            "name": "RatePlan",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Only return Sims with this EID.",
            "in": "query",
            "name": "EId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Only return Sims with this registration code.",
            "in": "query",
            "name": "SimRegistrationCode",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "sims": {
                      "items": {
                        "$ref": "#/components/schemas/wireless.v1.sim"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://wireless.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "unique_name",
        "friendly_name",
        "status"
      ]
    },
    "/v1/Sims/{Sid}": {
      "delete": {
        "description": "Delete a Sim instance from your account.",
        "parameters": [
          {
            "description": "A 34 character string that uniquely identifies this resource.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^DE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "Individual wireless SIMs",
      "get": {
        "description": "Fetch a Sim instance from your account.",
        "parameters": [
          {
            "description": "A 34 character string that uniquely identifies this resource.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^DE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wireless.v1.sim"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": "Updates the given properties of a Sim instance from your account.",
        "parameters": [
          {
            "description": "A 34 character string that uniquely identifies this resource.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^DE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A user-provided string that uniquely identifies this resource as an alternative to the Sid.",
            "in": "query",
            "name": "UniqueName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The HTTP method Twilio will use when making a request to the callback URL.",
            "in": "query",
            "name": "CallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "Twilio will make a request to this URL when the Sim has finished updating.",
            "in": "query",
            "name": "CallbackUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "A user-provided string that identifies this resource.",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The Sid or UniqueName of the RatePlan that this Sim should use.",
            "in": "query",
            "name": "RatePlan",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^WP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string representing the status of the Sim.",
            "in": "query",
            "name": "Status",
            "required": false,
            "schema": {
              "enum": [
                "new",
                "ready",
                "active",
                "suspended",
                "deactivated",
                "canceled",
                "scheduled",
                "updating"
              ],
              "type": "string"
            }
          },
          {
            "description": "A string representing the HTTP method to use when making a request to CommandsCallbackUrl.",
            "in": "query",
            "name": "CommandsCallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL that will receive a webhook when this Sim originates a Command.",
            "in": "query",
            "name": "CommandsCallbackUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method Twilio will use when requesting the sms_fallback_url.",
            "in": "query",
            "name": "SmsFallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL that Twilio will request if an error occurs retrieving or executing the TwiML requested by sms_url.",
            "in": "query",
            "name": "SmsFallbackUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method Twilio will use when requesting the above Url.",
            "in": "query",
            "name": "SmsMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL Twilio will request when the SIM-connected device sends an SMS message that is not a Command.",
            "in": "query",
            "name": "SmsUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method Twilio will use when requesting the voice_fallback_url.",
            "in": "query",
            "name": "VoiceFallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL that Twilio will request if an error occurs retrieving or executing the TwiML requested by voice_url.",
            "in": "query",
            "name": "VoiceFallbackUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method Twilio will use when requesting the above Url.",
            "in": "query",
            "name": "VoiceMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL Twilio will request when the SIM-connected device makes a call.",
            "in": "query",
            "name": "VoiceUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "Initiate a connectivity reset on a Sim.",
            "in": "query",
            "name": "ResetStatus",
            "required": false,
            "schema": {
              "enum": [
                "resetting"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/wireless.v1.sim"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://wireless.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "unique_name",
        "friendly_name",
        "status"
      ]
    },
    "/v1/Sims/{SimSid}/DataSessions": {
      "description": "Data session information for SIMs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "SimSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^DE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "End",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "Start",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data_sessions": {
                      "items": {
                        "$ref": "#/components/schemas/wireless.v1.sim.data_session"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://wireless.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "packets_uploaded",
        "packets_downloaded",
        "start",
        "end"
      ]
    },
    "/v1/Sims/{SimSid}/UsageRecords": {
      "description": "Usage information for SIMs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "SimSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^DE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Only include usage that has occurred on or before this date.",
            "in": "query",
            "name": "End",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Only include usage that has occurred on or after this date.",
            "in": "query",
            "name": "Start",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "The time-based grouping that results are aggregated by.",
            "in": "query",
            "name": "Granularity",
            "required": false,
            "schema": {
              "enum": [
                "hourly",
                "daily",
                "all"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "usage_records": {
                      "items": {
                        "$ref": "#/components/schemas/wireless.v1.sim.usage_record"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://wireless.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "period"
      ]
    }
  },
  "tags": [
    {
      "description": "This product is Generally Available.",
      "name": "GA"
    }
  ]
}