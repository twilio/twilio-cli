{
  "components": {
    "schemas": {
      "preview.acc_security.service": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "code_length": {
            "type": {
              "type": "integer"
            }
          },
          "date_created": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "links": {
            "type": {
              "patternProperties": {
                "^.+$": {
                  "format": "uri",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "name": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^VA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.acc_security.service.verification": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "channel": {
            "type": {
              "enum": [
                "sms",
                "call"
              ],
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "service_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^VA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^VE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "status": {
            "type": {
              "type": "string"
            }
          },
          "to": {
            "type": {
              "type": "string"
            }
          },
          "valid": {
            "type": {
              "type": "boolean"
            }
          }
        },
        "type": "object"
      },
      "preview.acc_security.service.verification_check": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "channel": {
            "type": {
              "enum": [
                "sms",
                "call"
              ],
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "service_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^VA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^VE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "status": {
            "type": {
              "type": "string"
            }
          },
          "to": {
            "type": {
              "type": "string"
            }
          },
          "valid": {
            "type": {
              "type": "boolean"
            }
          }
        },
        "type": "object"
      },
      "preview.bulk_exports.export": {
        "properties": {
          "links": {
            "type": {
              "patternProperties": {
                "^.+$": {
                  "format": "uri",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "resource_type": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.bulk_exports.export.day": {
        "properties": {
          "day": {
            "type": {
              "type": "string"
            }
          },
          "resource_type": {
            "type": {
              "type": "string"
            }
          },
          "size": {
            "type": {
              "type": "integer"
            }
          }
        },
        "type": "object"
      },
      "preview.bulk_exports.export.day|instance": {
        "properties": {
          "redirect_to": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.bulk_exports.export_configuration": {
        "properties": {
          "enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "resource_type": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "webhook_method": {
            "type": {
              "type": "string"
            }
          },
          "webhook_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.deployed_devices.fleet": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "default_deployment_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^DL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "links": {
            "type": {
              "patternProperties": {
                "^.+$": {
                  "format": "uri",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^TH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.deployed_devices.fleet.certificate": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "device_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^TH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "fleet_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CY[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "thumbprint": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.deployed_devices.fleet.deployment": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "fleet_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^DL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "sync_service_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.deployed_devices.fleet.device": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "date_authenticated": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "deployment_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^DL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "fleet_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "identity": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^TH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.deployed_devices.fleet.key": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "device_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^TH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "fleet_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "secret": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^KY[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.flex.configuration": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "attributes": {
            "type": {
              "type": "object"
            }
          },
          "call_recording_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "call_recording_webhook_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "chat_service_instance_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "crm_attributes": {
            "type": {
              "type": "object"
            }
          },
          "crm_callback_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "crm_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "crm_fallback_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "crm_type": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "identity_realm_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^JB[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "identity_sso_login_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "identity_sso_logout_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "messaging_service_instance_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "runtime_domain": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "service_version": {
            "type": {
              "type": "string"
            }
          },
          "status": {
            "type": {
              "enum": [
                "ok",
                "inprogress",
                "notstarted"
              ],
              "type": "string"
            }
          },
          "taskrouter_offline_activity_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "taskrouter_skills": {
            "type": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "taskrouter_target_taskqueue_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^WQ[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "taskrouter_target_workflow_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^WW[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "taskrouter_taskqueues": {
            "type": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "taskrouter_worker_attributes": {
            "type": {
              "type": "object"
            }
          },
          "taskrouter_worker_channels": {
            "type": {
              "type": "object"
            }
          },
          "taskrouter_workspace_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "ui_attributes": {
            "type": {
              "type": "object"
            }
          },
          "ui_language": {
            "type": {
              "type": "string"
            }
          },
          "ui_version": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.flex.flex_flow": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "channel_type": {
            "type": {
              "enum": [
                "web",
                "sms",
                "facebook",
                "whatsapp",
                "line"
              ],
              "type": "string"
            }
          },
          "chat_service_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "contact_identity": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FO[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "studio_flow_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.flex.web_channel": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "chat_channel_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "flex_flow_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FO[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.flex.web_channel_user": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "chat_channel_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.flex.worker": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "activity_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "attributes": {
            "type": {
              "type": "object"
            }
          },
          "capacities": {
            "type": {
              "type": "object"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^WK[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "workspace_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.hosted_numbers.authorization_document": {
        "properties": {
          "address_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "cc_emails": {
            "type": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "date_created": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "email": {
            "type": {
              "type": "string"
            }
          },
          "links": {
            "type": {
              "patternProperties": {
                "^.+$": {
                  "format": "uri",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PX[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "status": {
            "type": {
              "enum": [
                "opened",
                "signing",
                "signed",
                "canceled",
                "failed"
              ],
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.hosted_numbers.authorization_document.dependent_hosted_number_order": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "address_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "call_delay": {
            "type": {
              "type": "integer"
            }
          },
          "capabilities": {
            "type": {
              "properties": {
                "mms": {
                  "type": "boolean"
                },
                "sms": {
                  "type": "boolean"
                },
                "voice": {
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          },
          "cc_emails": {
            "type": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "date_created": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "email": {
            "type": {
              "type": "string"
            }
          },
          "extension": {
            "type": {
              "type": "string"
            }
          },
          "failure_reason": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "incoming_phone_number_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^HR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "signing_document_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PX[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "status": {
            "type": {
              "enum": [
                "received",
                "pending-verification",
                "verified",
                "pending-loa",
                "carrier-processing",
                "testing",
                "completed",
                "failed",
                "action-required"
              ],
              "type": "string"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "verification_attempts": {
            "type": {
              "type": "integer"
            }
          },
          "verification_call_sids": {
            "type": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "verification_code": {
            "type": {
              "type": "string"
            }
          },
          "verification_document_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RI[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "verification_type": {
            "type": {
              "enum": [
                "phone-call",
                "phone-bill"
              ],
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.hosted_numbers.hosted_number_order": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "address_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "call_delay": {
            "type": {
              "type": "integer"
            }
          },
          "capabilities": {
            "type": {
              "properties": {
                "mms": {
                  "type": "boolean"
                },
                "sms": {
                  "type": "boolean"
                },
                "voice": {
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          },
          "cc_emails": {
            "type": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "date_created": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "email": {
            "type": {
              "type": "string"
            }
          },
          "extension": {
            "type": {
              "type": "string"
            }
          },
          "failure_reason": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "incoming_phone_number_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^HR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "signing_document_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PX[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "status": {
            "type": {
              "enum": [
                "received",
                "pending-verification",
                "verified",
                "pending-loa",
                "carrier-processing",
                "testing",
                "completed",
                "failed",
                "action-required"
              ],
              "type": "string"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "verification_attempts": {
            "type": {
              "type": "integer"
            }
          },
          "verification_call_sids": {
            "type": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "verification_code": {
            "type": {
              "type": "string"
            }
          },
          "verification_document_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RI[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "verification_type": {
            "type": {
              "enum": [
                "phone-call",
                "phone-bill"
              ],
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.iam.authenticate": {
        "properties": {
          "location": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.iam.refresh_token": {
        "properties": {
          "expiration": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "identity": {
            "type": {
              "type": "string"
            }
          },
          "roles": {
            "type": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "token": {
            "type": {
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.iam.saml2": {
        "properties": {
          "redirect_to": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.iam.token": {
        "properties": {
          "expiration": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "identity": {
            "type": {
              "type": "string"
            }
          },
          "roles": {
            "type": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "token": {
            "type": {
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.iam.validate_token": {
        "properties": {
          "code": {
            "type": {
              "type": "integer"
            }
          },
          "expiration": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "identity": {
            "type": {
              "type": "string"
            }
          },
          "message": {
            "type": {
              "type": "string"
            }
          },
          "realm_user_id": {
            "type": {
              "type": "string"
            }
          },
          "roles": {
            "type": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "valid": {
            "type": {
              "type": "boolean"
            }
          },
          "worker_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^WK[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.insights.call": {
        "properties": {},
        "type": "object"
      },
      "preview.insights.call.event": {
        "properties": {
          "account_friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "group": {
            "type": {
              "type": "string"
            }
          },
          "level": {
            "type": {
              "type": "string"
            }
          },
          "name": {
            "type": {
              "type": "string"
            }
          },
          "parent_account_friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "parent_account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "payload": {
            "type": {
              "type": "object"
            }
          },
          "payload_type": {
            "type": {
              "type": "string"
            }
          },
          "publisher": {
            "type": {
              "type": "string"
            }
          },
          "publisher_metadata": {
            "type": {
              "type": "object"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^EV[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "timestamp": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.insights.call.metric": {
        "properties": {
          "audio_level_in": {
            "type": {
              "type": "integer"
            }
          },
          "audio_level_out": {
            "type": {
              "type": "integer"
            }
          },
          "call_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "jitter": {
            "type": {
              "type": "integer"
            }
          },
          "mos": {
            "type": {
              "type": "object"
            }
          },
          "packets_lost": {
            "type": {
              "type": "integer"
            }
          },
          "packets_lost_fraction": {
            "type": {
              "type": "object"
            }
          },
          "packets_received": {
            "type": {
              "type": "integer"
            }
          },
          "rtt": {
            "type": {
              "type": "integer"
            }
          },
          "timestamp": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "timestamp_ms": {
            "type": {
              "type": "integer"
            }
          },
          "total_bytes_received": {
            "type": {
              "type": "integer"
            }
          },
          "total_bytes_sent": {
            "type": {
              "type": "integer"
            }
          },
          "total_packets_lost": {
            "type": {
              "type": "integer"
            }
          },
          "total_packets_received": {
            "type": {
              "type": "integer"
            }
          },
          "total_packets_sent": {
            "type": {
              "type": "integer"
            }
          }
        },
        "type": "object"
      },
      "preview.insights.call.report": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "call_stats": {
            "type": {
              "type": "object"
            }
          },
          "end_time": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "feedback_score_counts": {
            "type": {
              "type": "object"
            }
          },
          "issue_type_counts": {
            "type": {
              "type": "object"
            }
          },
          "links": {
            "type": {
              "patternProperties": {
                "^.+$": {
                  "format": "uri",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "start_time": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "warning_counts": {
            "type": {
              "type": "object"
            }
          }
        },
        "type": "object"
      },
      "preview.insights.call.report.aspects": {
        "properties": {
          "links": {
            "type": {
              "patternProperties": {
                "^.+$": {
                  "format": "uri",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "name": {
            "type": {
              "enum": [
                "Clients",
                "IpAddresses",
                "Browsers",
                "OperatingSystems",
                "Regions",
                "Direction"
              ],
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.insights.call.report.aspects.aspect_reports": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "call_stats": {
            "type": {
              "type": "object"
            }
          },
          "end_time": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "feedback_score_counts": {
            "type": {
              "type": "object"
            }
          },
          "issue_type_counts": {
            "type": {
              "type": "object"
            }
          },
          "key": {
            "type": {
              "type": "string"
            }
          },
          "start_time": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "warning_counts": {
            "type": {
              "type": "object"
            }
          }
        },
        "type": "object"
      },
      "preview.insights.call.summary": {
        "properties": {
          "account_friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "call_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "parent_account_friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "parent_account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "summary": {
            "type": {
              "type": "object"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.marketplace.available_add_on": {
        "properties": {
          "configuration_schema": {
            "type": {
              "type": "object"
            }
          },
          "description": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "links": {
            "type": {
              "patternProperties": {
                "^.+$": {
                  "format": "uri",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "pricing_type": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^XB[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.marketplace.available_add_on.available_add_on_extension": {
        "properties": {
          "available_add_on_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^XB[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "product_name": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^XF[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.marketplace.installed_add_on": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "configuration": {
            "type": {
              "type": "object"
            }
          },
          "date_created": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "description": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "links": {
            "type": {
              "patternProperties": {
                "^.+$": {
                  "format": "uri",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^XE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.marketplace.installed_add_on.installed_add_on_extension": {
        "properties": {
          "enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "installed_add_on_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^XE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "product_name": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^XF[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.numbers.active_number": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "capabilities": {
            "type": {
              "type": "object"
            }
          },
          "configurations": {
            "type": {
              "type": "object"
            }
          },
          "geography": {
            "type": {
              "type": "object"
            }
          },
          "lifecycle": {
            "type": {
              "enum": [
                "developer-preview",
                "private-offering",
                "beta",
                "generally-available"
              ],
              "type": "string"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "regulatory": {
            "type": {
              "type": "object"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "type": {
            "type": {
              "enum": [
                "local",
                "tollfree",
                "mobile",
                "national",
                "voip",
                "machine-to-machine",
                "shared-cost"
              ],
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.numbers.available_number": {
        "properties": {
          "base_recurring_price": {
            "type": {
              "type": "number"
            }
          },
          "base_setup_price": {
            "type": {
              "type": "number"
            }
          },
          "capabilities": {
            "type": {
              "type": "object"
            }
          },
          "geography": {
            "type": {
              "type": "object"
            }
          },
          "lifecycle": {
            "type": {
              "enum": [
                "developer-preview",
                "private-offering",
                "beta",
                "generally-available"
              ],
              "type": "string"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "regulatory": {
            "type": {
              "type": "object"
            }
          },
          "type": {
            "type": {
              "enum": [
                "local",
                "tollfree",
                "mobile",
                "national",
                "voip",
                "machine-to-machine",
                "shared-cost"
              ],
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.payment.credential_aci_commerce_gateway": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.payment.credential_stripe": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.port_in.authorization_document": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "cc_emails": {
            "type": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "port_order_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PO[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PX[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "signer_name": {
            "type": {
              "type": "string"
            }
          },
          "status": {
            "type": {
              "enum": [
                "open",
                "signing",
                "signed",
                "canceled"
              ],
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.port_in.port_order": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "authorization_document_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PX[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "billing_phone_number": {
            "type": {
              "type": "string"
            }
          },
          "city": {
            "type": {
              "type": "string"
            }
          },
          "company_name": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "first_name": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "iso_country": {
            "type": {
              "type": "string"
            }
          },
          "last_name": {
            "type": {
              "type": "string"
            }
          },
          "links": {
            "type": {
              "patternProperties": {
                "^.+$": {
                  "format": "uri",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "loa_date_signed": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "postal_code": {
            "type": {
              "type": "string"
            }
          },
          "region": {
            "type": {
              "type": "string"
            }
          },
          "rejection_codes": {
            "type": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "requested_activation_date": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PO[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "status": {
            "type": {
              "enum": [
                "twilio-processing",
                "received",
                "pending-loa",
                "processing",
                "customer-action-required",
                "review",
                "completed",
                "failed"
              ],
              "type": "string"
            }
          },
          "status_callback_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "status_updates_email": {
            "type": {
              "type": "string"
            }
          },
          "street_name": {
            "type": {
              "type": "string"
            }
          },
          "street_number": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.port_in.port_order.port_number": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "carrier_account_number": {
            "type": {
              "type": "string"
            }
          },
          "confirmed_activation_date": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "current_carrier": {
            "type": {
              "type": "string"
            }
          },
          "current_resp_org": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "partner_reference_id": {
            "type": {
              "type": "string"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "phone_number_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "port_order_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PO[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "rejection_codes": {
            "type": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PU[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "status": {
            "type": {
              "enum": [
                "initialized",
                "pending-carrier-processing",
                "carrier-processing",
                "accepted",
                "rejected",
                "ported-in",
                "pending-cancelation",
                "canceled",
                "failed"
              ],
              "type": "string"
            }
          },
          "type": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.studio.flow": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "debug": {
            "type": {
              "type": "boolean"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "links": {
            "type": {
              "patternProperties": {
                "^.+$": {
                  "format": "uri",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "status": {
            "type": {
              "enum": [
                "draft",
                "published"
              ],
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "version": {
            "type": {
              "type": "integer"
            }
          }
        },
        "type": "object"
      },
      "preview.studio.flow.engagement": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "contact_channel_address": {
            "type": {
              "type": "string"
            }
          },
          "contact_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "context": {
            "type": {
              "type": "object"
            }
          },
          "date_created": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "flow_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "links": {
            "type": {
              "patternProperties": {
                "^.+$": {
                  "format": "uri",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FN[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "status": {
            "type": {
              "enum": [
                "active",
                "ended"
              ],
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.studio.flow.engagement.step": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "context": {
            "type": {
              "type": "object"
            }
          },
          "date_created": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "engagement_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FN[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "flow_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "name": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FT[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "transitioned_from": {
            "type": {
              "type": "string"
            }
          },
          "transitioned_to": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.sync.service": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "acl_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "date_created": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "links": {
            "type": {
              "patternProperties": {
                "^.+$": {
                  "format": "uri",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "reachability_webhooks_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "webhook_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.sync.service.document": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "created_by": {
            "type": {
              "type": "string"
            }
          },
          "data": {
            "type": {
              "type": "object"
            }
          },
          "date_created": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "links": {
            "type": {
              "patternProperties": {
                "^.+$": {
                  "format": "uri",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "revision": {
            "type": {
              "type": "string"
            }
          },
          "service_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ET[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.sync.service.document.document_permission": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "document_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ET[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "identity": {
            "type": {
              "type": "string"
            }
          },
          "manage": {
            "type": {
              "type": "boolean"
            }
          },
          "read": {
            "type": {
              "type": "boolean"
            }
          },
          "service_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "write": {
            "type": {
              "type": "boolean"
            }
          }
        },
        "type": "object"
      },
      "preview.sync.service.sync_list": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "created_by": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "links": {
            "type": {
              "patternProperties": {
                "^.+$": {
                  "format": "uri",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "revision": {
            "type": {
              "type": "string"
            }
          },
          "service_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.sync.service.sync_list.sync_list_item": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "created_by": {
            "type": {
              "type": "string"
            }
          },
          "data": {
            "type": {
              "type": "object"
            }
          },
          "date_created": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "index": {
            "type": {
              "type": "integer"
            }
          },
          "list_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "revision": {
            "type": {
              "type": "string"
            }
          },
          "service_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.sync.service.sync_list.sync_list_permission": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "identity": {
            "type": {
              "type": "string"
            }
          },
          "list_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "manage": {
            "type": {
              "type": "boolean"
            }
          },
          "read": {
            "type": {
              "type": "boolean"
            }
          },
          "service_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "write": {
            "type": {
              "type": "boolean"
            }
          }
        },
        "type": "object"
      },
      "preview.sync.service.sync_map": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "created_by": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "links": {
            "type": {
              "patternProperties": {
                "^.+$": {
                  "format": "uri",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "revision": {
            "type": {
              "type": "string"
            }
          },
          "service_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.sync.service.sync_map.sync_map_item": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "created_by": {
            "type": {
              "type": "string"
            }
          },
          "data": {
            "type": {
              "type": "object"
            }
          },
          "date_created": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "key": {
            "type": {
              "type": "string"
            }
          },
          "map_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "revision": {
            "type": {
              "type": "string"
            }
          },
          "service_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.sync.service.sync_map.sync_map_permission": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "identity": {
            "type": {
              "type": "string"
            }
          },
          "manage": {
            "type": {
              "type": "boolean"
            }
          },
          "map_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "read": {
            "type": {
              "type": "boolean"
            }
          },
          "service_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "write": {
            "type": {
              "type": "boolean"
            }
          }
        },
        "type": "object"
      },
      "preview.trusted_comms.current_call": {
        "properties": {
          "created_at": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "from": {
            "type": {
              "type": "string"
            }
          },
          "reason": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "to": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.trusted_comms.device": {
        "properties": {
          "binding_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^BS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^DD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.trusted_comms.phone_call": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "created_at": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "from": {
            "type": {
              "type": "string"
            }
          },
          "reason": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "to": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.understand.assistant": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "callback_events": {
            "type": {
              "type": "string"
            }
          },
          "callback_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "latest_model_build_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UG[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "links": {
            "type": {
              "patternProperties": {
                "^.+$": {
                  "format": "uri",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "log_queries": {
            "type": {
              "type": "boolean"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.understand.assistant.assistant_fallback_actions": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "assistant_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "data": {
            "type": {
              "type": "object"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.understand.assistant.assistant_initiation_actions": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "assistant_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "data": {
            "type": {
              "type": "object"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.understand.assistant.dialogue": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "assistant_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "data": {
            "type": {
              "type": "object"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UK[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.understand.assistant.field_type": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "assistant_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "links": {
            "type": {
              "patternProperties": {
                "^.+$": {
                  "format": "uri",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UB[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.understand.assistant.field_type.field_value": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "assistant_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "field_type_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UB[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "language": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "synonym_of": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "value": {
            "type": {
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.understand.assistant.model_build": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "assistant_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "build_duration": {
            "type": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "date_created": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "error_code": {
            "type": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UG[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "status": {
            "type": {
              "enum": [
                "enqueued",
                "building",
                "completed",
                "failed",
                "canceled"
              ],
              "type": "string"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.understand.assistant.query": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "assistant_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "language": {
            "type": {
              "type": "string"
            }
          },
          "model_build_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UG[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "query": {
            "type": {
              "type": "string"
            }
          },
          "results": {
            "type": {
              "type": "object"
            }
          },
          "sample_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UF[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "source_channel": {
            "type": {
              "type": "string"
            }
          },
          "status": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.understand.assistant.style_sheet": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "assistant_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "data": {
            "type": {
              "type": "object"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.understand.assistant.task": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "actions_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "assistant_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "links": {
            "type": {
              "patternProperties": {
                "^.+$": {
                  "format": "uri",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.understand.assistant.task.field": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "assistant_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "field_type": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "task_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.understand.assistant.task.sample": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "assistant_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "language": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UF[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "source_channel": {
            "type": {
              "type": "string"
            }
          },
          "tagged_text": {
            "type": {
              "type": "string"
            }
          },
          "task_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.understand.assistant.task.task_actions": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "assistant_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "data": {
            "type": {
              "type": "object"
            }
          },
          "task_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.understand.assistant.task.task_statistics": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "assistant_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "fields_count": {
            "type": {
              "type": "integer"
            }
          },
          "samples_count": {
            "type": {
              "type": "integer"
            }
          },
          "task_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.wireless.command": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "command": {
            "type": {
              "type": "string"
            }
          },
          "command_mode": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "device_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^DE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "direction": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^DC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "sim_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^DE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "status": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.wireless.rate_plan": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "data_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "data_limit": {
            "type": {
              "type": "integer"
            }
          },
          "data_metering": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "international_roaming": {
            "type": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "messaging_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "national_roaming_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^WP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "voice_enabled": {
            "type": {
              "type": "boolean"
            }
          }
        },
        "type": "object"
      },
      "preview.wireless.sim": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "commands_callback_method": {
            "type": {
              "type": "string"
            }
          },
          "commands_callback_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "e_id": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "iccid": {
            "type": {
              "type": "string"
            }
          },
          "links": {
            "type": {
              "patternProperties": {
                "^.+$": {
                  "format": "uri",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "rate_plan_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^WP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^DE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "sms_fallback_method": {
            "type": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          "sms_fallback_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "sms_method": {
            "type": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          "sms_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "status": {
            "type": {
              "type": "string"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "voice_fallback_method": {
            "type": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          "voice_fallback_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "voice_method": {
            "type": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          "voice_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "preview.wireless.sim.usage": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "commands_costs": {
            "type": {
              "type": "object"
            }
          },
          "commands_usage": {
            "type": {
              "type": "object"
            }
          },
          "data_costs": {
            "type": {
              "type": "object"
            }
          },
          "data_usage": {
            "type": {
              "type": "object"
            }
          },
          "period": {
            "type": {
              "type": "object"
            }
          },
          "sim_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^DE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "sim_unique_name": {
            "type": {
              "type": "string"
            }
          },
          "url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "accountSid_authToken": {
        "scheme": "basic",
        "type": "http"
      }
    }
  },
  "info": {
    "contact": {
      "email": "support@twilio.com",
      "name": "Twilio Support",
      "url": "https://support.twilio.com"
    },
    "description": "This is the public Twilio REST API.",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "termsOfService": "https://www.twilio.com/legal/tos",
    "title": "Twilio REST API",
    "version": "81ff5a4"
  },
  "openapi": "3.0.1",
  "paths": {
    "/BulkExports/Exports/{ResourceType}": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "ResourceType",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.bulk_exports.export"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/BulkExports/Exports/{ResourceType}/Configuration": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "ResourceType",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.bulk_exports.export_configuration"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "ResourceType",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "Enabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "WebhookUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "WebhookMethod",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.bulk_exports.export_configuration"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/BulkExports/Exports/{ResourceType}/Days": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "ResourceType",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "days": {
                      "items": {
                        "$ref": "#/components/schemas/preview.bulk_exports.export.day"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/BulkExports/Exports/{ResourceType}/Days/{Day}": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "ResourceType",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "Day",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "307": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.bulk_exports.export.day|instance"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/DeployedDevices/Fleets": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Retrieve a list of all Fleets belonging to your account.",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "fleets": {
                      "items": {
                        "$ref": "#/components/schemas/preview.deployed_devices.fleet"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "Create a new Fleet for scoping of deployed devices within your account.",
        "parameters": [
          {
            "description": "A human readable description for this Fleet.",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.deployed_devices.fleet"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/DeployedDevices/Fleets/{FleetSid}/Certificates": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Retrieve a list of all Certificate credentials belonging to the Fleet.",
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "FleetSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Find all Certificates authenticating specified Device.",
            "in": "query",
            "name": "DeviceSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^TH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "certificates": {
                      "items": {
                        "$ref": "#/components/schemas/preview.deployed_devices.fleet.certificate"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "Enroll a new Certificate credential to the Fleet, optionally giving it a friendly name and assigning to a Device.",
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "FleetSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The public certificate data.",
            "in": "query",
            "name": "CertificateData",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The human readable description for this Certificate.",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The unique identifier of a Device to be authenticated.",
            "in": "query",
            "name": "DeviceSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^TH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.deployed_devices.fleet.certificate"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/DeployedDevices/Fleets/{FleetSid}/Certificates/{Sid}": {
      "delete": {
        "description": "Unregister a specific Certificate credential from the Fleet, effectively disallowing any inbound client connections that are presenting it.",
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "FleetSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string that uniquely identifies the Certificate.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CY[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Fetch information about a specific Certificate credential in the Fleet.",
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "FleetSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string that uniquely identifies the Certificate.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CY[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.deployed_devices.fleet.certificate"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "Update the given properties of a specific Certificate credential in the Fleet, giving it a friendly name or assigning to a Device.",
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "FleetSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string that uniquely identifies the Certificate.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CY[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The human readable description for this Certificate.",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The unique identifier of a Device to be authenticated.",
            "in": "query",
            "name": "DeviceSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^TH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.deployed_devices.fleet.certificate"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/DeployedDevices/Fleets/{FleetSid}/Deployments": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Retrieve a list of all Deployments belonging to the Fleet.",
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "FleetSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "deployments": {
                      "items": {
                        "$ref": "#/components/schemas/preview.deployed_devices.fleet.deployment"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "Create a new Deployment in the Fleet, optionally giving it a friendly name and linking to a specific Twilio Sync service instance.",
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "FleetSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A human readable description for this Deployment.",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The unique identifier of the Sync service instance.",
            "in": "query",
            "name": "SyncServiceSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.deployed_devices.fleet.deployment"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/DeployedDevices/Fleets/{FleetSid}/Deployments/{Sid}": {
      "delete": {
        "description": "Delete a specific Deployment from the Fleet, leaving associated devices effectively undeployed.",
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "FleetSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string that uniquely identifies the Deployment.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^DL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Fetch information about a specific Deployment in the Fleet.",
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "FleetSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string that uniquely identifies the Deployment.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^DL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.deployed_devices.fleet.deployment"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "Update the given properties of a specific Deployment credential in the Fleet, giving it a friendly name or linking to a specific Twilio Sync service instance.",
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "FleetSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string that uniquely identifies the Deployment.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^DL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A human readable description for this Deployment.",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The unique identifier of the Sync service instance.",
            "in": "query",
            "name": "SyncServiceSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.deployed_devices.fleet.deployment"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/DeployedDevices/Fleets/{FleetSid}/Devices": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Retrieve a list of all Devices belonging to the Fleet.",
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "FleetSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Find all Devices grouped under the specified Deployment.",
            "in": "query",
            "name": "DeploymentSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^DL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "devices": {
                      "items": {
                        "$ref": "#/components/schemas/preview.deployed_devices.fleet.device"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "Create a new Device in the Fleet, optionally giving it a unique name, friendly name, and assigning to a Deployment and/or human identity.",
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "FleetSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A unique, addressable name of this Device.",
            "in": "query",
            "name": "UniqueName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A human readable description for this Device.",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "An identifier of the Device user.",
            "in": "query",
            "name": "Identity",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The unique SID of the Deployment group.",
            "in": "query",
            "name": "DeploymentSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^DL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "Enabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.deployed_devices.fleet.device"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/DeployedDevices/Fleets/{FleetSid}/Devices/{Sid}": {
      "delete": {
        "description": "Delete a specific Device from the Fleet, also removing it from associated Deployments.",
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "FleetSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string that uniquely identifies the Device.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^TH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Fetch information about a specific Device in the Fleet.",
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "FleetSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string that uniquely identifies the Device.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^TH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.deployed_devices.fleet.device"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "Update the given properties of a specific Device in the Fleet, giving it a friendly name, assigning to a Deployment, or a human identity.",
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "FleetSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string that uniquely identifies the Device.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^TH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A human readable description for this Device.",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "An identifier of the Device user.",
            "in": "query",
            "name": "Identity",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The unique SID of the Deployment group.",
            "in": "query",
            "name": "DeploymentSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^DL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "Enabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.deployed_devices.fleet.device"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/DeployedDevices/Fleets/{FleetSid}/Keys": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Retrieve a list of all Keys credentials belonging to the Fleet.",
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "FleetSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Find all Keys authenticating specified Device.",
            "in": "query",
            "name": "DeviceSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^TH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "keys": {
                      "items": {
                        "$ref": "#/components/schemas/preview.deployed_devices.fleet.key"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "Create a new Key credential in the Fleet, optionally giving it a friendly name and assigning to a Device.",
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "FleetSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The human readable description for this Key.",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The unique identifier of a Key to be authenticated.",
            "in": "query",
            "name": "DeviceSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^TH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.deployed_devices.fleet.key"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/DeployedDevices/Fleets/{FleetSid}/Keys/{Sid}": {
      "delete": {
        "description": "Delete a specific Key credential from the Fleet, effectively disallowing any inbound client connections that are presenting it.",
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "FleetSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string that uniquely identifies the Key.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^KY[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Fetch information about a specific Key credential in the Fleet.",
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "FleetSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string that uniquely identifies the Key.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^KY[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.deployed_devices.fleet.key"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "Update the given properties of a specific Key credential in the Fleet, giving it a friendly name or assigning to a Device.",
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "FleetSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string that uniquely identifies the Key.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^KY[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The human readable description for this Key.",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The unique identifier of a Key to be authenticated.",
            "in": "query",
            "name": "DeviceSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^TH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.deployed_devices.fleet.key"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/DeployedDevices/Fleets/{Sid}": {
      "delete": {
        "description": "Delete a specific Fleet from your account, also destroys all nested resources: Devices, Deployments, Certificates, Keys.",
        "parameters": [
          {
            "description": "A string that uniquely identifies the Fleet.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Fetch information about a specific Fleet in your account.",
        "parameters": [
          {
            "description": "A string that uniquely identifies the Fleet.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.deployed_devices.fleet"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "Update the friendly name property of a specific Fleet in your account.",
        "parameters": [
          {
            "description": "A string that uniquely identifies the Fleet.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A human readable description for this Fleet.",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A default Deployment SID.",
            "in": "query",
            "name": "DefaultDeploymentSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^DL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.deployed_devices.fleet"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/Flex/Configuration": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "Pinned UI version",
            "in": "query",
            "name": "UiVersion",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.flex.configuration"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": null,
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.flex.configuration"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/Flex/FlexFlows": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "Human readable description of this FlexFlow",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "flex_flows": {
                      "items": {
                        "$ref": "#/components/schemas/preview.flex.flex_flow"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "Human readable description of this FlexFlow",
            "in": "query",
            "name": "FriendlyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Flow Sid.",
            "in": "query",
            "name": "StudioFlowSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Service Sid.",
            "in": "query",
            "name": "ChatServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Channel type",
            "in": "query",
            "name": "ChannelType",
            "required": true,
            "schema": {
              "enum": [
                "web",
                "sms",
                "facebook",
                "whatsapp",
                "line"
              ],
              "type": "string"
            }
          },
          {
            "description": "Channel contact Identity",
            "in": "query",
            "name": "ContactIdentity",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Boolean flag for enabling or disabling the FlexFlow",
            "in": "query",
            "name": "Enabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.flex.flex_flow"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/Flex/FlexFlows/{Sid}": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": "The unique ID of the FlexFlow",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FO[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The unique ID of the FlexFlow",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FO[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.flex.flex_flow"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The unique ID of the FlexFlow",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FO[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Human readable description of this FlexFlow",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Flow Sid.",
            "in": "query",
            "name": "StudioFlowSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Service Sid.",
            "in": "query",
            "name": "ChatServiceSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Channel type",
            "in": "query",
            "name": "ChannelType",
            "required": false,
            "schema": {
              "enum": [
                "web",
                "sms",
                "facebook",
                "whatsapp",
                "line"
              ],
              "type": "string"
            }
          },
          {
            "description": "Channel contact Identity",
            "in": "query",
            "name": "ContactIdentity",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Boolean flag for enabling or disabling the FlexFlow",
            "in": "query",
            "name": "Enabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.flex.flex_flow"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/Flex/WebChannels": {
      "description": "TODO: Resource-level docs",
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The unique ID of the FlexFlow",
            "in": "query",
            "name": "FlexFlowSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FO[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Chat identity",
            "in": "query",
            "name": "Identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Chat channel friendly name",
            "in": "query",
            "name": "ChatFriendlyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Customer friendly name",
            "in": "query",
            "name": "CustomerFriendlyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Chat status",
            "in": "query",
            "name": "ChatStatus",
            "required": false,
            "schema": {
              "enum": [
                "active",
                "inactive"
              ],
              "type": "string"
            }
          },
          {
            "description": "Pre-engagement data",
            "in": "query",
            "name": "PreEngagementData",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.flex.web_channel"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/Flex/WebChannels/Instance": {
      "description": "TODO: Resource-level docs",
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "Channel Sid.",
            "in": "query",
            "name": "ChatChannelSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Chat status",
            "in": "query",
            "name": "ChatStatus",
            "required": false,
            "schema": {
              "enum": [
                "active",
                "inactive"
              ],
              "type": "string"
            }
          },
          {
            "description": "Post-engagement data",
            "in": "query",
            "name": "PostEngagementData",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.flex.web_channel"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/Flex/WebChannels/Users": {
      "description": "TODO: Resource-level docs",
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "Chat identity",
            "in": "query",
            "name": "Identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Channel Sid.",
            "in": "query",
            "name": "ChatChannelSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.flex.web_channel_user"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/Flex/Worker/Instance": {
      "description": "TODO: Resource-level docs",
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "Worker Sid.",
            "in": "query",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^WK[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Workspace Sid.",
            "in": "query",
            "name": "WorkspaceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^WS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Activity Sid.",
            "in": "query",
            "name": "ActivitySid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^WA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "JSON object describing this worker.",
            "in": "query",
            "name": "Attributes",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "JSON object describing channel capacities and availability for workers.",
            "in": "query",
            "name": "Capacities",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Reject worker pending reservations.",
            "in": "query",
            "name": "RejectPendingReservations",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.flex.worker"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/HostedNumbers/AuthorizationDocuments": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Retrieve a list of AuthorizationDocuments belonging to the account initiating the request.",
        "parameters": [
          {
            "description": "Email.",
            "in": "query",
            "name": "Email",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The Status of this AuthorizationDocument.",
            "in": "query",
            "name": "Status",
            "required": false,
            "schema": {
              "enum": [
                "opened",
                "signing",
                "signed",
                "canceled",
                "failed"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "items": {
                      "items": {
                        "$ref": "#/components/schemas/preview.hosted_numbers.authorization_document"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "Create an AuthorizationDocument for authorizing the hosting of phone number capabilities on Twilio's platform.",
        "parameters": [
          {
            "description": "A list of HostedNumberOrder sids.",
            "in": "query",
            "name": "HostedNumberOrderSids",
            "required": true,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Address sid.",
            "in": "query",
            "name": "AddressSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Email.",
            "in": "query",
            "name": "Email",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Title of signee of this Authorization Document.",
            "in": "query",
            "name": "ContactTitle",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Authorization Document's signee's phone number.",
            "in": "query",
            "name": "ContactPhoneNumber",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A list of emails.",
            "in": "query",
            "name": "CcEmails",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.hosted_numbers.authorization_document"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/HostedNumbers/AuthorizationDocuments/{Sid}": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Fetch a specific AuthorizationDocument.",
        "parameters": [
          {
            "description": "AuthorizationDocument sid.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PX[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.hosted_numbers.authorization_document"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "Updates a specific AuthorizationDocument.",
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PX[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A list of HostedNumberOrder sids.",
            "in": "query",
            "name": "HostedNumberOrderSids",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Address sid.",
            "in": "query",
            "name": "AddressSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Email.",
            "in": "query",
            "name": "Email",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A list of emails.",
            "in": "query",
            "name": "CcEmails",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "The Status of this AuthorizationDocument.",
            "in": "query",
            "name": "Status",
            "required": false,
            "schema": {
              "enum": [
                "opened",
                "signing",
                "signed",
                "canceled",
                "failed"
              ],
              "type": "string"
            }
          },
          {
            "description": "Title of signee of this Authorization Document.",
            "in": "query",
            "name": "ContactTitle",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Authorization Document's signee's phone number.",
            "in": "query",
            "name": "ContactPhoneNumber",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.hosted_numbers.authorization_document"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/HostedNumbers/AuthorizationDocuments/{SigningDocumentSid}/DependentHostedNumberOrders": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Retrieve a list of dependent HostedNumberOrders belonging to the AuthorizationDocument.",
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "SigningDocumentSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PX[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The Status of this HostedNumberOrder.",
            "in": "query",
            "name": "Status",
            "required": false,
            "schema": {
              "enum": [
                "received",
                "pending-verification",
                "verified",
                "pending-loa",
                "carrier-processing",
                "testing",
                "completed",
                "failed",
                "action-required"
              ],
              "type": "string"
            }
          },
          {
            "description": "An E164 formatted phone number.",
            "in": "query",
            "name": "PhoneNumber",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "IncomingPhoneNumber sid.",
            "in": "query",
            "name": "IncomingPhoneNumberSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A human readable description of this resource.",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A unique, developer assigned name of this HostedNumberOrder.",
            "in": "query",
            "name": "UniqueName",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "items": {
                      "items": {
                        "$ref": "#/components/schemas/preview.hosted_numbers.authorization_document.dependent_hosted_number_order"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/HostedNumbers/HostedNumberOrders": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Retrieve a list of HostedNumberOrders belonging to the account initiating the request.",
        "parameters": [
          {
            "description": "The Status of this HostedNumberOrder.",
            "in": "query",
            "name": "Status",
            "required": false,
            "schema": {
              "enum": [
                "received",
                "pending-verification",
                "verified",
                "pending-loa",
                "carrier-processing",
                "testing",
                "completed",
                "failed",
                "action-required"
              ],
              "type": "string"
            }
          },
          {
            "description": "An E164 formatted phone number.",
            "in": "query",
            "name": "PhoneNumber",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "IncomingPhoneNumber sid.",
            "in": "query",
            "name": "IncomingPhoneNumberSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A human readable description of this resource.",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A unique, developer assigned name of this HostedNumberOrder.",
            "in": "query",
            "name": "UniqueName",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "items": {
                      "items": {
                        "$ref": "#/components/schemas/preview.hosted_numbers.hosted_number_order"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "Host a phone number's capability on Twilio's platform.",
        "parameters": [
          {
            "description": "An E164 formatted phone number.",
            "in": "query",
            "name": "PhoneNumber",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Specify SMS capability to host.",
            "in": "query",
            "name": "SmsCapability",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Account Sid.",
            "in": "query",
            "name": "AccountSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A human readable description of this resource.",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A unique, developer assigned name of this HostedNumberOrder.",
            "in": "query",
            "name": "UniqueName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A list of emails.",
            "in": "query",
            "name": "CcEmails",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "SMS URL.",
            "in": "query",
            "name": "SmsUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "SMS Method.",
            "in": "query",
            "name": "SmsMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "SMS Fallback URL.",
            "in": "query",
            "name": "SmsFallbackUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "SMS Fallback Method.",
            "in": "query",
            "name": "SmsFallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "Status Callback URL.",
            "in": "query",
            "name": "StatusCallbackUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "Status Callback Method.",
            "in": "query",
            "name": "StatusCallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "SMS Application Sid.",
            "in": "query",
            "name": "SmsApplicationSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Address sid.",
            "in": "query",
            "name": "AddressSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Email.",
            "in": "query",
            "name": "Email",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Verification Type.",
            "in": "query",
            "name": "VerificationType",
            "required": false,
            "schema": {
              "enum": [
                "phone-call",
                "phone-bill"
              ],
              "type": "string"
            }
          },
          {
            "description": "Verification Document Sid",
            "in": "query",
            "name": "VerificationDocumentSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RI[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.hosted_numbers.hosted_number_order"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/HostedNumbers/HostedNumberOrders/{Sid}": {
      "delete": {
        "description": "Cancel the HostedNumberOrder (only available when the status is in `received`).",
        "parameters": [
          {
            "description": "HostedNumberOrder sid.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^HR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Fetch a specific HostedNumberOrder.",
        "parameters": [
          {
            "description": "HostedNumberOrder sid.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^HR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.hosted_numbers.hosted_number_order"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "Updates a specific HostedNumberOrder.",
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^HR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A human readable description of this resource.",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A unique, developer assigned name of this HostedNumberOrder.",
            "in": "query",
            "name": "UniqueName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Email.",
            "in": "query",
            "name": "Email",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A list of emails.",
            "in": "query",
            "name": "CcEmails",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "The Status of this HostedNumberOrder.",
            "in": "query",
            "name": "Status",
            "required": false,
            "schema": {
              "enum": [
                "received",
                "pending-verification",
                "verified",
                "pending-loa",
                "carrier-processing",
                "testing",
                "completed",
                "failed",
                "action-required"
              ],
              "type": "string"
            }
          },
          {
            "description": "A verification code.",
            "in": "query",
            "name": "VerificationCode",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Verification Type.",
            "in": "query",
            "name": "VerificationType",
            "required": false,
            "schema": {
              "enum": [
                "phone-call",
                "phone-bill"
              ],
              "type": "string"
            }
          },
          {
            "description": "Verification Document Sid",
            "in": "query",
            "name": "VerificationDocumentSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RI[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Digits to dial after connecting the verification call.",
            "in": "query",
            "name": "Extension",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of seconds, between 0 and 60, to delay before initiating the verification call.",
            "in": "query",
            "name": "CallDelay",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.hosted_numbers.hosted_number_order"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/Numbers/ActiveNumbers": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Retrieve a list of all Active Numbers for an account.",
        "parameters": [
          {
            "description": "Account Sid.",
            "in": "query",
            "name": "AccountSid",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The phone number, in E.164 (i.e. \"+1]\") format.",
            "in": "query",
            "name": "PhoneNumber",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The Type of this Active Number",
            "in": "query",
            "name": "Type",
            "required": false,
            "schema": {
              "enum": [
                "local",
                "tollfree",
                "mobile",
                "national",
                "voip",
                "machine-to-machine",
                "shared-cost"
              ],
              "type": "string"
            }
          },
          {
            "description": "The ISO country code of this phone number.",
            "in": "query",
            "name": "Geography.isoCountry",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The LATA of this phone number.",
            "in": "query",
            "name": "Geography.lata",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The latitude coordinate of this phone number.",
            "in": "query",
            "name": "Geography.latitude",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "The longitude coordinate of this phone number.",
            "in": "query",
            "name": "Geography.longitude",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "The locality/city of this phone number.",
            "in": "query",
            "name": "Geography.locality",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The postal (zip) code of this phone number.",
            "in": "query",
            "name": "Geography.postalCode",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The rate center of this phone number.",
            "in": "query",
            "name": "Geography.rateCenter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The two-letter state or province abbreviation of this phone number.",
            "in": "query",
            "name": "Geography.region",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Indicates whether a number has inbound voice connectivity into Twilioy",
            "in": "query",
            "name": "Capabilities.voice.inboundConnectivity",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Indicates whether a number has outbound voice connectivity from Twilio.",
            "in": "query",
            "name": "Capabilities.voice.outboundConnectivity",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Emergency 911 connectivity capable number.",
            "in": "query",
            "name": "Capabilities.voice.e911",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Fax capable number",
            "in": "query",
            "name": "Capabilities.voice.fax",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Integer stating how many calls can be initiated per second.",
            "in": "query",
            "name": "Capabilities.voice.callsPerSecond",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Integer stating how many calls can be active at one time.",
            "in": "query",
            "name": "Capabilities.voice.concurrentCallsLimit",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "TThe length in seconds that a number can record a voicemail.",
            "in": "query",
            "name": "Capabilities.voice.longRecordLength",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Indicates if this number supports dtmf with inbound called party.",
            "in": "query",
            "name": "Capabilities.voice.inboundCalledDtmf",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Indicates if this number supports dtmf with inbound caller party.",
            "in": "query",
            "name": "Capabilities.voice.inboundCallerDtmf",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Sip Trunking capable number.",
            "in": "query",
            "name": "Capabilities.voice.sipTrunking",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Inbound voice Caller ID (+E.164 format) preservation of a number.",
            "in": "query",
            "name": "Capabilities.voice.inboundCallerIdPreservation",
            "required": false,
            "schema": {
              "enum": [
                "none",
                "domestic",
                "international"
              ],
              "type": "string"
            }
          },
          {
            "description": "Inbound voice reachability of a number",
            "in": "query",
            "name": "Capabilities.voice.inboundReachability",
            "required": false,
            "schema": {
              "enum": [
                "domestic",
                "foreign",
                "global"
              ],
              "type": "string"
            }
          },
          {
            "description": "Indicates whether a number has inbound sms connectivity into Twilio",
            "in": "query",
            "name": "Capabilities.sms.inboundConnectivity",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Indicates whether a number has outbound sms connectivity from Twilio.",
            "in": "query",
            "name": "Capabilities.sms.outboundConnectivity",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Indicates if GSM-7 is supported.",
            "in": "query",
            "name": "Capabilities.sms.gsm7",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Indicates if USC-2 is supported for this ActiveNumber.",
            "in": "query",
            "name": "Capabilities.sms.ucs2",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Inbound SMS Sender Id Preservation of this Active Number.",
            "in": "query",
            "name": "Capabilities.sms.inboundSenderIdPreservation",
            "required": false,
            "schema": {
              "enum": [
                "none",
                "domestic",
                "international"
              ],
              "type": "string"
            }
          },
          {
            "description": "Inbound SMS Reachability of this Active Number.",
            "in": "query",
            "name": "Capabilities.sms.inboundReachability",
            "required": false,
            "schema": {
              "enum": [
                "domestic",
                "foreign",
                "global"
              ],
              "type": "string"
            }
          },
          {
            "description": "Integer showing the sms inbound message per second limit.",
            "in": "query",
            "name": "Capabilities.sms.inboundMps",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Indicates whether a number has inbound mms connectivity into Twilio",
            "in": "query",
            "name": "Capabilities.mms.inboundConnectivity",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Indicates whether a number has outbound mms connectivity from Twilio.",
            "in": "query",
            "name": "Capabilities.mms.outboundConnectivity",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The Capabilities.Mms.Inbound Reachability of this Active Number",
            "in": "query",
            "name": "Capabilities.mms.inboundReachability",
            "required": false,
            "schema": {
              "enum": [
                "domestic",
                "foreign",
                "global"
              ],
              "type": "string"
            }
          },
          {
            "description": "Integer showing the mms inbound message per second limit",
            "in": "query",
            "name": "Capabilities.mms.inboundMps",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "This indicates whether the phone number requires you or your customer to have an Address registered with Twilio.",
            "in": "query",
            "name": "Regulatory.addressRequirements",
            "required": false,
            "schema": {
              "enum": [
                "none",
                "any",
                "local",
                "foreign"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "items": {
                      "items": {
                        "$ref": "#/components/schemas/preview.numbers.active_number"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "Create a new Active Number for an account",
        "parameters": [
          {
            "description": "Phone numbers are in E.164",
            "in": "query",
            "name": "PhoneNumber",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A human readable description of this resource.",
            "in": "query",
            "name": "Configurations.friendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The URL Twilio will request when this phone number receives a call.",
            "in": "query",
            "name": "Configurations.voice.url",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The HTTP method Twilio will use when requesting Voice `Url`.",
            "in": "query",
            "name": "Configurations.voice.method",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The HTTP method used by Twilio for Voice `FallbackUrl`",
            "in": "query",
            "name": "Configurations.voice.fallbackUrl",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The HTTP method Twilio will use when requesting Voice `FallbackUrl`.",
            "in": "query",
            "name": "Configurations.voice.fallbackMethod",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The 34 character sid of the application Twilio should use to handle phone calls to this number.",
            "in": "query",
            "name": "Configurations.voice.applicationSid",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The URL Twilio will request when receiving an incoming SMS message to this number.",
            "in": "query",
            "name": "Configurations.sms.url",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The HTTP method Twilio will use when making requests to the `SmsUrl`.",
            "in": "query",
            "name": "Configurations.sms.method",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The URL that Twilio will request if an error occurs retrieving the SMS `Url`.",
            "in": "query",
            "name": "Configurations.sms.fallbackUrl",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The HTTP method used by Twilio for Sms FallbackUrl",
            "in": "query",
            "name": "Configurations.sms.fallbackMethod",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The 34 character sid of the application Twilio should use to handle SMSs sent to this number",
            "in": "query",
            "name": "Configurations.sms.applicationSid",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The URL that Twilio will request to pass status parameters",
            "in": "query",
            "name": "Configurations.statusCallback",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The HTTP method for StatusCallback",
            "in": "query",
            "name": "Configurations.statusCallbackMethod",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.numbers.active_number"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/Numbers/ActiveNumbers/{Sid}": {
      "delete": {
        "description": "Delete a specific Active Number.",
        "parameters": [
          {
            "description": "A string that uniquely identifies this Active Number.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Fetch a specific Active Number.",
        "parameters": [
          {
            "description": "A string that uniquely identifies this Active Number.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.numbers.active_number"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "Update a specific Active Number.",
        "parameters": [
          {
            "description": "A string that uniquely identifies this Active Number.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A human readable description of this resource.",
            "in": "query",
            "name": "Configurations.friendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The URL Twilio will request when this phone number receives a call.",
            "in": "query",
            "name": "Configurations.voice.url",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The HTTP method Twilio will use when requesting Voice `Url`.",
            "in": "query",
            "name": "Configurations.voice.method",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The HTTP method used by Twilio for Voice `FallbackUrl`",
            "in": "query",
            "name": "Configurations.voice.fallbackUrl",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The HTTP method Twilio will use when requesting Voice `FallbackUrl`.",
            "in": "query",
            "name": "Configurations.voice.fallbackMethod",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The 34 character sid of the application Twilio should use to handle phone calls to this number.",
            "in": "query",
            "name": "Configurations.voice.applicationSid",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The URL Twilio will request when receiving an incoming SMS message to this number.",
            "in": "query",
            "name": "Configurations.sms.url",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The HTTP method Twilio will use when making requests to the `SmsUrl`.",
            "in": "query",
            "name": "Configurations.sms.method",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The URL that Twilio will request if an error occurs retrieving the SMS `Url`.",
            "in": "query",
            "name": "Configurations.sms.fallbackUrl",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The HTTP method used by Twilio for Sms FallbackUrl",
            "in": "query",
            "name": "Configurations.sms.fallbackMethod",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The 34 character sid of the application Twilio should use to handle SMSs sent to this number",
            "in": "query",
            "name": "Configurations.sms.applicationSid",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The URL that Twilio will request to pass status parameters",
            "in": "query",
            "name": "Configurations.statusCallback",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The HTTP method for StatusCallback",
            "in": "query",
            "name": "Configurations.statusCallbackMethod",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.numbers.active_number"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/Numbers/AvailableNumbers": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Returns a list of AvailableNumbers that match the specified filters, each representing a phone number that is currently available for provisioning to your account.",
        "parameters": [
          {
            "description": "The phone number, in E.164 (i.e. \"+1]\") format.",
            "in": "query",
            "name": "PhoneNumber",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The Lifecycle of this Available Number",
            "in": "query",
            "name": "Lifecycle",
            "required": false,
            "schema": {
              "items": {
                "enum": [
                  "developer-preview",
                  "private-offering",
                  "beta",
                  "generally-available"
                ],
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "The Type of this Available Number",
            "in": "query",
            "name": "Type",
            "required": false,
            "schema": {
              "enum": [
                "local",
                "tollfree",
                "mobile",
                "national",
                "voip",
                "machine-to-machine",
                "shared-cost"
              ],
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "SavedSearch",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "The ISO country code of this phone number.",
            "in": "query",
            "name": "Geography.isoCountry",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The LATA of this phone number.",
            "in": "query",
            "name": "Geography.lata",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The rate center of this phone number.",
            "in": "query",
            "name": "Geography.rateCenter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The latitude coordinate of this phone number.",
            "in": "query",
            "name": "Geography.latitude",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "The longitude coordinate of this phone number.",
            "in": "query",
            "name": "Geography.longitude",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "The two-letter state or province abbreviation of this phone number.",
            "in": "query",
            "name": "Geography.region",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The locality/city of this phone number.",
            "in": "query",
            "name": "Geography.locality",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The postal (zip) code of this phone number.",
            "in": "query",
            "name": "Geography.postalCode",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Indicates whether a number has inbound voice connectivity into Twilioy",
            "in": "query",
            "name": "Capabilities.voice.inboundConnectivity",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Indicates whether a number has outbound voice connectivity from Twilio.",
            "in": "query",
            "name": "Capabilities.voice.outboundConnectivity",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Emergency 911 connectivity capable number.",
            "in": "query",
            "name": "Capabilities.voice.e911",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Fax capable number",
            "in": "query",
            "name": "Capabilities.voice.fax",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Sip Trunking capable number.",
            "in": "query",
            "name": "Capabilities.voice.sipTrunking",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Integer stating how many calls can be initiated per second.",
            "in": "query",
            "name": "Capabilities.voice.callsPerSecond",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Integer stating how many calls can be active at one time.",
            "in": "query",
            "name": "Capabilities.voice.concurrentCallsLimit",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "TThe length in seconds that a number can record a voicemail.",
            "in": "query",
            "name": "Capabilities.voice.longRecordLength",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Indicates if this number supports dtmf with inbound called party.",
            "in": "query",
            "name": "Capabilities.voice.inboundCalledDtmf",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Indicates if this number supports dtmf with inbound caller party.",
            "in": "query",
            "name": "Capabilities.voice.inboundCallerDtmf",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Inbound voice Caller ID (+E.164 format) preservation of a number.",
            "in": "query",
            "name": "Capabilities.voice.inboundCallerIdPreservation",
            "required": false,
            "schema": {
              "enum": [
                "none",
                "domestic",
                "international"
              ],
              "type": "string"
            }
          },
          {
            "description": "Inbound voice reachability of a number",
            "in": "query",
            "name": "Capabilities.voice.inboundReachability",
            "required": false,
            "schema": {
              "enum": [
                "domestic",
                "foreign",
                "global"
              ],
              "type": "string"
            }
          },
          {
            "description": "Indicates whether a number has inbound sms connectivity into Twilio",
            "in": "query",
            "name": "Capabilities.sms.inboundConnectivity",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Indicates whether a number has outbound sms connectivity from Twilio.",
            "in": "query",
            "name": "Capabilities.sms.outboundConnectivity",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Indicates if GSM-7 is supported.",
            "in": "query",
            "name": "Capabilities.sms.gsm7",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Indicates if USC-2 is supported for this ActiveNumber.",
            "in": "query",
            "name": "Capabilities.sms.ucs2",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Inbound SMS Sender Id Preservation of this Available Number.",
            "in": "query",
            "name": "Capabilities.sms.inboundSenderIdPreservation",
            "required": false,
            "schema": {
              "enum": [
                "none",
                "domestic",
                "international"
              ],
              "type": "string"
            }
          },
          {
            "description": "Inbound SMS Reachability of this Available Number.",
            "in": "query",
            "name": "Capabilities.sms.inboundReachability",
            "required": false,
            "schema": {
              "enum": [
                "domestic",
                "foreign",
                "global"
              ],
              "type": "string"
            }
          },
          {
            "description": "Integer showing the sms inbound message per second limit.",
            "in": "query",
            "name": "Capabilities.sms.inboundMps",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Indicates if GSM-7 concatenation is supported.",
            "in": "query",
            "name": "Capabilities.sms.gsm7Concatenation",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Indicates if UCS-2 concatenation is supported.",
            "in": "query",
            "name": "Capabilities.sms.ucs2Concatenation",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Indicates whether a number has inbound mms connectivity into Twilio",
            "in": "query",
            "name": "Capabilities.mms.inboundConnectivity",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Indicates whether a number has outbound mms connectivity from Twilio.",
            "in": "query",
            "name": "Capabilities.mms.outboundConnectivity",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The Capabilities.Mms.Inbound Reachability of this Available Number",
            "in": "query",
            "name": "Capabilities.mms.inboundReachability",
            "required": false,
            "schema": {
              "enum": [
                "domestic",
                "foreign",
                "global"
              ],
              "type": "string"
            }
          },
          {
            "description": "Integer showing the mms inbound message per second limit",
            "in": "query",
            "name": "Capabilities.mms.inboundMps",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "This indicates whether the phone number requires you or your customer to have an Address registered with Twilio.",
            "in": "query",
            "name": "Regulatory.addressRequirements",
            "required": false,
            "schema": {
              "enum": [
                "none",
                "any",
                "local",
                "foreign"
              ],
              "type": "string"
            }
          },
          {
            "description": "Minimum base recurring price for a number in US dollars.",
            "in": "query",
            "name": "MinBaseRecurringPrice",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Maximum base recurring price for a number in US dollars.",
            "in": "query",
            "name": "MaxBaseRecurringPrice",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Minimum base setup price for a number in US dollars.",
            "in": "query",
            "name": "MinBaseSetupPrice",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Maximum base setup price for a number in US dollars.",
            "in": "query",
            "name": "MaxBaseSetupPrice",
            "required": false,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "items": {
                      "items": {
                        "$ref": "#/components/schemas/preview.numbers.available_number"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/PortIn/Orders": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Retrieve a list of PortInOrder belonging to the account initiating the request.",
        "parameters": [
          {
            "description": "The country in iso code format.",
            "in": "query",
            "name": "IsoCountry",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Friendly name.",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Company name",
            "in": "query",
            "name": "CompanyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Authorized signatory First Name.",
            "in": "query",
            "name": "FirstName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Authorized signatory Last Name.",
            "in": "query",
            "name": "LastName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Street Number on Customer Service Record.",
            "in": "query",
            "name": "StreetNumber",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Street name on Customer Service Record.",
            "in": "query",
            "name": "StreetName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "City name in CSR.",
            "in": "query",
            "name": "City",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "State or region of Port-In Order.",
            "in": "query",
            "name": "Region",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Zip or Postal code.",
            "in": "query",
            "name": "PostalCode",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PortInOrder sid.",
            "in": "query",
            "name": "RequestedActivationDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Email.",
            "in": "query",
            "name": "StatusUpdatesEmail",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Status Callback URL.",
            "in": "query",
            "name": "StatusCallbackUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "Billing telephone number used for ownership verification.",
            "in": "query",
            "name": "BillingPhoneNumber",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The Status of this PortInOrder.",
            "in": "query",
            "name": "Status",
            "required": false,
            "schema": {
              "enum": [
                "twilio-processing",
                "received",
                "pending-loa",
                "processing",
                "customer-action-required",
                "review",
                "completed",
                "failed"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "items": {
                      "items": {
                        "$ref": "#/components/schemas/preview.port_in.port_order"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "Port-In one or more phone numbers to Twilio's platform.",
        "parameters": [],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.port_in.port_order"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/PortIn/Orders/AuthorizationDocuments": {
      "description": "TODO: Resource-level docs",
      "post": {
        "description": "Create an AuthorizationDocument for authorizing the port in of the phone number(s) in to Twilio's platform.",
        "parameters": [],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.port_in.authorization_document"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/PortIn/Orders/AuthorizationDocuments/{Sid}": {
      "delete": {
        "description": "Cancel a specific AuthorizationDocument.",
        "parameters": [
          {
            "description": "AuthorizationDocument sid.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PX[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Fetch a specific AuthorizationDocument.",
        "parameters": [
          {
            "description": "AuthorizationDocument sid.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PX[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.port_in.authorization_document"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/PortIn/Orders/{PortOrderSid}/Numbers": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Retrieve a list of PortInNumbers belonging to the account initiating the request.",
        "parameters": [
          {
            "description": "PortInOrder sid.",
            "in": "path",
            "name": "PortOrderSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PO[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "An E164 formatted phone number.",
            "in": "query",
            "name": "PhoneNumber",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PhoneNumber sid.",
            "in": "query",
            "name": "PhoneNumberSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The Status of this PortInNumber.",
            "in": "query",
            "name": "Status",
            "required": false,
            "schema": {
              "enum": [
                "initialized",
                "pending-carrier-processing",
                "carrier-processing",
                "accepted",
                "rejected",
                "ported-in",
                "pending-cancelation",
                "canceled",
                "failed"
              ],
              "type": "string"
            }
          },
          {
            "description": "Type of phone number.",
            "in": "query",
            "name": "Type",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "External carrier account number.",
            "in": "query",
            "name": "CarrierAccountNumber",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The current carrier of the phone number.",
            "in": "query",
            "name": "CurrentCarrier",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Current RespOrg of the toll-free number.",
            "in": "query",
            "name": "CurrentRespOrg",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Requested FOC date.",
            "in": "query",
            "name": "ConfirmedActivationDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "External ID of port for referencing.",
            "in": "query",
            "name": "PartnerReferenceId",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "items": {
                      "items": {
                        "$ref": "#/components/schemas/preview.port_in.port_order.port_number"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/PortIn/Orders/{PortOrderSid}/Numbers/{Sid}": {
      "delete": {
        "description": "Cancel the PortInNumber (only available when the status is in `initialized`, `pending-carrier-processing`, `carrier-processing`, `accepted`, `rejected`).",
        "parameters": [
          {
            "description": "PortOrder sid.",
            "in": "path",
            "name": "PortOrderSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PO[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "PortInNumber sid.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PU[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Fetch a specific PortInNumber.",
        "parameters": [
          {
            "description": "PortOrder sid.",
            "in": "path",
            "name": "PortOrderSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PO[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "PortInNumber sid.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PU[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.port_in.port_order.port_number"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "Updates a specific PortInNumber.",
        "parameters": [
          {
            "description": "PortOrder sid.",
            "in": "path",
            "name": "PortOrderSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PO[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "PortInNumber sid.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PU[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "External carrier account number.",
            "in": "query",
            "name": "CarrierAccountNumber",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PIN used to validate port outs of losing provider/carriers.",
            "in": "query",
            "name": "PhoneNumberPin",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.port_in.port_order.port_number"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/PortIn/Orders/{Sid}": {
      "delete": {
        "description": "Cancel the PortInOrder (only available when the status is in `received`).",
        "parameters": [
          {
            "description": "PortInOrder sid.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PO[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Fetch a specific PortInOrder.",
        "parameters": [
          {
            "description": "PortInOrder sid.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PO[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.port_in.port_order"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "Updates a specific PortInOrder.",
        "parameters": [
          {
            "description": "PortInOrder sid.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PO[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The country in iso code format.",
            "in": "query",
            "name": "IsoCountry",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Friendly name.",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Company name",
            "in": "query",
            "name": "CompanyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Authorized signatory First Name.",
            "in": "query",
            "name": "FirstName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Authorized signatory Last Name.",
            "in": "query",
            "name": "LastName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Street Number on Customer Service Record.",
            "in": "query",
            "name": "StreetNumber",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Street name on Customer Service Record.",
            "in": "query",
            "name": "StreetName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "City name in CSR.",
            "in": "query",
            "name": "City",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "State or region of Port-In Order.",
            "in": "query",
            "name": "Region",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Zip or Postal code.",
            "in": "query",
            "name": "PostalCode",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PortInOrder sid.",
            "in": "query",
            "name": "RequestedActivationDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Email.",
            "in": "query",
            "name": "StatusUpdatesEmail",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Status Callback URL.",
            "in": "query",
            "name": "StatusCallbackUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "Billing telephone number used for ownership verification.",
            "in": "query",
            "name": "BillingPhoneNumber",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.port_in.port_order"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/Studio/Flows": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Retrieve a list of all Flows.",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "flows": {
                      "items": {
                        "$ref": "#/components/schemas/preview.studio.flow"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/Studio/Flows/{FlowSid}/Engagements": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Retrieve a list of all Engagements for the Flow.",
        "parameters": [
          {
            "description": "Flow Sid.",
            "in": "path",
            "name": "FlowSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "engagements": {
                      "items": {
                        "$ref": "#/components/schemas/preview.studio.flow.engagement"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "Triggers a new Engagement for the Flow",
        "parameters": [
          {
            "description": "Flow Sid.",
            "in": "path",
            "name": "FlowSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "To",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "From",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "Parameters",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.studio.flow.engagement"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/Studio/Flows/{FlowSid}/Engagements/{EngagementSid}/Steps": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Retrieve a list of all Steps for an Engagement.",
        "parameters": [
          {
            "description": "Flow Sid.",
            "in": "path",
            "name": "FlowSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Engagement Sid.",
            "in": "path",
            "name": "EngagementSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FN[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "steps": {
                      "items": {
                        "$ref": "#/components/schemas/preview.studio.flow.engagement.step"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/Studio/Flows/{FlowSid}/Engagements/{EngagementSid}/Steps/{Sid}": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "FlowSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "EngagementSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FN[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FT[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.studio.flow.engagement.step"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/Studio/Flows/{FlowSid}/Engagements/{Sid}": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "FlowSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FN[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.studio.flow.engagement"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/Studio/Flows/{Sid}": {
      "delete": {
        "description": "Delete a specific Flow.",
        "parameters": [
          {
            "description": "A string that uniquely identifies this Flow.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.studio.flow"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/Sync/Services": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "services": {
                      "items": {
                        "$ref": "#/components/schemas/preview.sync.service"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "WebhookUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "ReachabilityWebhooksEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "AclEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.sync.service"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/Sync/Services/{ServiceSid}/Documents": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "documents": {
                      "items": {
                        "$ref": "#/components/schemas/preview.sync.service.document"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "UniqueName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "Data",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.sync.service.document"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/Sync/Services/{ServiceSid}/Documents/{DocumentSid}/Permissions": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Retrieve a list of all Permissions applying to a Sync Document.",
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Sync Document SID or unique name.",
            "in": "path",
            "name": "DocumentSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ET[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "permissions": {
                      "items": {
                        "$ref": "#/components/schemas/preview.sync.service.document.document_permission"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/Sync/Services/{ServiceSid}/Documents/{DocumentSid}/Permissions/{Identity}": {
      "delete": {
        "description": "Delete a specific Sync Document Permission.",
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Sync Document SID or unique name.",
            "in": "path",
            "name": "DocumentSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ET[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Identity of the user to whom the Sync Document Permission applies.",
            "in": "path",
            "name": "Identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Fetch a specific Sync Document Permission.",
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Sync Document SID or unique name.",
            "in": "path",
            "name": "DocumentSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ET[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Identity of the user to whom the Sync Document Permission applies.",
            "in": "path",
            "name": "Identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.sync.service.document.document_permission"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "Update an identity's access to a specific Sync Document.",
        "parameters": [
          {
            "description": "Sync Service Instance SID.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Sync Document SID or unique name.",
            "in": "path",
            "name": "DocumentSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ET[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Identity of the user to whom the Sync Document Permission applies.",
            "in": "path",
            "name": "Identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Read access.",
            "in": "query",
            "name": "Read",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Write access.",
            "in": "query",
            "name": "Write",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Manage access.",
            "in": "query",
            "name": "Manage",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.sync.service.document.document_permission"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/Sync/Services/{ServiceSid}/Documents/{Sid}": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ET[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ET[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.sync.service.document"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ET[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "Data",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.sync.service.document"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/Sync/Services/{ServiceSid}/Lists": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "lists": {
                      "items": {
                        "$ref": "#/components/schemas/preview.sync.service.sync_list"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "UniqueName",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.sync.service.sync_list"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/Sync/Services/{ServiceSid}/Lists/{ListSid}/Items": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "ListSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "Order",
            "required": false,
            "schema": {
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "From",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "Bounds",
            "required": false,
            "schema": {
              "enum": [
                "inclusive",
                "exclusive"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "items": {
                      "items": {
                        "$ref": "#/components/schemas/preview.sync.service.sync_list.sync_list_item"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "ListSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "Data",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.sync.service.sync_list.sync_list_item"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/Sync/Services/{ServiceSid}/Lists/{ListSid}/Items/{Index}": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "ListSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "Index",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "ListSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "Index",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.sync.service.sync_list.sync_list_item"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "ListSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "Index",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "Data",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.sync.service.sync_list.sync_list_item"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/Sync/Services/{ServiceSid}/Lists/{ListSid}/Permissions": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Retrieve a list of all Permissions applying to a Sync List.",
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Sync List SID or unique name.",
            "in": "path",
            "name": "ListSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "permissions": {
                      "items": {
                        "$ref": "#/components/schemas/preview.sync.service.sync_list.sync_list_permission"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/Sync/Services/{ServiceSid}/Lists/{ListSid}/Permissions/{Identity}": {
      "delete": {
        "description": "Delete a specific Sync List Permission.",
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Sync List SID or unique name.",
            "in": "path",
            "name": "ListSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Identity of the user to whom the Sync List Permission applies.",
            "in": "path",
            "name": "Identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Fetch a specific Sync List Permission.",
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Sync List SID or unique name.",
            "in": "path",
            "name": "ListSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Identity of the user to whom the Sync List Permission applies.",
            "in": "path",
            "name": "Identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.sync.service.sync_list.sync_list_permission"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "Update an identity's access to a specific Sync List.",
        "parameters": [
          {
            "description": "Sync Service Instance SID.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Sync List SID or unique name.",
            "in": "path",
            "name": "ListSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Identity of the user to whom the Sync List Permission applies.",
            "in": "path",
            "name": "Identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Read access.",
            "in": "query",
            "name": "Read",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Write access.",
            "in": "query",
            "name": "Write",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Manage access.",
            "in": "query",
            "name": "Manage",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.sync.service.sync_list.sync_list_permission"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/Sync/Services/{ServiceSid}/Lists/{Sid}": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ES[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.sync.service.sync_list"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/Sync/Services/{ServiceSid}/Maps": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "maps": {
                      "items": {
                        "$ref": "#/components/schemas/preview.sync.service.sync_map"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "UniqueName",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.sync.service.sync_map"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/Sync/Services/{ServiceSid}/Maps/{MapSid}/Items": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "MapSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "Order",
            "required": false,
            "schema": {
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "From",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "Bounds",
            "required": false,
            "schema": {
              "enum": [
                "inclusive",
                "exclusive"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "items": {
                      "items": {
                        "$ref": "#/components/schemas/preview.sync.service.sync_map.sync_map_item"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "MapSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "Data",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.sync.service.sync_map.sync_map_item"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/Sync/Services/{ServiceSid}/Maps/{MapSid}/Items/{Key}": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "MapSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "MapSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.sync.service.sync_map.sync_map_item"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "MapSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "Data",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.sync.service.sync_map.sync_map_item"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/Sync/Services/{ServiceSid}/Maps/{MapSid}/Permissions": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Retrieve a list of all Permissions applying to a Sync Map.",
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Sync Map SID or unique name.",
            "in": "path",
            "name": "MapSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "permissions": {
                      "items": {
                        "$ref": "#/components/schemas/preview.sync.service.sync_map.sync_map_permission"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/Sync/Services/{ServiceSid}/Maps/{MapSid}/Permissions/{Identity}": {
      "delete": {
        "description": "Delete a specific Sync Map Permission.",
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Sync Map SID or unique name.",
            "in": "path",
            "name": "MapSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Identity of the user to whom the Sync Map Permission applies.",
            "in": "path",
            "name": "Identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Fetch a specific Sync Map Permission.",
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Sync Map SID or unique name.",
            "in": "path",
            "name": "MapSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Identity of the user to whom the Sync Map Permission applies.",
            "in": "path",
            "name": "Identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.sync.service.sync_map.sync_map_permission"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "Update an identity's access to a specific Sync Map.",
        "parameters": [
          {
            "description": "Sync Service Instance SID.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Sync Map SID or unique name.",
            "in": "path",
            "name": "MapSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Identity of the user to whom the Sync Map Permission applies.",
            "in": "path",
            "name": "Identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Read access.",
            "in": "query",
            "name": "Read",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Write access.",
            "in": "query",
            "name": "Write",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Manage access.",
            "in": "query",
            "name": "Manage",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.sync.service.sync_map.sync_map_permission"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/Sync/Services/{ServiceSid}/Maps/{Sid}": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.sync.service.sync_map"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/Sync/Services/{Sid}": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.sync.service"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "WebhookUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "ReachabilityWebhooksEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "AclEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.sync.service"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/TrustedComms/Business/PhoneCalls": {
      "description": "TODO: Resource-level docs",
      "post": {
        "description": "Initiates a Branded Call.",
        "parameters": [
          {
            "description": "Twilio number from which to originate the call",
            "in": "query",
            "name": "From",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The terminating Phone Number",
            "in": "query",
            "name": "To",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The business reason for this phone call",
            "in": "query",
            "name": "Reason",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Refers to the Voice API Initiate Call parameter",
            "in": "query",
            "name": "ApplicationSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Refers to the Voice API Initiate Call parameter",
            "in": "query",
            "name": "CallerId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Refers to the Voice API Initiate Call parameter",
            "in": "query",
            "name": "FallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "Refers to the Voice API Initiate Call parameter",
            "in": "query",
            "name": "FallbackUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "Refers to the Voice API Initiate Call parameter",
            "in": "query",
            "name": "MachineDetection",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Refers to the Voice API Initiate Call parameter",
            "in": "query",
            "name": "MachineDetectionSilenceTimeout",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Refers to the Voice API Initiate Call parameter",
            "in": "query",
            "name": "MachineDetectionSpeechEndThreshold",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Refers to the Voice API Initiate Call parameter",
            "in": "query",
            "name": "MachineDetectionSpeechThreshold",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Refers to the Voice API Initiate Call parameter",
            "in": "query",
            "name": "MachineDetectionTimeout",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Refers to the Voice API Initiate Call parameter",
            "in": "query",
            "name": "Method",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "Refers to the Voice API Initiate Call parameter",
            "in": "query",
            "name": "Record",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Refers to the Voice API Initiate Call parameter",
            "in": "query",
            "name": "RecordingChannels",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Refers to the Voice API Initiate Call parameter",
            "in": "query",
            "name": "RecordingStatusCallback",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Refers to the Voice API Initiate Call parameter",
            "in": "query",
            "name": "RecordingStatusCallbackEvent",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Refers to the Voice API Initiate Call parameter",
            "in": "query",
            "name": "RecordingStatusCallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "Refers to the Voice API Initiate Call parameter",
            "in": "query",
            "name": "SendDigits",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Refers to the Voice API Initiate Call parameter",
            "in": "query",
            "name": "SipAuthPassword",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Refers to the Voice API Initiate Call parameter",
            "in": "query",
            "name": "SipAuthUsername",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Refers to the Voice API Initiate Call parameter",
            "in": "query",
            "name": "StatusCallback",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "Refers to the Voice API Initiate Call parameter",
            "in": "query",
            "name": "StatusCallbackEvent",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Refers to the Voice API Initiate Call parameter",
            "in": "query",
            "name": "StatusCallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "Refers to the Voice API Initiate Call parameter",
            "in": "query",
            "name": "Timeout",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Refers to the Voice API Initiate Call parameter",
            "in": "query",
            "name": "Trim",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Refers to the Voice API Initiate Call parameter",
            "in": "query",
            "name": "Url",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.trusted_comms.phone_call"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "account_sid",
        "from",
        "to",
        "reason",
        "date_created"
      ]
    },
    "/TrustedComms/CurrentCall": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Retrieve a current call given the originating and terminating number.",
        "parameters": [
          {
            "description": "The originating Phone Number",
            "in": "query",
            "name": "From",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The terminating Phone Number",
            "in": "query",
            "name": "To",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.trusted_comms.current_call"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "from",
        "to",
        "reason",
        "date_created"
      ]
    },
    "/TrustedComms/Devices": {
      "description": "TODO: Resource-level docs",
      "post": {
        "description": "Registers a new Device and Push Token against Trusted Comms API. This works specially for iOS devices, which don't allow the SDK to know when there's an incoming call, nor the originating number.",
        "parameters": [
          {
            "description": "The end user Phone Number",
            "in": "query",
            "name": "PhoneNumber",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The Push Token for this Phone Number",
            "in": "query",
            "name": "PushToken",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.trusted_comms.device"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "phone_number",
        "binding_sid"
      ]
    },
    "/Verification/Services": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Retrieve a list of all Phone Verification Services for an account.",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "services": {
                      "items": {
                        "$ref": "#/components/schemas/preview.acc_security.service"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "Create a new Verification Service.",
        "parameters": [
          {
            "description": "Friendly name of the service",
            "in": "query",
            "name": "Name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Length of verification code. Valid values are 4-10",
            "in": "query",
            "name": "CodeLength",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.acc_security.service"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/Verification/Services/{ServiceSid}/VerificationCheck": {
      "description": "TODO: Resource-level docs",
      "post": {
        "description": "challenge a specific Verification Check.",
        "parameters": [
          {
            "description": "A string that uniquely identifies the Service.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^VA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The verification string",
            "in": "query",
            "name": "Code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "To phonenumber",
            "in": "query",
            "name": "To",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.acc_security.service.verification_check"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/Verification/Services/{ServiceSid}/Verifications": {
      "description": "TODO: Resource-level docs",
      "post": {
        "description": "Create a new Verification for a To number using a Service",
        "parameters": [
          {
            "description": "Service Sid.",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^VA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "To phonenumber",
            "in": "query",
            "name": "To",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "sms or call",
            "in": "query",
            "name": "Channel",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A custom message for this verification",
            "in": "query",
            "name": "CustomMessage",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.acc_security.service.verification"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/Verification/Services/{Sid}": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Fetch specific Verification Service Instance.",
        "parameters": [
          {
            "description": "Verification Service Instance SID.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^VA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.acc_security.service"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "Update a specific Phone Verification Service.",
        "parameters": [
          {
            "description": "Service Sid.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^VA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Friendly name of the service",
            "in": "query",
            "name": "Name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Length of verification code. Valid values are 4-10",
            "in": "query",
            "name": "CodeLength",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.acc_security.service"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/iam/Accounts/{AccountSid}/Tokens": {
      "description": "TODO: Resource-level docs",
      "post": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.iam.token"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/iam/Accounts/{AccountSid}/Tokens/refresh": {
      "description": "TODO: Resource-level docs",
      "post": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.iam.refresh_token"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/iam/Accounts/{AccountSid}/Tokens/validate": {
      "description": "TODO: Resource-level docs",
      "post": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.iam.validate_token"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/iam/Accounts/{AccountSid}/authenticate": {
      "description": "TODO: Resource-level docs",
      "post": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.iam.authenticate"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/iam/Accounts/{AccountSid}/saml2": {
      "description": "TODO: Resource-level docs",
      "post": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "SAMLResponse",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "RelayState",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "303": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.iam.saml2"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/insights/Calls/Report": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "Date to scope query start",
            "in": "query",
            "name": "StartDateTime",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Date to scope query end",
            "in": "query",
            "name": "EndDateTime",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.insights.call.report"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/insights/Calls/Report/Aspects": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "aspects": {
                      "items": {
                        "$ref": "#/components/schemas/preview.insights.call.report.aspects"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/insights/Calls/Report/Aspects/{Aspect}": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The report aspect to read.",
            "in": "path",
            "name": "Aspect",
            "required": true,
            "schema": {
              "enum": [
                "Clients",
                "IpAddresses",
                "Browsers",
                "OperatingSystems",
                "Regions",
                "Direction"
              ],
              "type": "string"
            }
          },
          {
            "description": "Query by browser type",
            "in": "query",
            "name": "Browser",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Query by region",
            "in": "query",
            "name": "Region",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Query by operating system of client",
            "in": "query",
            "name": "OperatingSystem",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Query by client",
            "in": "query",
            "name": "Client",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Query by call direction (inbound/outbound)",
            "in": "query",
            "name": "Direction",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Query by IP Address",
            "in": "query",
            "name": "IpAddress",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Date to scope query start",
            "in": "query",
            "name": "StartDateTime",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Date to scope query end",
            "in": "query",
            "name": "EndDateTime",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "response": {
                      "items": {
                        "$ref": "#/components/schemas/preview.insights.call.report.aspects.aspect_reports"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/insights/Calls/{CallSid}/Events": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The call sid that uniquely identifies the call",
            "in": "path",
            "name": "CallSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Filter event list for `INFO`, `DEBUG`, `WARNING`, or `ERROR` level events.",
            "in": "query",
            "name": "Level",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter event list for events from specific groups.",
            "in": "query",
            "name": "Group",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The identifier of the event to read.",
            "in": "query",
            "name": "Name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "response": {
                      "items": {
                        "$ref": "#/components/schemas/preview.insights.call.event"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/insights/Calls/{CallSid}/Metrics": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The call sid that uniquely identifies the call.",
            "in": "path",
            "name": "CallSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "response": {
                      "items": {
                        "$ref": "#/components/schemas/preview.insights.call.metric"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/insights/Calls/{CallSid}/Summary": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The call sid that uniquely identifies the call",
            "in": "path",
            "name": "CallSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.insights.call.summary"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/marketplace/AvailableAddOns": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Retrieve a list of Add-ons currently available to be installed.",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "available_add_ons": {
                      "items": {
                        "$ref": "#/components/schemas/preview.marketplace.available_add_on"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/marketplace/AvailableAddOns/{AvailableAddOnSid}/Extensions": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Retrieve a list of Extensions for the Available Add-on.",
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "AvailableAddOnSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^XB[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "extensions": {
                      "items": {
                        "$ref": "#/components/schemas/preview.marketplace.available_add_on.available_add_on_extension"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/marketplace/AvailableAddOns/{AvailableAddOnSid}/Extensions/{Sid}": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Fetch an instance of an Extension for the Available Add-on.",
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "AvailableAddOnSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^XB[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique Extension Sid",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^XF[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.marketplace.available_add_on.available_add_on_extension"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/marketplace/AvailableAddOns/{Sid}": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Fetch an instance of an Add-on currently available to be installed.",
        "parameters": [
          {
            "description": "The unique Available Add-on Sid",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^XB[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.marketplace.available_add_on"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/marketplace/InstalledAddOns": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Retrieve a list of Add-ons currently installed on this Account.",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "installed_add_ons": {
                      "items": {
                        "$ref": "#/components/schemas/preview.marketplace.installed_add_on"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "Install an Add-on for the Account specified.",
        "parameters": [
          {
            "description": "A string that uniquely identifies the Add-on to install",
            "in": "query",
            "name": "AvailableAddOnSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^XB[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A boolean reflecting your acceptance of the Terms of Service",
            "in": "query",
            "name": "AcceptTermsOfService",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The JSON object representing the configuration",
            "in": "query",
            "name": "Configuration",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "description": "The string that uniquely identifies this Add-on installation",
            "in": "query",
            "name": "UniqueName",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.marketplace.installed_add_on"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/marketplace/InstalledAddOns/{InstalledAddOnSid}/Extensions": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Retrieve a list of Extensions for the Installed Add-on.",
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "InstalledAddOnSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^XE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "extensions": {
                      "items": {
                        "$ref": "#/components/schemas/preview.marketplace.installed_add_on.installed_add_on_extension"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/marketplace/InstalledAddOns/{InstalledAddOnSid}/Extensions/{Sid}": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Fetch an instance of an Extension for the Installed Add-on.",
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "InstalledAddOnSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^XE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique Extension Sid",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^XF[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.marketplace.installed_add_on.installed_add_on_extension"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "Update an Extension for an Add-on installation.",
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "InstalledAddOnSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^XE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^XF[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A Boolean indicating if the Extension will be invoked",
            "in": "query",
            "name": "Enabled",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.marketplace.installed_add_on.installed_add_on_extension"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/marketplace/InstalledAddOns/{Sid}": {
      "delete": {
        "description": "Remove an Add-on installation from your account",
        "parameters": [
          {
            "description": "The Installed Add-on Sid to delete",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^XE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Fetch an instance of an Add-on currently installed on this Account.",
        "parameters": [
          {
            "description": "The unique Installed Add-on Sid",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^XE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.marketplace.installed_add_on"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "Update an Add-on installation for the Account specified.",
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^XE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The JSON object representing the configuration",
            "in": "query",
            "name": "Configuration",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "description": "The string that uniquely identifies this Add-on installation",
            "in": "query",
            "name": "UniqueName",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.marketplace.installed_add_on"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/payment/Credentials/ACICommerceGateway": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Retrieves a collection of ACI Commerce Gateway Credential metadata (not actual credentials) belonging to the account used to make the request",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "credentials": {
                      "items": {
                        "$ref": "#/components/schemas/preview.payment.credential_aci_commerce_gateway"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "Create a new ACI Commerce Gateway Credential",
        "parameters": [
          {
            "description": "Json String containing ACI Commerce Gateway credentials with format (name and value must be in double quotes) {account_id:<TRANSPORTAL_IDENTIFICATION_NUMBER>, password_hash:<SHA1_TRANSPORTAL_PASSWORD>}",
            "in": "query",
            "name": "Credentials",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "description": "A human readable description of this resource",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The Subaccount this Credential should be associated with.",
            "in": "query",
            "name": "AccountSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.payment.credential_aci_commerce_gateway"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/payment/Credentials/ACICommerceGateway/{Sid}": {
      "delete": {
        "description": "Delete a Credential from your account",
        "parameters": [
          {
            "description": "A 34 character string that uniquely identifies this resource.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Fetch the ACI Commerce Gateway credential metadata (not actual credentials) specified by the provided Credential Sid",
        "parameters": [
          {
            "description": "Fetch by unique Credential Sid",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.payment.credential_aci_commerce_gateway"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "Modify the ACI Commerce Gateway credentials of a given sid",
        "parameters": [
          {
            "description": "Update by unique Credential Sid",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Json String containing ACI Commerce Gateway credentials with format (name and value must be in double quotes) {account_id:<TRANSPORTAL_IDENTIFICATION_NUMBER>, password_hash:<SHA1_TRANSPORTAL_PASSWORD>}",
            "in": "query",
            "name": "Credentials",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "description": "A human readable description of this resource",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.payment.credential_aci_commerce_gateway"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/payment/Credentials/Stripe": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Retrieves a collection of Stripe Credential metadata (not actual credentials) belonging to the account used to make the request",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "credentials": {
                      "items": {
                        "$ref": "#/components/schemas/preview.payment.credential_stripe"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "Create a new Stripe Credential",
        "parameters": [
          {
            "description": "Following Json format containing Stripe credentials are supported (name and value must be in double quotes). 1.{api_key:<API_KEY>}",
            "in": "query",
            "name": "Credentials",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "description": "A human readable description of this resource",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The Subaccount this Credential should be associated with.",
            "in": "query",
            "name": "AccountSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.payment.credential_stripe"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/payment/Credentials/Stripe/{Sid}": {
      "delete": {
        "description": "Delete a Credential from your account",
        "parameters": [
          {
            "description": "A 34 character string that uniquely identifies this resource.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Fetch the Stripe credentials metadata (not actual credentials) specified by the provided Credential Sid",
        "parameters": [
          {
            "description": "Fetch by unique Credential Sid",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.payment.credential_stripe"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "Modify the Stripe credentials of a given sid",
        "parameters": [
          {
            "description": "Update by unique Credential Sid",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Following Json format containing Stripe credentials are supported (name and value must be in double quotes). 1.{api_key:<API_KEY>}",
            "in": "query",
            "name": "Credentials",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "description": "A human readable description of this resource",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.payment.credential_stripe"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/understand/Assistants": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "assistants": {
                      "items": {
                        "$ref": "#/components/schemas/preview.understand.assistant"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "A text description for the Assistant. It is non-unique and can up to 255 characters long.",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A boolean that specifies whether queries should be logged for 30 days further training. If false, no queries will be stored, if true, queries will be stored for 30 days and deleted thereafter. Defaults to true if no value is provided.",
            "in": "query",
            "name": "LogQueries",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long.",
            "in": "query",
            "name": "UniqueName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A user-provided URL to send event callbacks to.",
            "in": "query",
            "name": "CallbackUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "Space-separated list of callback events that will trigger callbacks.",
            "in": "query",
            "name": "CallbackEvents",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The JSON actions to be executed when the user's input is not recognized as matching any Task.",
            "in": "query",
            "name": "FallbackActions",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "description": "The JSON actions to be executed on inbound phone calls when the Assistant has to say something first.",
            "in": "query",
            "name": "InitiationActions",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "description": "The JSON object that holds the style sheet for the assistant",
            "in": "query",
            "name": "StyleSheet",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/understand/Assistants/{AssistantSid}/Dialogues/{Sid}": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "AssistantSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UK[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.dialogue"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/understand/Assistants/{AssistantSid}/FallbackActions": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "AssistantSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.assistant_fallback_actions"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "AssistantSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "FallbackActions",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.assistant_fallback_actions"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/understand/Assistants/{AssistantSid}/FieldTypes": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "AssistantSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "field_types": {
                      "items": {
                        "$ref": "#/components/schemas/preview.understand.assistant.field_type"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "AssistantSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long.",
            "in": "query",
            "name": "UniqueName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A user-provided string that identifies this resource. It is non-unique and can up to 255 characters long.",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.field_type"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/understand/Assistants/{AssistantSid}/FieldTypes/{FieldTypeSid}/FieldValues": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "AssistantSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "FieldTypeSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UB[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "An ISO language-country string of the value. For example: en-US",
            "in": "query",
            "name": "Language",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "field_values": {
                      "items": {
                        "$ref": "#/components/schemas/preview.understand.assistant.field_type.field_value"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "AssistantSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "FieldTypeSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UB[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "An ISO language-country string of the value.",
            "in": "query",
            "name": "Language",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long.",
            "in": "query",
            "name": "Value",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A value that indicates this field value is a synonym of. Empty if the value is not a synonym.",
            "in": "query",
            "name": "SynonymOf",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.field_type.field_value"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/understand/Assistants/{AssistantSid}/FieldTypes/{FieldTypeSid}/FieldValues/{Sid}": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "AssistantSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "FieldTypeSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UB[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "AssistantSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "FieldTypeSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UB[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.field_type.field_value"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/understand/Assistants/{AssistantSid}/FieldTypes/{Sid}": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "AssistantSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UB[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "AssistantSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UB[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.field_type"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "AssistantSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UB[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A user-provided string that identifies this resource. It is non-unique and can up to 255 characters long.",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long.",
            "in": "query",
            "name": "UniqueName",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.field_type"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/understand/Assistants/{AssistantSid}/InitiationActions": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "AssistantSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.assistant_initiation_actions"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "AssistantSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "InitiationActions",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.assistant_initiation_actions"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/understand/Assistants/{AssistantSid}/ModelBuilds": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "AssistantSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "model_builds": {
                      "items": {
                        "$ref": "#/components/schemas/preview.understand.assistant.model_build"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "AssistantSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "StatusCallback",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long. For example: v0.1",
            "in": "query",
            "name": "UniqueName",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.model_build"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/understand/Assistants/{AssistantSid}/ModelBuilds/{Sid}": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "AssistantSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UG[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "AssistantSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UG[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.model_build"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "AssistantSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UG[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long. For example: v0.1",
            "in": "query",
            "name": "UniqueName",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.model_build"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/understand/Assistants/{AssistantSid}/Queries": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The unique ID of the parent Assistant.",
            "in": "path",
            "name": "AssistantSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "An ISO language-country string of the sample.",
            "in": "query",
            "name": "Language",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The Model Build Sid or unique name of the Model Build to be queried.",
            "in": "query",
            "name": "ModelBuild",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UG[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string that described the query status. The values can be: pending_review, reviewed, discarded",
            "in": "query",
            "name": "Status",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "queries": {
                      "items": {
                        "$ref": "#/components/schemas/preview.understand.assistant.query"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The unique ID of the parent Assistant.",
            "in": "path",
            "name": "AssistantSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "An ISO language-country string of the sample.",
            "in": "query",
            "name": "Language",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. It can be up to 2048 characters long.",
            "in": "query",
            "name": "Query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Constraints the query to a set of tasks. Useful when you need to constrain the paths the user can take. Tasks should be comma separated task-unique-name-1, task-unique-name-2",
            "in": "query",
            "name": "Tasks",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The Model Build Sid or unique name of the Model Build to be queried.",
            "in": "query",
            "name": "ModelBuild",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UG[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Constraints the query to a given Field with an task. Useful when you know the Field you are expecting. It accepts one field in the format task-unique-name-1:field-unique-name",
            "in": "query",
            "name": "Field",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.query"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/understand/Assistants/{AssistantSid}/Queries/{Sid}": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": "The unique ID of the Assistant.",
            "in": "path",
            "name": "AssistantSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A 34 character string that uniquely identifies this resource.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The unique ID of the Assistant.",
            "in": "path",
            "name": "AssistantSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A 34 character string that uniquely identifies this resource.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.query"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The unique ID of the parent Assistant.",
            "in": "path",
            "name": "AssistantSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A 34 character string that uniquely identifies this resource.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "An optional reference to the Sample created from this query.",
            "in": "query",
            "name": "SampleSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UF[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string that described the query status. The values can be: pending_review, reviewed, discarded",
            "in": "query",
            "name": "Status",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.query"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/understand/Assistants/{AssistantSid}/StyleSheet": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Returns Style sheet JSON object for this Assistant",
        "parameters": [
          {
            "description": "The unique ID of the Assistant",
            "in": "path",
            "name": "AssistantSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.style_sheet"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "Updates the style sheet for an assistant identified by {AssistantSid} or {AssistantUniqueName}.",
        "parameters": [
          {
            "description": "The unique ID of the Assistant",
            "in": "path",
            "name": "AssistantSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The JSON Style sheet string",
            "in": "query",
            "name": "StyleSheet",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.style_sheet"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/understand/Assistants/{AssistantSid}/Tasks": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The unique ID of the Assistant.",
            "in": "path",
            "name": "AssistantSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "tasks": {
                      "items": {
                        "$ref": "#/components/schemas/preview.understand.assistant.task"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The unique ID of the Assistant.",
            "in": "path",
            "name": "AssistantSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long.",
            "in": "query",
            "name": "UniqueName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A user-provided string that identifies this resource. It is non-unique and can up to 255 characters long.",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A user-provided JSON object encoded as a string to specify the actions for this task. It is optional and non-unique.",
            "in": "query",
            "name": "Actions",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "description": "User-provided HTTP endpoint where from the assistant fetches actions",
            "in": "query",
            "name": "ActionsUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.task"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/understand/Assistants/{AssistantSid}/Tasks/{Sid}": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": "The unique ID of the Assistant.",
            "in": "path",
            "name": "AssistantSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A 34 character string that uniquely identifies this resource.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The unique ID of the Assistant.",
            "in": "path",
            "name": "AssistantSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A 34 character string that uniquely identifies this resource.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.task"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The unique ID of the Assistant.",
            "in": "path",
            "name": "AssistantSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A 34 character string that uniquely identifies this resource.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A user-provided string that identifies this resource. It is non-unique and can up to 255 characters long.",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long.",
            "in": "query",
            "name": "UniqueName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A user-provided JSON object encoded as a string to specify the actions for this task. It is optional and non-unique.",
            "in": "query",
            "name": "Actions",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "description": "User-provided HTTP endpoint where from the assistant fetches actions",
            "in": "query",
            "name": "ActionsUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.task"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/understand/Assistants/{AssistantSid}/Tasks/{TaskSid}/Actions": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Returns JSON actions for this Task.",
        "parameters": [
          {
            "description": "The unique ID of the parent Assistant.",
            "in": "path",
            "name": "AssistantSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique ID of the Task.",
            "in": "path",
            "name": "TaskSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.task.task_actions"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": "Updates the actions of an Task identified by {TaskSid} or {TaskUniqueName}.",
        "parameters": [
          {
            "description": "The unique ID of the parent Assistant.",
            "in": "path",
            "name": "AssistantSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique ID of the Task.",
            "in": "path",
            "name": "TaskSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The JSON actions that instruct the Assistant how to perform this task.",
            "in": "query",
            "name": "Actions",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.task.task_actions"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/understand/Assistants/{AssistantSid}/Tasks/{TaskSid}/Fields": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The unique ID of the Assistant.",
            "in": "path",
            "name": "AssistantSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique ID of the Task associated with this Field.",
            "in": "path",
            "name": "TaskSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "fields": {
                      "items": {
                        "$ref": "#/components/schemas/preview.understand.assistant.task.field"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The unique ID of the parent Assistant.",
            "in": "path",
            "name": "AssistantSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique ID of the Task associated with this Field.",
            "in": "path",
            "name": "TaskSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique name or sid of the FieldType. It can be any Built-in Field Type or the unique_name or sid of a custom Field Type.",
            "in": "query",
            "name": "FieldType",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long.",
            "in": "query",
            "name": "UniqueName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.task.field"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/understand/Assistants/{AssistantSid}/Tasks/{TaskSid}/Fields/{Sid}": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": "The unique ID of the Assistant.",
            "in": "path",
            "name": "AssistantSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique ID of the Task associated with this Field.",
            "in": "path",
            "name": "TaskSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A 34 character string that uniquely identifies this resource.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The unique ID of the Assistant.",
            "in": "path",
            "name": "AssistantSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique ID of the Task associated with this Field.",
            "in": "path",
            "name": "TaskSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A 34 character string that uniquely identifies this resource.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.task.field"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/understand/Assistants/{AssistantSid}/Tasks/{TaskSid}/Samples": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The unique ID of the Assistant.",
            "in": "path",
            "name": "AssistantSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique ID of the Task associated with this Sample.",
            "in": "path",
            "name": "TaskSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "An ISO language-country string of the sample.",
            "in": "query",
            "name": "Language",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "samples": {
                      "items": {
                        "$ref": "#/components/schemas/preview.understand.assistant.task.sample"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The unique ID of the Assistant.",
            "in": "path",
            "name": "AssistantSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique ID of the Task associated with this Sample.",
            "in": "path",
            "name": "TaskSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "An ISO language-country string of the sample.",
            "in": "query",
            "name": "Language",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The text example of how end-users may express this task. The sample may contain Field tag blocks.",
            "in": "query",
            "name": "TaggedText",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The communication channel the sample was captured. It can be: voice, sms, chat, alexa, google-assistant, or slack. If not included the value will be null",
            "in": "query",
            "name": "SourceChannel",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.task.sample"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/understand/Assistants/{AssistantSid}/Tasks/{TaskSid}/Samples/{Sid}": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": "The unique ID of the Assistant.",
            "in": "path",
            "name": "AssistantSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique ID of the Task associated with this Sample.",
            "in": "path",
            "name": "TaskSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A 34 character string that uniquely identifies this resource.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UF[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The unique ID of the Assistant.",
            "in": "path",
            "name": "AssistantSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique ID of the Task associated with this Sample.",
            "in": "path",
            "name": "TaskSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A 34 character string that uniquely identifies this resource.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UF[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.task.sample"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The unique ID of the Assistant.",
            "in": "path",
            "name": "AssistantSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique ID of the Task associated with this Sample.",
            "in": "path",
            "name": "TaskSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A 34 character string that uniquely identifies this resource.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UF[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "An ISO language-country string of the sample.",
            "in": "query",
            "name": "Language",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The text example of how end-users may express this task. The sample may contain Field tag blocks.",
            "in": "query",
            "name": "TaggedText",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The communication channel the sample was captured. It can be: voice, sms, chat, alexa, google-assistant, or slack. If not included the value will be null",
            "in": "query",
            "name": "SourceChannel",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.task.sample"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/understand/Assistants/{AssistantSid}/Tasks/{TaskSid}/Statistics": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The unique ID of the parent Assistant.",
            "in": "path",
            "name": "AssistantSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique ID of the Task associated with this Field.",
            "in": "path",
            "name": "TaskSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant.task.task_statistics"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/understand/Assistants/{Sid}": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": "A 34 character string that uniquely identifies this resource.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "A 34 character string that uniquely identifies this resource.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "A 34 character string that uniquely identifies this resource.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A text description for the Assistant. It is non-unique and can up to 255 characters long.",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A boolean that specifies whether queries should be logged for 30 days further training. If false, no queries will be stored, if true, queries will be stored for 30 days and deleted thereafter. Defaults to true if no value is provided.",
            "in": "query",
            "name": "LogQueries",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long.",
            "in": "query",
            "name": "UniqueName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A user-provided URL to send event callbacks to.",
            "in": "query",
            "name": "CallbackUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "Space-separated list of callback events that will trigger callbacks.",
            "in": "query",
            "name": "CallbackEvents",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The JSON actions to be executed when the user's input is not recognized as matching any Task.",
            "in": "query",
            "name": "FallbackActions",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "description": "The JSON actions to be executed on inbound phone calls when the Assistant has to say something first.",
            "in": "query",
            "name": "InitiationActions",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "description": "The JSON object that holds the style sheet for the assistant",
            "in": "query",
            "name": "StyleSheet",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.understand.assistant"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/wireless/Commands": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "query",
            "name": "Device",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "Sim",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "Status",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "Direction",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "commands": {
                      "items": {
                        "$ref": "#/components/schemas/preview.wireless.command"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "query",
            "name": "Command",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "Device",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "Sim",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "CallbackMethod",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "CallbackUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "CommandMode",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "IncludeSid",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.wireless.command"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/wireless/Commands/{Sid}": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^DC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.wireless.command"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/wireless/RatePlans": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "rate_plans": {
                      "items": {
                        "$ref": "#/components/schemas/preview.wireless.rate_plan"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "query",
            "name": "UniqueName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "DataEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "DataLimit",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "DataMetering",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "MessagingEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "VoiceEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "CommandsEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "NationalRoamingEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "InternationalRoaming",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.wireless.rate_plan"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/wireless/RatePlans/{Sid}": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^WP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^WP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.wireless.rate_plan"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^WP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "UniqueName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.wireless.rate_plan"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/wireless/Sims": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "query",
            "name": "Status",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "Iccid",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "RatePlan",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "EId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "SimRegistrationCode",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "sims": {
                      "items": {
                        "$ref": "#/components/schemas/preview.wireless.sim"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/wireless/Sims/{Sid}": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^DE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.wireless.sim"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^DE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "UniqueName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "CallbackMethod",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "CallbackUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "RatePlan",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^WP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "Status",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "CommandsCallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "CommandsCallbackUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "SmsFallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "SmsFallbackUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "SmsMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "SmsUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "VoiceFallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "VoiceFallbackUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "VoiceMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "VoiceUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.wireless.sim"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    },
    "/wireless/Sims/{SimSid}/Usage": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "SimSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^DE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "End",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "Start",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/preview.wireless.sim.usage"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://preview.twilio.com"
        }
      ],
      "x-default-output-properties": []
    }
  },
  "tags": [
    {
      "description": "PLEASE NOTE that this is a Preview product that is subject to change. Use it with caution. If you currently do not have developer preview access, please contact help@twilio.com.",
      "name": "Preview"
    }
  ]
}