{
  "components": {
    "schemas": {
      "notify.v1.credential": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "friendly_name": {
            "type": "string"
          },
          "sandbox": {
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^CR[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "type": {
            "enum": [
              "gcm",
              "apn",
              "fcm"
            ],
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "notify.v1.service": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "alexa_skill_id": {
            "type": "string"
          },
          "apn_credential_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^CR[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "default_alexa_notification_protocol_version": {
            "type": "string"
          },
          "default_apn_notification_protocol_version": {
            "type": "string"
          },
          "default_fcm_notification_protocol_version": {
            "type": "string"
          },
          "default_gcm_notification_protocol_version": {
            "type": "string"
          },
          "facebook_messenger_page_id": {
            "type": "string"
          },
          "fcm_credential_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^CR[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "friendly_name": {
            "type": "string"
          },
          "gcm_credential_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^CR[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "links": {
            "patternProperties": {
              "^.+$": {
                "format": "uri",
                "type": "string"
              }
            },
            "type": "object"
          },
          "log_enabled": {
            "type": "boolean"
          },
          "messaging_service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^MG[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "notify.v1.service.binding": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "binding_type": {
            "type": "string"
          },
          "credential_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^CR[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "endpoint": {
            "type": "string"
          },
          "identity": {
            "type": "string"
          },
          "links": {
            "patternProperties": {
              "^.+$": {
                "format": "uri",
                "type": "string"
              }
            },
            "type": "object"
          },
          "notification_protocol_version": {
            "type": "string"
          },
          "service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^BS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "notify.v1.service.notification": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "alexa": {
            "type": "object"
          },
          "apn": {
            "type": "object"
          },
          "body": {
            "type": "string"
          },
          "data": {
            "type": "object"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "facebook_messenger": {
            "type": "object"
          },
          "fcm": {
            "type": "object"
          },
          "gcm": {
            "type": "object"
          },
          "identities": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "priority": {
            "enum": [
              "high",
              "low"
            ],
            "type": "string"
          },
          "segments": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^NO[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sms": {
            "type": "object"
          },
          "sound": {
            "type": "string"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "title": {
            "type": "string"
          },
          "ttl": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "notify.v1.service.segment": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^GS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "unique_name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "notify.v1.service.user": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "identity": {
            "type": "string"
          },
          "links": {
            "patternProperties": {
              "^.+$": {
                "format": "uri",
                "type": "string"
              }
            },
            "type": "object"
          },
          "segments": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^NU[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "notify.v1.service.user.segment_membership": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "identity": {
            "type": "string"
          },
          "segment": {
            "type": "string"
          },
          "service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "notify.v1.service.user.user_binding": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "binding_type": {
            "type": "string"
          },
          "credential_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^CR[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "endpoint": {
            "type": "string"
          },
          "identity": {
            "type": "string"
          },
          "links": {
            "patternProperties": {
              "^.+$": {
                "format": "uri",
                "type": "string"
              }
            },
            "type": "object"
          },
          "notification_protocol_version": {
            "type": "string"
          },
          "service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^BS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "accountSid_authToken": {
        "scheme": "basic",
        "type": "http"
      }
    }
  },
  "info": {
    "contact": {
      "email": "support@twilio.com",
      "name": "Twilio Support",
      "url": "https://support.twilio.com"
    },
    "description": "This is the public Twilio REST API.",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "termsOfService": "https://www.twilio.com/legal/tos",
    "title": "Twilio REST API",
    "version": "81ff5a4"
  },
  "openapi": "3.0.1",
  "paths": {
    "/v1/Credentials": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "credentials": {
                      "items": {
                        "$ref": "#/components/schemas/notify.v1.credential"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The Credential type",
            "in": "query",
            "name": "Type",
            "required": true,
            "schema": {
              "enum": [
                "gcm",
                "apn",
                "fcm"
              ],
              "type": "string"
            }
          },
          {
            "description": "A string to describe the resource",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "[APN only] The URL-encoded representation of the certificate",
            "in": "query",
            "name": "Certificate",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "[APN only] URL-encoded representation of the private key",
            "in": "query",
            "name": "PrivateKey",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "[APN only] Whether to send the credential to sandbox APNs",
            "in": "query",
            "name": "Sandbox",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "[GCM only] The `Server key` of your project from Firebase console under Settings / Cloud messaging",
            "in": "query",
            "name": "ApiKey",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "[FCM only] The `Server key` of your project from Firebase console under Settings / Cloud messaging",
            "in": "query",
            "name": "Secret",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notify.v1.credential"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://notify.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name",
        "type"
      ]
    },
    "/v1/Credentials/{Sid}": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notify.v1.credential"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string to describe the resource",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "[APN only] The URL-encoded representation of the certificate",
            "in": "query",
            "name": "Certificate",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "[APN only] URL-encoded representation of the private key",
            "in": "query",
            "name": "PrivateKey",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "[APN only] Whether to send the credential to sandbox APNs",
            "in": "query",
            "name": "Sandbox",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "[GCM only] The `Server key` of your project from Firebase console under Settings / Cloud messaging",
            "in": "query",
            "name": "ApiKey",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "[FCM only] The `Server key` of your project from Firebase console under Settings / Cloud messaging",
            "in": "query",
            "name": "Secret",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notify.v1.credential"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://notify.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name",
        "type"
      ]
    },
    "/v1/Services": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The string that identifies the Service resources to read",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "services": {
                      "items": {
                        "$ref": "#/components/schemas/notify.v1.service"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "A string to describe the resource",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The SID of the Credential to use for APN Bindings",
            "in": "query",
            "name": "ApnCredentialSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the Credential to use for GCM Bindings",
            "in": "query",
            "name": "GcmCredentialSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the Messaging Service to use for SMS Bindings",
            "in": "query",
            "name": "MessagingServiceSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Deprecated",
            "in": "query",
            "name": "FacebookMessengerPageId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The protocol version to use for sending APNS notifications",
            "in": "query",
            "name": "DefaultApnNotificationProtocolVersion",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The protocol version to use for sending GCM notifications",
            "in": "query",
            "name": "DefaultGcmNotificationProtocolVersion",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The SID of the Credential to use for FCM Bindings",
            "in": "query",
            "name": "FcmCredentialSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The protocol version to use for sending FCM notifications",
            "in": "query",
            "name": "DefaultFcmNotificationProtocolVersion",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Whether to log notifications",
            "in": "query",
            "name": "LogEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Deprecated",
            "in": "query",
            "name": "AlexaSkillId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Deprecated",
            "in": "query",
            "name": "DefaultAlexaNotificationProtocolVersion",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notify.v1.service"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://notify.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name",
        "date_created"
      ]
    },
    "/v1/Services/{ServiceSid}/Bindings": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to read the resource from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Only include usage that has occurred on or after this date",
            "in": "query",
            "name": "StartDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Only include usage that occurred on or before this date",
            "in": "query",
            "name": "EndDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "The `identity` value of the resources to read",
            "in": "query",
            "name": "Identity",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Only list Bindings that have all of the specified Tags",
            "in": "query",
            "name": "Tag",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "bindings": {
                      "items": {
                        "$ref": "#/components/schemas/notify.v1.service.binding"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to create the resource under",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The `identity` value that identifies the new resource's User",
            "in": "query",
            "name": "Identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The type of the Binding",
            "in": "query",
            "name": "BindingType",
            "required": true,
            "schema": {
              "enum": [
                "apn",
                "gcm",
                "sms",
                "fcm",
                "facebook-messenger",
                "alexa"
              ],
              "type": "string"
            }
          },
          {
            "description": "The channel-specific address",
            "in": "query",
            "name": "Address",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A tag that can be used to select the Bindings to notify",
            "in": "query",
            "name": "Tag",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "The protocol version to use to send the notification",
            "in": "query",
            "name": "NotificationProtocolVersion",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The SID of the Credential resource to be used to send notifications to this Binding",
            "in": "query",
            "name": "CredentialSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Deprecated",
            "in": "query",
            "name": "Endpoint",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notify.v1.service.binding"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://notify.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "identity",
        "endpoint",
        "binding_type",
        "address"
      ]
    },
    "/v1/Services/{ServiceSid}/Bindings/{Sid}": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to delete the resource from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^BS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to fetch the resource from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^BS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notify.v1.service.binding"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://notify.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "identity",
        "endpoint",
        "binding_type",
        "address"
      ]
    },
    "/v1/Services/{ServiceSid}/Notifications": {
      "description": "TODO: Resource-level docs",
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to create the resource under",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The notification body text",
            "in": "query",
            "name": "Body",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The priority of the notification",
            "in": "query",
            "name": "Priority",
            "required": false,
            "schema": {
              "enum": [
                "high",
                "low"
              ],
              "type": "string"
            }
          },
          {
            "description": "How long, in seconds, the notification is valid",
            "in": "query",
            "name": "Ttl",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The notification title",
            "in": "query",
            "name": "Title",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the sound to be played for the notification",
            "in": "query",
            "name": "Sound",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The actions to display for the notification",
            "in": "query",
            "name": "Action",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The custom key-value pairs of the notification's payload",
            "in": "query",
            "name": "Data",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "description": "The APNS-specific payload that overrides corresponding attributes in a generic payload for APNS Bindings",
            "in": "query",
            "name": "Apn",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "description": "The GCM-specific payload that overrides corresponding attributes in generic payload for GCM Bindings",
            "in": "query",
            "name": "Gcm",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "description": "The SMS-specific payload that overrides corresponding attributes in generic payload for SMS Bindings",
            "in": "query",
            "name": "Sms",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "description": "Deprecated",
            "in": "query",
            "name": "FacebookMessenger",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "description": "The FCM-specific payload that overrides corresponding attributes in generic payload for FCM Bindings",
            "in": "query",
            "name": "Fcm",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "description": "A Segment to notify",
            "in": "query",
            "name": "Segment",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Deprecated",
            "in": "query",
            "name": "Alexa",
            "required": false,
            "schema": {
              "type": "object"
            }
          },
          {
            "description": "The destination address specified as a JSON string",
            "in": "query",
            "name": "ToBinding",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "The `identity` value that identifies the new resource's User",
            "in": "query",
            "name": "Identity",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "A tag that selects the Bindings to notify",
            "in": "query",
            "name": "Tag",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notify.v1.service.notification"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://notify.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "priority",
        "title"
      ]
    },
    "/v1/Services/{ServiceSid}/Segments": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "segments": {
                      "items": {
                        "$ref": "#/components/schemas/notify.v1.service.segment"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://notify.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "unique_name",
        "date_created"
      ]
    },
    "/v1/Services/{ServiceSid}/Users": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to read the resource from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The string that identifies the resource to read",
            "in": "query",
            "name": "Identity",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "The list of segments this User belongs to. Segments can be used to select recipients of a notification. Maximum 20 Segments per User allowed",
            "in": "query",
            "name": "Segment",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "users": {
                      "items": {
                        "$ref": "#/components/schemas/notify.v1.service.user"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to create the resource under",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The string that identifies the resource's User",
            "in": "query",
            "name": "Identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The list of segments this User belongs to. Segments can be used to select recipients of a notification. Maximum 20 Segments per User allowed",
            "in": "query",
            "name": "Segment",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notify.v1.service.user"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://notify.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "identity",
        "date_created"
      ]
    },
    "/v1/Services/{ServiceSid}/Users/{Identity}": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to delete the resource from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The string that identifies the resource to delete",
            "in": "path",
            "name": "Identity",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^NU[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to fetch the resource from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The string that identifies the resource to fetch",
            "in": "path",
            "name": "Identity",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^NU[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notify.v1.service.user"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://notify.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "identity",
        "date_created"
      ]
    },
    "/v1/Services/{ServiceSid}/Users/{Identity}/Bindings": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "Identity",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^NU[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "StartDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "EndDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "Tag",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "bindings": {
                      "items": {
                        "$ref": "#/components/schemas/notify.v1.service.user.user_binding"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "Identity",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^NU[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "BindingType",
            "required": true,
            "schema": {
              "enum": [
                "apn",
                "gcm",
                "sms",
                "fcm",
                "facebook-messenger",
                "alexa"
              ],
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "Address",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "Tag",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "NotificationProtocolVersion",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "CredentialSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "Endpoint",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notify.v1.service.user.user_binding"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://notify.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "identity",
        "endpoint",
        "binding_type",
        "address"
      ]
    },
    "/v1/Services/{ServiceSid}/Users/{Identity}/Bindings/{Sid}": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "Identity",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^NU[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^BS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "Identity",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^NU[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^BS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notify.v1.service.user.user_binding"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://notify.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "identity",
        "endpoint",
        "binding_type",
        "address"
      ]
    },
    "/v1/Services/{ServiceSid}/Users/{Identity}/SegmentMemberships": {
      "description": "TODO: Resource-level docs",
      "post": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "Identity",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^NU[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "Segment",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notify.v1.service.user.segment_membership"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://notify.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "identity",
        "segment"
      ]
    },
    "/v1/Services/{ServiceSid}/Users/{Identity}/SegmentMemberships/{Segment}": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "Identity",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^NU[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "Segment",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "Identity",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^NU[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "Segment",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notify.v1.service.user.segment_membership"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://notify.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "identity",
        "segment"
      ]
    },
    "/v1/Services/{Sid}": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notify.v1.service"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string to describe the resource",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The SID of the Credential to use for APN Bindings",
            "in": "query",
            "name": "ApnCredentialSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the Credential to use for GCM Bindings",
            "in": "query",
            "name": "GcmCredentialSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the Messaging Service to use for SMS Bindings",
            "in": "query",
            "name": "MessagingServiceSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Deprecated",
            "in": "query",
            "name": "FacebookMessengerPageId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The protocol version to use for sending APNS notifications",
            "in": "query",
            "name": "DefaultApnNotificationProtocolVersion",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The protocol version to use for sending GCM notifications",
            "in": "query",
            "name": "DefaultGcmNotificationProtocolVersion",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The SID of the Credential to use for FCM Bindings",
            "in": "query",
            "name": "FcmCredentialSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The protocol version to use for sending FCM notifications",
            "in": "query",
            "name": "DefaultFcmNotificationProtocolVersion",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Whether to log notifications",
            "in": "query",
            "name": "LogEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Deprecated",
            "in": "query",
            "name": "AlexaSkillId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Deprecated",
            "in": "query",
            "name": "DefaultAlexaNotificationProtocolVersion",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notify.v1.service"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://notify.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name",
        "date_created"
      ]
    }
  },
  "tags": [
    {
      "description": "PLEASE NOTE that this is a Beta product that is subject to change. Use it with caution.",
      "name": "Beta"
    }
  ]
}