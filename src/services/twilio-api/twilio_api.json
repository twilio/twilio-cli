{
  "components": {
    "schemas": {
      "api.v2010.account": {
        "properties": {
          "auth_token": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "owner_account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "status": {
            "type": {
              "enum": [
                "active",
                "suspended",
                "closed"
              ],
              "type": "string"
            }
          },
          "subresource_uris": {
            "type": {
              "patternProperties": {
                "^.+$": {
                  "format": "uri",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": {
            "type": {
              "enum": [
                "Trial",
                "Full"
              ],
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.address": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "city": {
            "type": {
              "type": "string"
            }
          },
          "customer_name": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "emergency_enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "iso_country": {
            "type": {
              "type": "string"
            }
          },
          "postal_code": {
            "type": {
              "type": "string"
            }
          },
          "region": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "street": {
            "type": {
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "validated": {
            "type": {
              "type": "boolean"
            }
          },
          "verified": {
            "type": {
              "type": "boolean"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.address.dependent_phone_number": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "address_requirements": {
            "type": {
              "enum": [
                "none",
                "any",
                "local",
                "foreign"
              ],
              "type": "string"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "capabilities": {
            "type": {
              "type": "object"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "emergency_address_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "emergency_status": {
            "type": {
              "enum": [
                "Active",
                "Inactive"
              ],
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "sms_application_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "sms_fallback_method": {
            "type": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          "sms_fallback_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "sms_method": {
            "type": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          "sms_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "status_callback": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "status_callback_method": {
            "type": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          "trunk_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "voice_application_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "voice_caller_id_lookup": {
            "type": {
              "type": "boolean"
            }
          },
          "voice_fallback_method": {
            "type": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          "voice_fallback_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "voice_method": {
            "type": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          "voice_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.application": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "message_status_callback": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "sms_fallback_method": {
            "type": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          "sms_fallback_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "sms_method": {
            "type": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          "sms_status_callback": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "sms_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "status_callback": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "status_callback_method": {
            "type": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "voice_caller_id_lookup": {
            "type": {
              "type": "boolean"
            }
          },
          "voice_fallback_method": {
            "type": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          "voice_fallback_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "voice_method": {
            "type": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          "voice_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.authorized_connect_app": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "connect_app_company_name": {
            "type": {
              "type": "string"
            }
          },
          "connect_app_description": {
            "type": {
              "type": "string"
            }
          },
          "connect_app_friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "connect_app_homepage_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "connect_app_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CN[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "permissions": {
            "type": {
              "items": {
                "enum": [
                  "get-all",
                  "post-all"
                ],
                "type": "string"
              },
              "type": "array"
            }
          },
          "uri": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.available_phone_number_country": {
        "properties": {
          "beta": {
            "type": {
              "type": "boolean"
            }
          },
          "country": {
            "type": {
              "type": "string"
            }
          },
          "country_code": {
            "type": {
              "type": "string"
            }
          },
          "subresource_uris": {
            "type": {
              "patternProperties": {
                "^.+$": {
                  "format": "uri",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "uri": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.available_phone_number_country.available_phone_number_local": {
        "properties": {
          "address_requirements": {
            "type": {
              "type": "string"
            }
          },
          "beta": {
            "type": {
              "type": "boolean"
            }
          },
          "capabilities": {
            "type": {
              "properties": {
                "mms": {
                  "type": "boolean"
                },
                "sms": {
                  "type": "boolean"
                },
                "voice": {
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "iso_country": {
            "type": {
              "type": "string"
            }
          },
          "lata": {
            "type": {
              "type": "string"
            }
          },
          "latitude": {
            "type": {
              "type": "number"
            }
          },
          "locality": {
            "type": {
              "type": "string"
            }
          },
          "longitude": {
            "type": {
              "type": "number"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "postal_code": {
            "type": {
              "type": "string"
            }
          },
          "rate_center": {
            "type": {
              "type": "string"
            }
          },
          "region": {
            "type": {
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.available_phone_number_country.available_phone_number_machine_to_machine": {
        "properties": {
          "address_requirements": {
            "type": {
              "type": "string"
            }
          },
          "beta": {
            "type": {
              "type": "boolean"
            }
          },
          "capabilities": {
            "type": {
              "properties": {
                "mms": {
                  "type": "boolean"
                },
                "sms": {
                  "type": "boolean"
                },
                "voice": {
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "iso_country": {
            "type": {
              "type": "string"
            }
          },
          "lata": {
            "type": {
              "type": "string"
            }
          },
          "latitude": {
            "type": {
              "type": "number"
            }
          },
          "locality": {
            "type": {
              "type": "string"
            }
          },
          "longitude": {
            "type": {
              "type": "number"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "postal_code": {
            "type": {
              "type": "string"
            }
          },
          "rate_center": {
            "type": {
              "type": "string"
            }
          },
          "region": {
            "type": {
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.available_phone_number_country.available_phone_number_mobile": {
        "properties": {
          "address_requirements": {
            "type": {
              "type": "string"
            }
          },
          "beta": {
            "type": {
              "type": "boolean"
            }
          },
          "capabilities": {
            "type": {
              "properties": {
                "mms": {
                  "type": "boolean"
                },
                "sms": {
                  "type": "boolean"
                },
                "voice": {
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "iso_country": {
            "type": {
              "type": "string"
            }
          },
          "lata": {
            "type": {
              "type": "string"
            }
          },
          "latitude": {
            "type": {
              "type": "number"
            }
          },
          "locality": {
            "type": {
              "type": "string"
            }
          },
          "longitude": {
            "type": {
              "type": "number"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "postal_code": {
            "type": {
              "type": "string"
            }
          },
          "rate_center": {
            "type": {
              "type": "string"
            }
          },
          "region": {
            "type": {
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.available_phone_number_country.available_phone_number_national": {
        "properties": {
          "address_requirements": {
            "type": {
              "type": "string"
            }
          },
          "beta": {
            "type": {
              "type": "boolean"
            }
          },
          "capabilities": {
            "type": {
              "properties": {
                "mms": {
                  "type": "boolean"
                },
                "sms": {
                  "type": "boolean"
                },
                "voice": {
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "iso_country": {
            "type": {
              "type": "string"
            }
          },
          "lata": {
            "type": {
              "type": "string"
            }
          },
          "latitude": {
            "type": {
              "type": "number"
            }
          },
          "locality": {
            "type": {
              "type": "string"
            }
          },
          "longitude": {
            "type": {
              "type": "number"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "postal_code": {
            "type": {
              "type": "string"
            }
          },
          "rate_center": {
            "type": {
              "type": "string"
            }
          },
          "region": {
            "type": {
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.available_phone_number_country.available_phone_number_shared_cost": {
        "properties": {
          "address_requirements": {
            "type": {
              "type": "string"
            }
          },
          "beta": {
            "type": {
              "type": "boolean"
            }
          },
          "capabilities": {
            "type": {
              "properties": {
                "mms": {
                  "type": "boolean"
                },
                "sms": {
                  "type": "boolean"
                },
                "voice": {
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "iso_country": {
            "type": {
              "type": "string"
            }
          },
          "lata": {
            "type": {
              "type": "string"
            }
          },
          "latitude": {
            "type": {
              "type": "number"
            }
          },
          "locality": {
            "type": {
              "type": "string"
            }
          },
          "longitude": {
            "type": {
              "type": "number"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "postal_code": {
            "type": {
              "type": "string"
            }
          },
          "rate_center": {
            "type": {
              "type": "string"
            }
          },
          "region": {
            "type": {
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.available_phone_number_country.available_phone_number_toll_free": {
        "properties": {
          "address_requirements": {
            "type": {
              "type": "string"
            }
          },
          "beta": {
            "type": {
              "type": "boolean"
            }
          },
          "capabilities": {
            "type": {
              "properties": {
                "mms": {
                  "type": "boolean"
                },
                "sms": {
                  "type": "boolean"
                },
                "voice": {
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "iso_country": {
            "type": {
              "type": "string"
            }
          },
          "lata": {
            "type": {
              "type": "string"
            }
          },
          "latitude": {
            "type": {
              "type": "number"
            }
          },
          "locality": {
            "type": {
              "type": "string"
            }
          },
          "longitude": {
            "type": {
              "type": "number"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "postal_code": {
            "type": {
              "type": "string"
            }
          },
          "rate_center": {
            "type": {
              "type": "string"
            }
          },
          "region": {
            "type": {
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.available_phone_number_country.available_phone_number_voip": {
        "properties": {
          "address_requirements": {
            "type": {
              "type": "string"
            }
          },
          "beta": {
            "type": {
              "type": "boolean"
            }
          },
          "capabilities": {
            "type": {
              "properties": {
                "mms": {
                  "type": "boolean"
                },
                "sms": {
                  "type": "boolean"
                },
                "voice": {
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "iso_country": {
            "type": {
              "type": "string"
            }
          },
          "lata": {
            "type": {
              "type": "string"
            }
          },
          "latitude": {
            "type": {
              "type": "number"
            }
          },
          "locality": {
            "type": {
              "type": "string"
            }
          },
          "longitude": {
            "type": {
              "type": "number"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "postal_code": {
            "type": {
              "type": "string"
            }
          },
          "rate_center": {
            "type": {
              "type": "string"
            }
          },
          "region": {
            "type": {
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.balance": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "balance": {
            "type": {
              "type": "string"
            }
          },
          "currency": {
            "type": {
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.call": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "annotation": {
            "type": {
              "type": "string"
            }
          },
          "answered_by": {
            "type": {
              "type": "string"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "caller_name": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "direction": {
            "type": {
              "type": "string"
            }
          },
          "duration": {
            "type": {
              "type": "string"
            }
          },
          "end_time": {
            "type": {
              "type": "string"
            }
          },
          "forwarded_from": {
            "type": {
              "type": "string"
            }
          },
          "from": {
            "type": {
              "type": "string"
            }
          },
          "from_formatted": {
            "type": {
              "type": "string"
            }
          },
          "group_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^GP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "parent_call_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "phone_number_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "price": {
            "type": {
              "type": "number"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "start_time": {
            "type": {
              "type": "string"
            }
          },
          "status": {
            "type": {
              "enum": [
                "queued",
                "ringing",
                "in-progress",
                "completed",
                "busy",
                "failed",
                "no-answer",
                "canceled"
              ],
              "type": "string"
            }
          },
          "subresource_uris": {
            "type": {
              "patternProperties": {
                "^.+$": {
                  "format": "uri",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "to": {
            "type": {
              "type": "string"
            }
          },
          "to_formatted": {
            "type": {
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.call.call_feedback": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "issues": {
            "type": {
              "items": {
                "enum": [
                  "audio-latency",
                  "digits-not-captured",
                  "dropped-call",
                  "imperfect-audio",
                  "incorrect-caller-id",
                  "one-way-audio",
                  "post-dial-delay",
                  "unsolicited-call"
                ],
                "type": "string"
              },
              "type": "array"
            }
          },
          "quality_score": {
            "type": {
              "type": "integer"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.call.call_feedback_summary": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "call_count": {
            "type": {
              "type": "integer"
            }
          },
          "call_feedback_count": {
            "type": {
              "type": "integer"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "end_date": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "include_subaccounts": {
            "type": {
              "type": "boolean"
            }
          },
          "issues": {
            "type": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "quality_score_average": {
            "type": {
              "type": "number"
            }
          },
          "quality_score_median": {
            "type": {
              "type": "number"
            }
          },
          "quality_score_standard_deviation": {
            "type": {
              "type": "number"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "start_date": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "status": {
            "type": {
              "enum": [
                "queued",
                "in-progress",
                "completed",
                "failed"
              ],
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.call.call_notification": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "call_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "error_code": {
            "type": {
              "type": "string"
            }
          },
          "log": {
            "type": {
              "type": "string"
            }
          },
          "message_date": {
            "type": {
              "type": "string"
            }
          },
          "message_text": {
            "type": {
              "type": "string"
            }
          },
          "more_info": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "request_method": {
            "type": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          "request_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^NO[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.call.call_notification|instance": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "call_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "error_code": {
            "type": {
              "type": "string"
            }
          },
          "log": {
            "type": {
              "type": "string"
            }
          },
          "message_date": {
            "type": {
              "type": "string"
            }
          },
          "message_text": {
            "type": {
              "type": "string"
            }
          },
          "more_info": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "request_method": {
            "type": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          "request_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "request_variables": {
            "type": {
              "type": "string"
            }
          },
          "response_body": {
            "type": {
              "type": "string"
            }
          },
          "response_headers": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^NO[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.call.call_recording": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "call_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "channels": {
            "type": {
              "type": "integer"
            }
          },
          "conference_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "duration": {
            "type": {
              "type": "string"
            }
          },
          "encryption_details": {
            "type": {
              "type": "object"
            }
          },
          "error_code": {
            "type": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "price": {
            "type": {
              "type": "number"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "source": {
            "type": {
              "enum": [
                "DialVerb",
                "Conference",
                "OutboundAPI",
                "Trunking",
                "RecordVerb",
                "StartCallRecordingAPI",
                "StartConferenceRecordingAPI"
              ],
              "type": "string"
            }
          },
          "start_time": {
            "type": {
              "type": "string"
            }
          },
          "status": {
            "type": {
              "enum": [
                "in-progress",
                "paused",
                "stopped",
                "processing",
                "completed",
                "absent"
              ],
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.conference": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "region": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "status": {
            "type": {
              "enum": [
                "init",
                "in-progress",
                "completed"
              ],
              "type": "string"
            }
          },
          "subresource_uris": {
            "type": {
              "patternProperties": {
                "^.+$": {
                  "format": "uri",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "uri": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.conference.conference_recording": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "call_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "channels": {
            "type": {
              "type": "integer"
            }
          },
          "conference_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "duration": {
            "type": {
              "type": "string"
            }
          },
          "encryption_details": {
            "type": {
              "type": "object"
            }
          },
          "error_code": {
            "type": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "price": {
            "type": {
              "type": "number"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "source": {
            "type": {
              "enum": [
                "DialVerb",
                "Conference",
                "OutboundAPI",
                "Trunking",
                "RecordVerb",
                "StartCallRecordingAPI",
                "StartConferenceRecordingAPI"
              ],
              "type": "string"
            }
          },
          "start_time": {
            "type": {
              "type": "string"
            }
          },
          "status": {
            "type": {
              "enum": [
                "in-progress",
                "paused",
                "stopped",
                "processing",
                "completed",
                "absent"
              ],
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.conference.participant": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "call_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "call_sid_to_coach": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "coaching": {
            "type": {
              "type": "boolean"
            }
          },
          "conference_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "end_conference_on_exit": {
            "type": {
              "type": "boolean"
            }
          },
          "hold": {
            "type": {
              "type": "boolean"
            }
          },
          "muted": {
            "type": {
              "type": "boolean"
            }
          },
          "start_conference_on_enter": {
            "type": {
              "type": "boolean"
            }
          },
          "status": {
            "type": {
              "enum": [
                "queued",
                "connecting",
                "ringing",
                "connected",
                "complete",
                "failed"
              ],
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.connect_app": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "authorize_redirect_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "company_name": {
            "type": {
              "type": "string"
            }
          },
          "deauthorize_callback_method": {
            "type": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          "deauthorize_callback_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "description": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "homepage_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "permissions": {
            "type": {
              "items": {
                "enum": [
                  "get-all",
                  "post-all"
                ],
                "type": "string"
              },
              "type": "array"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CN[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.incoming_phone_number": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "address_requirements": {
            "type": {
              "enum": [
                "none",
                "any",
                "local",
                "foreign"
              ],
              "type": "string"
            }
          },
          "address_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "beta": {
            "type": {
              "type": "boolean"
            }
          },
          "capabilities": {
            "type": {
              "properties": {
                "mms": {
                  "type": "boolean"
                },
                "sms": {
                  "type": "boolean"
                },
                "voice": {
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "emergency_address_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "emergency_status": {
            "type": {
              "enum": [
                "Active",
                "Inactive"
              ],
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "identity_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RI[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "origin": {
            "type": {
              "type": "string"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "sms_application_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "sms_fallback_method": {
            "type": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          "sms_fallback_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "sms_method": {
            "type": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          "sms_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "status_callback": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "status_callback_method": {
            "type": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          "trunk_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "voice_application_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "voice_caller_id_lookup": {
            "type": {
              "type": "boolean"
            }
          },
          "voice_fallback_method": {
            "type": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          "voice_fallback_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "voice_method": {
            "type": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          "voice_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.incoming_phone_number.incoming_phone_number_assigned_add_on": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "configuration": {
            "type": {
              "type": "object"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "description": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "resource_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^XE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "subresource_uris": {
            "type": {
              "patternProperties": {
                "^.+$": {
                  "format": "uri",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.incoming_phone_number.incoming_phone_number_assigned_add_on.incoming_phone_number_assigned_add_on_extension": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "assigned_add_on_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^XE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "enabled": {
            "type": {
              "type": "boolean"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "product_name": {
            "type": {
              "type": "string"
            }
          },
          "resource_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^XF[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "unique_name": {
            "type": {
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.incoming_phone_number.incoming_phone_number_local": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "address_requirements": {
            "type": {
              "enum": [
                "none",
                "any",
                "local",
                "foreign"
              ],
              "type": "string"
            }
          },
          "address_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "beta": {
            "type": {
              "type": "boolean"
            }
          },
          "capabilities": {
            "type": {
              "properties": {
                "mms": {
                  "type": "boolean"
                },
                "sms": {
                  "type": "boolean"
                },
                "voice": {
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "identity_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RI[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "origin": {
            "type": {
              "type": "string"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "sms_application_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "sms_fallback_method": {
            "type": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          "sms_fallback_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "sms_method": {
            "type": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          "sms_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "status_callback": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "status_callback_method": {
            "type": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          "trunk_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "voice_application_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "voice_caller_id_lookup": {
            "type": {
              "type": "boolean"
            }
          },
          "voice_fallback_method": {
            "type": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          "voice_fallback_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "voice_method": {
            "type": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          "voice_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.incoming_phone_number.incoming_phone_number_mobile": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "address_requirements": {
            "type": {
              "enum": [
                "none",
                "any",
                "local",
                "foreign"
              ],
              "type": "string"
            }
          },
          "address_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "beta": {
            "type": {
              "type": "boolean"
            }
          },
          "capabilities": {
            "type": {
              "properties": {
                "mms": {
                  "type": "boolean"
                },
                "sms": {
                  "type": "boolean"
                },
                "voice": {
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "identity_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RI[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "origin": {
            "type": {
              "type": "string"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "sms_application_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "sms_fallback_method": {
            "type": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          "sms_fallback_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "sms_method": {
            "type": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          "sms_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "status_callback": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "status_callback_method": {
            "type": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          "trunk_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "voice_application_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "voice_caller_id_lookup": {
            "type": {
              "type": "boolean"
            }
          },
          "voice_fallback_method": {
            "type": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          "voice_fallback_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "voice_method": {
            "type": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          "voice_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.incoming_phone_number.incoming_phone_number_toll_free": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "address_requirements": {
            "type": {
              "enum": [
                "none",
                "any",
                "local",
                "foreign"
              ],
              "type": "string"
            }
          },
          "address_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "beta": {
            "type": {
              "type": "boolean"
            }
          },
          "capabilities": {
            "type": {
              "properties": {
                "mms": {
                  "type": "boolean"
                },
                "sms": {
                  "type": "boolean"
                },
                "voice": {
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "identity_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RI[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "origin": {
            "type": {
              "type": "string"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "sms_application_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "sms_fallback_method": {
            "type": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          "sms_fallback_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "sms_method": {
            "type": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          "sms_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "status_callback": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "status_callback_method": {
            "type": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          "trunk_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "voice_application_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "voice_caller_id_lookup": {
            "type": {
              "type": "boolean"
            }
          },
          "voice_fallback_method": {
            "type": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          "voice_fallback_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "voice_method": {
            "type": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          "voice_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.key": {
        "properties": {
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^SK[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.message": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "body": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_sent": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "direction": {
            "type": {
              "enum": [
                "inbound",
                "outbound-api",
                "outbound-call",
                "outbound-reply"
              ],
              "type": "string"
            }
          },
          "error_code": {
            "type": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "error_message": {
            "type": {
              "type": "string"
            }
          },
          "from": {
            "type": {
              "type": "string"
            }
          },
          "messaging_service_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "num_media": {
            "type": {
              "type": "string"
            }
          },
          "num_segments": {
            "type": {
              "type": "string"
            }
          },
          "price": {
            "type": {
              "type": "string"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^(SM|MM)[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "status": {
            "type": {
              "enum": [
                "queued",
                "sending",
                "sent",
                "failed",
                "delivered",
                "undelivered",
                "receiving",
                "received",
                "accepted",
                "scheduled",
                "read"
              ],
              "type": "string"
            }
          },
          "subresource_uris": {
            "type": {
              "patternProperties": {
                "^.+$": {
                  "format": "uri",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "to": {
            "type": {
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.message.media": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "content_type": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "parent_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^(SM|MM)[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ME[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.message.message_feedback": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "message_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^(SM|MM)[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "outcome": {
            "type": {
              "enum": [
                "confirmed",
                "umconfirmed"
              ],
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.new_key": {
        "properties": {
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "secret": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^SK[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.new_signing_key": {
        "properties": {
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "secret": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^SK[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.notification": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "call_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "error_code": {
            "type": {
              "type": "string"
            }
          },
          "log": {
            "type": {
              "type": "string"
            }
          },
          "message_date": {
            "type": {
              "type": "string"
            }
          },
          "message_text": {
            "type": {
              "type": "string"
            }
          },
          "more_info": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "request_method": {
            "type": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          "request_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^NO[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.notification|instance": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "call_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "error_code": {
            "type": {
              "type": "string"
            }
          },
          "log": {
            "type": {
              "type": "string"
            }
          },
          "message_date": {
            "type": {
              "type": "string"
            }
          },
          "message_text": {
            "type": {
              "type": "string"
            }
          },
          "more_info": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "request_method": {
            "type": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          "request_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "request_variables": {
            "type": {
              "type": "string"
            }
          },
          "response_body": {
            "type": {
              "type": "string"
            }
          },
          "response_headers": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^NO[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.outgoing_caller_id": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.queue": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "average_wait_time": {
            "type": {
              "type": "integer"
            }
          },
          "current_size": {
            "type": {
              "type": "integer"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "max_size": {
            "type": {
              "type": "integer"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^QU[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.queue.member": {
        "properties": {
          "call_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "date_enqueued": {
            "type": {
              "type": "string"
            }
          },
          "position": {
            "type": {
              "type": "integer"
            }
          },
          "queue_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^QU[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "wait_time": {
            "type": {
              "type": "integer"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.recording": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "call_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "channels": {
            "type": {
              "type": "integer"
            }
          },
          "conference_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "duration": {
            "type": {
              "type": "string"
            }
          },
          "encryption_details": {
            "type": {
              "type": "object"
            }
          },
          "error_code": {
            "type": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "price": {
            "type": {
              "type": "string"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "source": {
            "type": {
              "enum": [
                "DialVerb",
                "Conference",
                "OutboundAPI",
                "Trunking",
                "RecordVerb",
                "StartCallRecordingAPI",
                "StartConferenceRecordingAPI"
              ],
              "type": "string"
            }
          },
          "start_time": {
            "type": {
              "type": "string"
            }
          },
          "status": {
            "type": {
              "enum": [
                "in-progress",
                "paused",
                "stopped",
                "processing",
                "completed",
                "absent"
              ],
              "type": "string"
            }
          },
          "subresource_uris": {
            "type": {
              "patternProperties": {
                "^.+$": {
                  "format": "uri",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "uri": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.recording.recording_add_on_result": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "add_on_configuration_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^XE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "add_on_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^XB[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "date_completed": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "reference_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^XR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "status": {
            "type": {
              "enum": [
                "canceled",
                "completed",
                "deleted",
                "failed",
                "in-progress",
                "init",
                "processing",
                "queued"
              ],
              "type": "string"
            }
          },
          "subresource_uris": {
            "type": {
              "patternProperties": {
                "^.+$": {
                  "format": "uri",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.recording.recording_add_on_result.recording_add_on_result_payload": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "add_on_configuration_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^XE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "add_on_result_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^XR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "add_on_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^XB[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "content_type": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "label": {
            "type": {
              "type": "string"
            }
          },
          "reference_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^XH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "subresource_uris": {
            "type": {
              "patternProperties": {
                "^.+$": {
                  "format": "uri",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.recording.recording_add_on_result.recording_add_on_result_payload.recording_add_on_result_payload_data": {
        "properties": {
          "redirect_to": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.recording.recording_transcription": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "duration": {
            "type": {
              "type": "string"
            }
          },
          "price": {
            "type": {
              "type": "number"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "recording_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "status": {
            "type": {
              "enum": [
                "in-progress",
                "completed",
                "failed"
              ],
              "type": "string"
            }
          },
          "transcription_text": {
            "type": {
              "type": "string"
            }
          },
          "type": {
            "type": {
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.short_code": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "short_code": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^SC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "sms_fallback_method": {
            "type": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          "sms_fallback_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "sms_method": {
            "type": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          "sms_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.signing_key": {
        "properties": {
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^SK[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.sip": {
        "properties": {},
        "type": "object"
      },
      "api.v2010.account.sip.sip_credential_list": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "subresource_uris": {
            "type": {
              "patternProperties": {
                "^.+$": {
                  "format": "uri",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "uri": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.sip.sip_credential_list.sip_credential": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "credential_list_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "username": {
            "type": {
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.sip.sip_domain": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "auth_type": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "domain_name": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "sip_registration": {
            "type": {
              "type": "boolean"
            }
          },
          "subresource_uris": {
            "type": {
              "patternProperties": {
                "^.+$": {
                  "format": "uri",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "uri": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "voice_fallback_method": {
            "type": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          "voice_fallback_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "voice_method": {
            "type": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          "voice_status_callback_method": {
            "type": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          "voice_status_callback_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "voice_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.sip.sip_domain.sip_auth": {
        "properties": {},
        "type": "object"
      },
      "api.v2010.account.sip.sip_domain.sip_auth.sip_auth_calls": {
        "properties": {},
        "type": "object"
      },
      "api.v2010.account.sip.sip_domain.sip_auth.sip_auth_calls.sip_auth_calls_credential_list_mapping": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.sip.sip_domain.sip_auth.sip_auth_calls.sip_auth_calls_ip_access_control_list_mapping": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.sip.sip_domain.sip_auth.sip_auth_registrations": {
        "properties": {},
        "type": "object"
      },
      "api.v2010.account.sip.sip_domain.sip_auth.sip_auth_registrations.sip_auth_registrations_credential_list_mapping": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.sip.sip_domain.sip_credential_list_mapping": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "subresource_uris": {
            "type": {
              "patternProperties": {
                "^.+$": {
                  "format": "uri",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "uri": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.sip.sip_domain.sip_ip_access_control_list_mapping": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "subresource_uris": {
            "type": {
              "patternProperties": {
                "^.+$": {
                  "format": "uri",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "uri": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.sip.sip_ip_access_control_list": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "subresource_uris": {
            "type": {
              "patternProperties": {
                "^.+$": {
                  "format": "uri",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "uri": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.sip.sip_ip_access_control_list.sip_address": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "cidr_prefix_length": {
            "type": {
              "type": "integer"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "ip_access_control_list_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "ip_address": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.sip.sip_ip_access_control_list.sip_ip_address": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "cidr_prefix_length": {
            "type": {
              "type": "integer"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "ip_access_control_list_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "ip_address": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.sip.sip_region": {
        "properties": {
          "features": {
            "type": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "region": {
            "type": {
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.sms": {
        "properties": {},
        "type": "object"
      },
      "api.v2010.account.sms.sms_message": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "body": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_sent": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "direction": {
            "type": {
              "enum": [
                "inbound",
                "outbound-api",
                "outbound-call",
                "outbound-reply"
              ],
              "type": "string"
            }
          },
          "from": {
            "type": {
              "type": "string"
            }
          },
          "num_segments": {
            "type": {
              "type": "string"
            }
          },
          "price": {
            "type": {
              "type": "number"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^(SM|MM)[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "status": {
            "type": {
              "enum": [
                "queued",
                "sending",
                "sent",
                "failed",
                "received"
              ],
              "type": "string"
            }
          },
          "to": {
            "type": {
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.token": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "ice_servers": {
            "type": {
              "items": {
                "type": "object"
              },
              "type": "array"
            }
          },
          "password": {
            "type": {
              "type": "string"
            }
          },
          "ttl": {
            "type": {
              "type": "string"
            }
          },
          "username": {
            "type": {
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.transcription": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "duration": {
            "type": {
              "type": "string"
            }
          },
          "price": {
            "type": {
              "type": "number"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "recording_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "status": {
            "type": {
              "enum": [
                "in-progress",
                "completed",
                "failed"
              ],
              "type": "string"
            }
          },
          "transcription_text": {
            "type": {
              "type": "string"
            }
          },
          "type": {
            "type": {
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.usage": {
        "properties": {},
        "type": "object"
      },
      "api.v2010.account.usage.usage_record": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "category": {
            "type": {
              "enum": [
                "agent-conference",
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "small-group-rooms",
                "small-group-rooms-data-track",
                "small-group-rooms-participant-minutes",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-germany",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ],
              "type": "string"
            }
          },
          "count": {
            "type": {
              "type": "string"
            }
          },
          "count_unit": {
            "type": {
              "type": "string"
            }
          },
          "description": {
            "type": {
              "type": "string"
            }
          },
          "end_date": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "price": {
            "type": {
              "type": "number"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "start_date": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "subresource_uris": {
            "type": {
              "patternProperties": {
                "^.+$": {
                  "format": "uri",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "uri": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "usage": {
            "type": {
              "type": "string"
            }
          },
          "usage_unit": {
            "type": {
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.usage.usage_record.usage_record_all_time": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "category": {
            "type": {
              "enum": [
                "agent-conference",
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "small-group-rooms",
                "small-group-rooms-data-track",
                "small-group-rooms-participant-minutes",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-germany",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ],
              "type": "string"
            }
          },
          "count": {
            "type": {
              "type": "string"
            }
          },
          "count_unit": {
            "type": {
              "type": "string"
            }
          },
          "description": {
            "type": {
              "type": "string"
            }
          },
          "end_date": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "price": {
            "type": {
              "type": "number"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "start_date": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "subresource_uris": {
            "type": {
              "patternProperties": {
                "^.+$": {
                  "format": "uri",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "uri": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "usage": {
            "type": {
              "type": "string"
            }
          },
          "usage_unit": {
            "type": {
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.usage.usage_record.usage_record_daily": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "category": {
            "type": {
              "enum": [
                "agent-conference",
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "small-group-rooms",
                "small-group-rooms-data-track",
                "small-group-rooms-participant-minutes",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-germany",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ],
              "type": "string"
            }
          },
          "count": {
            "type": {
              "type": "string"
            }
          },
          "count_unit": {
            "type": {
              "type": "string"
            }
          },
          "description": {
            "type": {
              "type": "string"
            }
          },
          "end_date": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "price": {
            "type": {
              "type": "number"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "start_date": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "subresource_uris": {
            "type": {
              "patternProperties": {
                "^.+$": {
                  "format": "uri",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "uri": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "usage": {
            "type": {
              "type": "string"
            }
          },
          "usage_unit": {
            "type": {
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.usage.usage_record.usage_record_last_month": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "category": {
            "type": {
              "enum": [
                "agent-conference",
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "small-group-rooms",
                "small-group-rooms-data-track",
                "small-group-rooms-participant-minutes",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-germany",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ],
              "type": "string"
            }
          },
          "count": {
            "type": {
              "type": "string"
            }
          },
          "count_unit": {
            "type": {
              "type": "string"
            }
          },
          "description": {
            "type": {
              "type": "string"
            }
          },
          "end_date": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "price": {
            "type": {
              "type": "number"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "start_date": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "subresource_uris": {
            "type": {
              "patternProperties": {
                "^.+$": {
                  "format": "uri",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "uri": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "usage": {
            "type": {
              "type": "string"
            }
          },
          "usage_unit": {
            "type": {
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.usage.usage_record.usage_record_monthly": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "category": {
            "type": {
              "enum": [
                "agent-conference",
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "small-group-rooms",
                "small-group-rooms-data-track",
                "small-group-rooms-participant-minutes",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-germany",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ],
              "type": "string"
            }
          },
          "count": {
            "type": {
              "type": "string"
            }
          },
          "count_unit": {
            "type": {
              "type": "string"
            }
          },
          "description": {
            "type": {
              "type": "string"
            }
          },
          "end_date": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "price": {
            "type": {
              "type": "number"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "start_date": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "subresource_uris": {
            "type": {
              "patternProperties": {
                "^.+$": {
                  "format": "uri",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "uri": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "usage": {
            "type": {
              "type": "string"
            }
          },
          "usage_unit": {
            "type": {
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.usage.usage_record.usage_record_this_month": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "category": {
            "type": {
              "enum": [
                "agent-conference",
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "small-group-rooms",
                "small-group-rooms-data-track",
                "small-group-rooms-participant-minutes",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-germany",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ],
              "type": "string"
            }
          },
          "count": {
            "type": {
              "type": "string"
            }
          },
          "count_unit": {
            "type": {
              "type": "string"
            }
          },
          "description": {
            "type": {
              "type": "string"
            }
          },
          "end_date": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "price": {
            "type": {
              "type": "number"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "start_date": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "subresource_uris": {
            "type": {
              "patternProperties": {
                "^.+$": {
                  "format": "uri",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "uri": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "usage": {
            "type": {
              "type": "string"
            }
          },
          "usage_unit": {
            "type": {
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.usage.usage_record.usage_record_today": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "category": {
            "type": {
              "enum": [
                "agent-conference",
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "small-group-rooms",
                "small-group-rooms-data-track",
                "small-group-rooms-participant-minutes",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-germany",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ],
              "type": "string"
            }
          },
          "count": {
            "type": {
              "type": "string"
            }
          },
          "count_unit": {
            "type": {
              "type": "string"
            }
          },
          "description": {
            "type": {
              "type": "string"
            }
          },
          "end_date": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "price": {
            "type": {
              "type": "number"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "start_date": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "subresource_uris": {
            "type": {
              "patternProperties": {
                "^.+$": {
                  "format": "uri",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "uri": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "usage": {
            "type": {
              "type": "string"
            }
          },
          "usage_unit": {
            "type": {
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.usage.usage_record.usage_record_yearly": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "category": {
            "type": {
              "enum": [
                "agent-conference",
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "small-group-rooms",
                "small-group-rooms-data-track",
                "small-group-rooms-participant-minutes",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-germany",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ],
              "type": "string"
            }
          },
          "count": {
            "type": {
              "type": "string"
            }
          },
          "count_unit": {
            "type": {
              "type": "string"
            }
          },
          "description": {
            "type": {
              "type": "string"
            }
          },
          "end_date": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "price": {
            "type": {
              "type": "number"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "start_date": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "subresource_uris": {
            "type": {
              "patternProperties": {
                "^.+$": {
                  "format": "uri",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "uri": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "usage": {
            "type": {
              "type": "string"
            }
          },
          "usage_unit": {
            "type": {
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.usage.usage_record.usage_record_yesterday": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "category": {
            "type": {
              "enum": [
                "agent-conference",
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "small-group-rooms",
                "small-group-rooms-data-track",
                "small-group-rooms-participant-minutes",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-germany",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ],
              "type": "string"
            }
          },
          "count": {
            "type": {
              "type": "string"
            }
          },
          "count_unit": {
            "type": {
              "type": "string"
            }
          },
          "description": {
            "type": {
              "type": "string"
            }
          },
          "end_date": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "price": {
            "type": {
              "type": "number"
            }
          },
          "price_unit": {
            "type": {
              "type": "string"
            }
          },
          "start_date": {
            "type": {
              "format": "date-time",
              "type": "string"
            }
          },
          "subresource_uris": {
            "type": {
              "patternProperties": {
                "^.+$": {
                  "format": "uri",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "uri": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "usage": {
            "type": {
              "type": "string"
            }
          },
          "usage_unit": {
            "type": {
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.usage.usage_trigger": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "api_version": {
            "type": {
              "type": "string"
            }
          },
          "callback_method": {
            "type": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          "callback_url": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "current_value": {
            "type": {
              "type": "string"
            }
          },
          "date_created": {
            "type": {
              "type": "string"
            }
          },
          "date_fired": {
            "type": {
              "type": "string"
            }
          },
          "date_updated": {
            "type": {
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "recurring": {
            "type": {
              "enum": [
                "daily",
                "monthly",
                "yearly",
                "alltime"
              ],
              "type": "string"
            }
          },
          "sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UT[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "trigger_by": {
            "type": {
              "enum": [
                "count",
                "usage",
                "price"
              ],
              "type": "string"
            }
          },
          "trigger_value": {
            "type": {
              "type": "string"
            }
          },
          "uri": {
            "type": {
              "format": "uri",
              "type": "string"
            }
          },
          "usage_category": {
            "type": {
              "enum": [
                "agent-conference",
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "fraud-lookups",
                "cps",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "small-group-rooms",
                "small-group-rooms-data-track",
                "small-group-rooms-participant-minutes",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-germany",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ],
              "type": "string"
            }
          },
          "usage_record_uri": {
            "type": {
              "type": "string"
            }
          }
        },
        "type": "object"
      },
      "api.v2010.account.validation_request": {
        "properties": {
          "account_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "call_sid": {
            "type": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          "friendly_name": {
            "type": {
              "type": "string"
            }
          },
          "phone_number": {
            "type": {
              "type": "string"
            }
          },
          "validation_code": {
            "type": {
              "type": "integer"
            }
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "accountSid_authToken": {
        "scheme": "basic",
        "type": "http"
      }
    }
  },
  "info": {
    "contact": {
      "email": "support@twilio.com",
      "name": "Twilio Support",
      "url": "https://support.twilio.com"
    },
    "description": "This is the public Twilio REST API.",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "termsOfService": "https://www.twilio.com/legal/tos",
    "title": "Twilio REST API",
    "version": "81ff5a4"
  },
  "openapi": "3.0.1",
  "paths": {
    "/2010-04-01/Accounts.json": {
      "description": "Twilio accounts (aka Project) or subaccounts",
      "get": {
        "description": "Retrieves a collection of Accounts belonging to the account used to make the request",
        "parameters": [
          {
            "description": "FriendlyName to filter on",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Status to filter on",
            "in": "query",
            "name": "Status",
            "required": false,
            "schema": {
              "enum": [
                "active",
                "suspended",
                "closed"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "accounts": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account"
                      },
                      "type": "array"
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": "Create a new Twilio Subaccount from the account making the request",
        "parameters": [
          {
            "description": "A human readable description of the account",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name",
        "status"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Addresses.json": {
      "description": "Physical locations within a country",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Account that is responsible for this address",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The `customer_name` of the Address resources to read",
            "in": "query",
            "name": "CustomerName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The string that identifies the Address resources to read",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ISO country code of the Address resources to read",
            "in": "query",
            "name": "IsoCountry",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "addresses": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.address"
                      },
                      "type": "array"
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Account that will be responsible for the new Address resource",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The name to associate with the new address",
            "in": "query",
            "name": "CustomerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number and street address of the new address",
            "in": "query",
            "name": "Street",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The city of the new address",
            "in": "query",
            "name": "City",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The state or region of the new address",
            "in": "query",
            "name": "Region",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The postal code of the new address",
            "in": "query",
            "name": "PostalCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ISO country code of the new address",
            "in": "query",
            "name": "IsoCountry",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A string to describe the new resource",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Whether to enable emergency calling on the new address",
            "in": "query",
            "name": "EmergencyEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether we should automatically correct the address",
            "in": "query",
            "name": "AutoCorrectAddress",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.address"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name",
        "validated",
        "verified"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Addresses/{AddressSid}/DependentPhoneNumbers.json": {
      "description": "Phone numbers dependent on an Address resource",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to read",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the Address resource associated with the phone number",
            "in": "path",
            "name": "AddressSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "dependent_phone_numbers": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.address.dependent_phone_number"
                      },
                      "type": "array"
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "phone_number",
        "friendly_name"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Addresses/{Sid}.json": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Account that is responsible for the resources to delete",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "Physical locations within a country",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Account that is responsible for this address",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.address"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Account that is responsible for the resource to update",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string to describe the resource",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name to associate with the address",
            "in": "query",
            "name": "CustomerName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number and street address of the address",
            "in": "query",
            "name": "Street",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The city of the address",
            "in": "query",
            "name": "City",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The state or region of the address",
            "in": "query",
            "name": "Region",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The postal code of the address",
            "in": "query",
            "name": "PostalCode",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Whether to enable emergency calling on the address",
            "in": "query",
            "name": "EmergencyEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether we should automatically correct the address",
            "in": "query",
            "name": "AutoCorrectAddress",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.address"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name",
        "validated",
        "verified"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Applications.json": {
      "description": "Applications that you have created with Twilio",
      "get": {
        "description": "Retrieve a list of applications representing an application within the requesting account",
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to read",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The string that identifies the Application resources to read",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "applications": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.application"
                      },
                      "type": "array"
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": "Create a new application within your account",
        "parameters": [
          {
            "description": "The SID of the Account that will create the resource",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string to describe the new resource",
            "in": "query",
            "name": "FriendlyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The API version to use to start a new TwiML session",
            "in": "query",
            "name": "ApiVersion",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The URL to call when the phone number receives a call",
            "in": "query",
            "name": "VoiceUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method to use with the voice_url",
            "in": "query",
            "name": "VoiceMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL to call when a TwiML error occurs",
            "in": "query",
            "name": "VoiceFallbackUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method to use with voice_fallback_url",
            "in": "query",
            "name": "VoiceFallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL to send status information to your application",
            "in": "query",
            "name": "StatusCallback",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method to use to call status_callback",
            "in": "query",
            "name": "StatusCallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "Whether to lookup the caller's name",
            "in": "query",
            "name": "VoiceCallerIdLookup",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The URL to call when the phone number receives an incoming SMS message",
            "in": "query",
            "name": "SmsUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method to use with sms_url",
            "in": "query",
            "name": "SmsMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL to call when an error occurs while retrieving or executing the TwiML",
            "in": "query",
            "name": "SmsFallbackUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method to use with sms_fallback_url",
            "in": "query",
            "name": "SmsFallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL to send status information to your application",
            "in": "query",
            "name": "SmsStatusCallback",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The URL to send message status information to your application",
            "in": "query",
            "name": "MessageStatusCallback",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.application"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name",
        "date_created"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Applications/{Sid}.json": {
      "delete": {
        "description": "Delete the application by the specified application sid",
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to delete",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "Applications that you have created with Twilio",
      "get": {
        "description": "Fetch the application specified by the provided sid",
        "parameters": [
          {
            "description": "The SID of the Account that created the resource to fetch",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.application"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": "Updates the application's properties",
        "parameters": [
          {
            "description": "The SID of the Account that will create the resource",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string to describe the resource",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The API version to use to start a new TwiML session",
            "in": "query",
            "name": "ApiVersion",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The URL to call when the phone number receives a call",
            "in": "query",
            "name": "VoiceUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method to use with the voice_url",
            "in": "query",
            "name": "VoiceMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL to call when a TwiML error occurs",
            "in": "query",
            "name": "VoiceFallbackUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method to use with voice_fallback_url",
            "in": "query",
            "name": "VoiceFallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL to send status information to your application",
            "in": "query",
            "name": "StatusCallback",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method to use to call status_callback",
            "in": "query",
            "name": "StatusCallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "Whether to lookup the caller's name",
            "in": "query",
            "name": "VoiceCallerIdLookup",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The URL to call when the phone number receives an incoming SMS message",
            "in": "query",
            "name": "SmsUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method to use with sms_url",
            "in": "query",
            "name": "SmsMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL to call when an error occurs while retrieving or executing the TwiML",
            "in": "query",
            "name": "SmsFallbackUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method to use with sms_fallback_url",
            "in": "query",
            "name": "SmsFallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL to send status information to your application",
            "in": "query",
            "name": "SmsStatusCallback",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The URL to send message status information to your application",
            "in": "query",
            "name": "MessageStatusCallback",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.application"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name",
        "date_created"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/AuthorizedConnectApps.json": {
      "description": "Authorized Twilio Connect apps",
      "get": {
        "description": "Retrieve a list of authorized-connect-apps belonging to the account used to make the request",
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to read",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "authorized_connect_apps": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.authorized_connect_app"
                      },
                      "type": "array"
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "connect_app_sid",
        "connect_app_friendly_name"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/AuthorizedConnectApps/{ConnectAppSid}.json": {
      "description": "Authorized Twilio Connect apps",
      "get": {
        "description": "Fetch an instance of an authorized-connect-app",
        "parameters": [
          {
            "description": "The SID of the Account that created the resource to fetch",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the Connect App to fetch",
            "in": "path",
            "name": "ConnectAppSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CN[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.authorized_connect_app"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "connect_app_sid",
        "connect_app_friendly_name"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers.json": {
      "description": "Country codes with available phone numbers",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Account requesting the available phone number Country resources",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "countries": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.available_phone_number_country"
                      },
                      "type": "array"
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "country_code",
        "country",
        "beta"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{CountryCode}.json": {
      "description": "Country codes with available phone numbers",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Account requesting the available phone number Country resource",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The ISO country code of the country to fetch available phone number information about",
            "in": "path",
            "name": "CountryCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.available_phone_number_country"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "country_code",
        "country",
        "beta"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{CountryCode}/Local.json": {
      "description": "Available local phone numbers",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Account requesting the AvailablePhoneNumber resources",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The ISO Country code of the country from which to read phone numbers",
            "in": "path",
            "name": "CountryCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The area code of the phone numbers to read",
            "in": "query",
            "name": "AreaCode",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The pattern on which to match phone numbers",
            "in": "query",
            "name": "Contains",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Whether the phone numbers can receive text messages",
            "in": "query",
            "name": "SmsEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether the phone numbers can receive MMS messages",
            "in": "query",
            "name": "MmsEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether the phone numbers can receive calls.",
            "in": "query",
            "name": "VoiceEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether to exclude phone numbers that require an Address",
            "in": "query",
            "name": "ExcludeAllAddressRequired",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether to exclude phone numbers that require a local address",
            "in": "query",
            "name": "ExcludeLocalAddressRequired",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether to exclude phone numbers that require a foreign address",
            "in": "query",
            "name": "ExcludeForeignAddressRequired",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether to read phone numbers new to the Twilio platform",
            "in": "query",
            "name": "Beta",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Given a phone number, find a geographically close number within distance miles. (US/Canada only)",
            "in": "query",
            "name": "NearNumber",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Given a latitude/longitude pair lat,long find geographically close numbers within distance miles. (US/Canada only)",
            "in": "query",
            "name": "NearLatLong",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The search radius, in miles, for a near_ query. (US/Canada only)",
            "in": "query",
            "name": "Distance",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Limit results to a particular postal code. (US/Canada only)",
            "in": "query",
            "name": "InPostalCode",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Limit results to a particular region. (US/Canada only)",
            "in": "query",
            "name": "InRegion",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Limit results to a specific rate center, or given a phone number search within the same rate center as that number. (US/Canada only)",
            "in": "query",
            "name": "InRateCenter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Limit results to a specific local access and transport area. (US/Canada only)",
            "in": "query",
            "name": "InLata",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Limit results to a particular locality",
            "in": "query",
            "name": "InLocality",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Whether the phone numbers can receive faxes",
            "in": "query",
            "name": "FaxEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "available_phone_numbers": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.available_phone_number_country.available_phone_number_local"
                      },
                      "type": "array"
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "phone_number",
        "region",
        "beta"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{CountryCode}/MachineToMachine.json": {
      "description": "Available machine-to-machine phone numbers",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Account requesting the AvailablePhoneNumber resources",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The ISO Country code of the country from which to read phone numbers",
            "in": "path",
            "name": "CountryCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The area code of the phone numbers to read",
            "in": "query",
            "name": "AreaCode",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The pattern on which to match phone numbers",
            "in": "query",
            "name": "Contains",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Whether the phone numbers can receive text messages",
            "in": "query",
            "name": "SmsEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether the phone numbers can receive MMS messages",
            "in": "query",
            "name": "MmsEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether the phone numbers can receive calls.",
            "in": "query",
            "name": "VoiceEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether to exclude phone numbers that require an Address",
            "in": "query",
            "name": "ExcludeAllAddressRequired",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether to exclude phone numbers that require a local address",
            "in": "query",
            "name": "ExcludeLocalAddressRequired",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether to exclude phone numbers that require a foreign address",
            "in": "query",
            "name": "ExcludeForeignAddressRequired",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether to read phone numbers new to the Twilio platform",
            "in": "query",
            "name": "Beta",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Given a phone number, find a geographically close number within distance miles. (US/Canada only)",
            "in": "query",
            "name": "NearNumber",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Given a latitude/longitude pair lat,long find geographically close numbers within distance miles. (US/Canada only)",
            "in": "query",
            "name": "NearLatLong",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The search radius, in miles, for a near_ query. (US/Canada only)",
            "in": "query",
            "name": "Distance",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Limit results to a particular postal code. (US/Canada only)",
            "in": "query",
            "name": "InPostalCode",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Limit results to a particular region. (US/Canada only)",
            "in": "query",
            "name": "InRegion",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Limit results to a specific rate center, or given a phone number search within the same rate center as that number. (US/Canada only)",
            "in": "query",
            "name": "InRateCenter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Limit results to a specific local access and transport area. (US/Canada only)",
            "in": "query",
            "name": "InLata",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Limit results to a particular locality",
            "in": "query",
            "name": "InLocality",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Whether the phone numbers can receive faxes",
            "in": "query",
            "name": "FaxEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "available_phone_numbers": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.available_phone_number_country.available_phone_number_machine_to_machine"
                      },
                      "type": "array"
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "phone_number",
        "region",
        "beta"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{CountryCode}/Mobile.json": {
      "description": "Available mobile phone numbers",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Account requesting the AvailablePhoneNumber resources",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The ISO Country code of the country from which to read phone numbers",
            "in": "path",
            "name": "CountryCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The area code of the phone numbers to read",
            "in": "query",
            "name": "AreaCode",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The pattern on which to match phone numbers",
            "in": "query",
            "name": "Contains",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Whether the phone numbers can receive text messages",
            "in": "query",
            "name": "SmsEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether the phone numbers can receive MMS messages",
            "in": "query",
            "name": "MmsEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether the phone numbers can receive calls.",
            "in": "query",
            "name": "VoiceEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether to exclude phone numbers that require an Address",
            "in": "query",
            "name": "ExcludeAllAddressRequired",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether to exclude phone numbers that require a local address",
            "in": "query",
            "name": "ExcludeLocalAddressRequired",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether to exclude phone numbers that require a foreign address",
            "in": "query",
            "name": "ExcludeForeignAddressRequired",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether to read phone numbers new to the Twilio platform",
            "in": "query",
            "name": "Beta",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Given a phone number, find a geographically close number within distance miles. (US/Canada only)",
            "in": "query",
            "name": "NearNumber",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Given a latitude/longitude pair lat,long find geographically close numbers within distance miles. (US/Canada only)",
            "in": "query",
            "name": "NearLatLong",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The search radius, in miles, for a near_ query. (US/Canada only)",
            "in": "query",
            "name": "Distance",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Limit results to a particular postal code. (US/Canada only)",
            "in": "query",
            "name": "InPostalCode",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Limit results to a particular region. (US/Canada only)",
            "in": "query",
            "name": "InRegion",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Limit results to a specific rate center, or given a phone number search within the same rate center as that number. (US/Canada only)",
            "in": "query",
            "name": "InRateCenter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Limit results to a specific local access and transport area. (US/Canada only)",
            "in": "query",
            "name": "InLata",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Limit results to a particular locality",
            "in": "query",
            "name": "InLocality",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Whether the phone numbers can receive faxes",
            "in": "query",
            "name": "FaxEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "available_phone_numbers": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.available_phone_number_country.available_phone_number_mobile"
                      },
                      "type": "array"
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "phone_number",
        "region",
        "beta"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{CountryCode}/National.json": {
      "description": "Available national phone numbers",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Account requesting the AvailablePhoneNumber resources",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The ISO Country code of the country from which to read phone numbers",
            "in": "path",
            "name": "CountryCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The area code of the phone numbers to read",
            "in": "query",
            "name": "AreaCode",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The pattern on which to match phone numbers",
            "in": "query",
            "name": "Contains",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Whether the phone numbers can receive text messages",
            "in": "query",
            "name": "SmsEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether the phone numbers can receive MMS messages",
            "in": "query",
            "name": "MmsEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether the phone numbers can receive calls.",
            "in": "query",
            "name": "VoiceEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether to exclude phone numbers that require an Address",
            "in": "query",
            "name": "ExcludeAllAddressRequired",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether to exclude phone numbers that require a local address",
            "in": "query",
            "name": "ExcludeLocalAddressRequired",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether to exclude phone numbers that require a foreign address",
            "in": "query",
            "name": "ExcludeForeignAddressRequired",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether to read phone numbers new to the Twilio platform",
            "in": "query",
            "name": "Beta",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Given a phone number, find a geographically close number within distance miles. (US/Canada only)",
            "in": "query",
            "name": "NearNumber",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Given a latitude/longitude pair lat,long find geographically close numbers within distance miles. (US/Canada only)",
            "in": "query",
            "name": "NearLatLong",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The search radius, in miles, for a near_ query. (US/Canada only)",
            "in": "query",
            "name": "Distance",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Limit results to a particular postal code. (US/Canada only)",
            "in": "query",
            "name": "InPostalCode",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Limit results to a particular region. (US/Canada only)",
            "in": "query",
            "name": "InRegion",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Limit results to a specific rate center, or given a phone number search within the same rate center as that number. (US/Canada only)",
            "in": "query",
            "name": "InRateCenter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Limit results to a specific local access and transport area. (US/Canada only)",
            "in": "query",
            "name": "InLata",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Limit results to a particular locality",
            "in": "query",
            "name": "InLocality",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Whether the phone numbers can receive faxes",
            "in": "query",
            "name": "FaxEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "available_phone_numbers": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.available_phone_number_country.available_phone_number_national"
                      },
                      "type": "array"
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "phone_number",
        "region",
        "beta"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{CountryCode}/SharedCost.json": {
      "description": "Available shared cost numbers",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Account requesting the AvailablePhoneNumber resources",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The ISO Country code of the country from which to read phone numbers",
            "in": "path",
            "name": "CountryCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The area code of the phone numbers to read",
            "in": "query",
            "name": "AreaCode",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The pattern on which to match phone numbers",
            "in": "query",
            "name": "Contains",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Whether the phone numbers can receive text messages",
            "in": "query",
            "name": "SmsEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether the phone numbers can receive MMS messages",
            "in": "query",
            "name": "MmsEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether the phone numbers can receive calls.",
            "in": "query",
            "name": "VoiceEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether to exclude phone numbers that require an Address",
            "in": "query",
            "name": "ExcludeAllAddressRequired",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether to exclude phone numbers that require a local address",
            "in": "query",
            "name": "ExcludeLocalAddressRequired",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether to exclude phone numbers that require a foreign address",
            "in": "query",
            "name": "ExcludeForeignAddressRequired",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether to read phone numbers new to the Twilio platform",
            "in": "query",
            "name": "Beta",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Given a phone number, find a geographically close number within distance miles. (US/Canada only)",
            "in": "query",
            "name": "NearNumber",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Given a latitude/longitude pair lat,long find geographically close numbers within distance miles. (US/Canada only)",
            "in": "query",
            "name": "NearLatLong",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The search radius, in miles, for a near_ query. (US/Canada only)",
            "in": "query",
            "name": "Distance",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Limit results to a particular postal code. (US/Canada only)",
            "in": "query",
            "name": "InPostalCode",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Limit results to a particular region. (US/Canada only)",
            "in": "query",
            "name": "InRegion",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Limit results to a specific rate center, or given a phone number search within the same rate center as that number. (US/Canada only)",
            "in": "query",
            "name": "InRateCenter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Limit results to a specific local access and transport area. (US/Canada only)",
            "in": "query",
            "name": "InLata",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Limit results to a particular locality",
            "in": "query",
            "name": "InLocality",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Whether the phone numbers can receive faxes",
            "in": "query",
            "name": "FaxEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "available_phone_numbers": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.available_phone_number_country.available_phone_number_shared_cost"
                      },
                      "type": "array"
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "phone_number",
        "region",
        "beta"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{CountryCode}/TollFree.json": {
      "description": "Available toll free phone numbers",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Account requesting the AvailablePhoneNumber resources",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The ISO Country code of the country from which to read phone numbers",
            "in": "path",
            "name": "CountryCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The area code of the phone numbers to read",
            "in": "query",
            "name": "AreaCode",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The pattern on which to match phone numbers",
            "in": "query",
            "name": "Contains",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Whether the phone numbers can receive text messages",
            "in": "query",
            "name": "SmsEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether the phone numbers can receive MMS messages",
            "in": "query",
            "name": "MmsEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether the phone numbers can receive calls.",
            "in": "query",
            "name": "VoiceEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether to exclude phone numbers that require an Address",
            "in": "query",
            "name": "ExcludeAllAddressRequired",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether to exclude phone numbers that require a local address",
            "in": "query",
            "name": "ExcludeLocalAddressRequired",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether to exclude phone numbers that require a foreign address",
            "in": "query",
            "name": "ExcludeForeignAddressRequired",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether to read phone numbers new to the Twilio platform",
            "in": "query",
            "name": "Beta",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Given a phone number, find a geographically close number within distance miles. (US/Canada only)",
            "in": "query",
            "name": "NearNumber",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Given a latitude/longitude pair lat,long find geographically close numbers within distance miles. (US/Canada only)",
            "in": "query",
            "name": "NearLatLong",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The search radius, in miles, for a near_ query. (US/Canada only)",
            "in": "query",
            "name": "Distance",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Limit results to a particular postal code. (US/Canada only)",
            "in": "query",
            "name": "InPostalCode",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Limit results to a particular region. (US/Canada only)",
            "in": "query",
            "name": "InRegion",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Limit results to a specific rate center, or given a phone number search within the same rate center as that number. (US/Canada only)",
            "in": "query",
            "name": "InRateCenter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Limit results to a specific local access and transport area. (US/Canada only)",
            "in": "query",
            "name": "InLata",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Limit results to a particular locality",
            "in": "query",
            "name": "InLocality",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Whether the phone numbers can receive faxes",
            "in": "query",
            "name": "FaxEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "available_phone_numbers": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.available_phone_number_country.available_phone_number_toll_free"
                      },
                      "type": "array"
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "phone_number",
        "region",
        "beta"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/AvailablePhoneNumbers/{CountryCode}/Voip.json": {
      "description": "Available VoIP phone numbers",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Account requesting the AvailablePhoneNumber resources",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The ISO Country code of the country from which to read phone numbers",
            "in": "path",
            "name": "CountryCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The area code of the phone numbers to read",
            "in": "query",
            "name": "AreaCode",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The pattern on which to match phone numbers",
            "in": "query",
            "name": "Contains",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Whether the phone numbers can receive text messages",
            "in": "query",
            "name": "SmsEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether the phone numbers can receive MMS messages",
            "in": "query",
            "name": "MmsEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether the phone numbers can receive calls.",
            "in": "query",
            "name": "VoiceEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether to exclude phone numbers that require an Address",
            "in": "query",
            "name": "ExcludeAllAddressRequired",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether to exclude phone numbers that require a local address",
            "in": "query",
            "name": "ExcludeLocalAddressRequired",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether to exclude phone numbers that require a foreign address",
            "in": "query",
            "name": "ExcludeForeignAddressRequired",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether to read phone numbers new to the Twilio platform",
            "in": "query",
            "name": "Beta",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Given a phone number, find a geographically close number within distance miles. (US/Canada only)",
            "in": "query",
            "name": "NearNumber",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Given a latitude/longitude pair lat,long find geographically close numbers within distance miles. (US/Canada only)",
            "in": "query",
            "name": "NearLatLong",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The search radius, in miles, for a near_ query. (US/Canada only)",
            "in": "query",
            "name": "Distance",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Limit results to a particular postal code. (US/Canada only)",
            "in": "query",
            "name": "InPostalCode",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Limit results to a particular region. (US/Canada only)",
            "in": "query",
            "name": "InRegion",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Limit results to a specific rate center, or given a phone number search within the same rate center as that number. (US/Canada only)",
            "in": "query",
            "name": "InRateCenter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Limit results to a specific local access and transport area. (US/Canada only)",
            "in": "query",
            "name": "InLata",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Limit results to a particular locality",
            "in": "query",
            "name": "InLocality",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Whether the phone numbers can receive faxes",
            "in": "query",
            "name": "FaxEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "available_phone_numbers": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.available_phone_number_country.available_phone_number_voip"
                      },
                      "type": "array"
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "phone_number",
        "region",
        "beta"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Balance.json": {
      "description": "Account balance",
      "get": {
        "description": "Fetch the balance for an Account based on Account Sid. Balance changes may not be reflected immediately. Child accounts do not contain balance information",
        "parameters": [
          {
            "description": "Account Sid.",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.balance"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "account_sid",
        "balance",
        "currency"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Calls.json": {
      "description": "Connections between telephones and Twilio",
      "get": {
        "description": "Retrieves a collection of calls made to and from your account",
        "parameters": [
          {
            "description": "The SID of the Account that created the resource(s) to read",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Phone number or Client identifier of calls to include",
            "in": "query",
            "name": "To",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Phone number or Client identifier to filter `from` on",
            "in": "query",
            "name": "From",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Parent call SID to filter on",
            "in": "query",
            "name": "ParentCallSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The status of the resources to read",
            "in": "query",
            "name": "Status",
            "required": false,
            "schema": {
              "enum": [
                "queued",
                "ringing",
                "in-progress",
                "completed",
                "busy",
                "failed",
                "no-answer",
                "canceled"
              ],
              "type": "string"
            }
          },
          {
            "description": "Only include calls that started on or after this date",
            "in": "query",
            "name": "StartTime",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Only include usage that occurred on or before this date",
            "in": "query",
            "name": "EndTime",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "calls": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.call"
                      },
                      "type": "array"
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": "Create a new outgoing call to phones, SIP-enabled endpoints or Twilio Client connections",
        "parameters": [
          {
            "description": "The SID of the Account that will create the resource",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Phone number, SIP address, or client identifier to call",
            "in": "query",
            "name": "To",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Twilio number from which to originate the call",
            "in": "query",
            "name": "From",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "HTTP method to use to fetch TwiML",
            "in": "query",
            "name": "Method",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "Fallback URL in case of error",
            "in": "query",
            "name": "FallbackUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "HTTP Method to use with fallback_url",
            "in": "query",
            "name": "FallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL we should call to send status information to your application",
            "in": "query",
            "name": "StatusCallback",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The call progress events that we send to the `status_callback` URL.",
            "in": "query",
            "name": "StatusCallbackEvent",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "HTTP Method to use with status_callback",
            "in": "query",
            "name": "StatusCallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The digits to dial after connecting to the number",
            "in": "query",
            "name": "SendDigits",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Number of seconds to wait for an answer",
            "in": "query",
            "name": "Timeout",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Whether or not to record the call",
            "in": "query",
            "name": "Record",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The number of channels in the final recording",
            "in": "query",
            "name": "RecordingChannels",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The URL that we call when the recording is available to be accessed",
            "in": "query",
            "name": "RecordingStatusCallback",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The HTTP method we should use when calling the `recording_status_callback` URL",
            "in": "query",
            "name": "RecordingStatusCallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The username used to authenticate the caller making a SIP call",
            "in": "query",
            "name": "SipAuthUsername",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The password required to authenticate the user account specified in `sip_auth_username`.",
            "in": "query",
            "name": "SipAuthPassword",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Enable machine detection or end of greeting detection",
            "in": "query",
            "name": "MachineDetection",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Number of seconds to wait for machine detection",
            "in": "query",
            "name": "MachineDetectionTimeout",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The recording status events that will trigger calls to the URL specified in `recording_status_callback`",
            "in": "query",
            "name": "RecordingStatusCallbackEvent",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Set this parameter to control trimming of silence on the recording.",
            "in": "query",
            "name": "Trim",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The phone number, SIP address, or Client identifier that made this call. Phone numbers are in E.164 format (e.g., +16175551212). SIP addresses are formatted as `name@company.com`.",
            "in": "query",
            "name": "CallerId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Number of milliseconds for measuring stick for the length of the speech activity",
            "in": "query",
            "name": "MachineDetectionSpeechThreshold",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of milliseconds of silence after speech activity",
            "in": "query",
            "name": "MachineDetectionSpeechEndThreshold",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of milliseconds of initial silence",
            "in": "query",
            "name": "MachineDetectionSilenceTimeout",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The absolute URL that returns TwiML for this call",
            "in": "query",
            "name": "Url",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The SID of the Application resource that will handle the call",
            "in": "query",
            "name": "ApplicationSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.call"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "from",
        "to",
        "status",
        "start_time"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Calls/FeedbackSummary.json": {
      "description": "How your end user\u00e2\u20ac\u2122s perceive the quality of their calls",
      "post": {
        "description": "Create a FeedbackSummary resource for a call",
        "parameters": [
          {
            "description": "The unique sid that identifies this account",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Only include feedback given on or after this date",
            "in": "query",
            "name": "StartDate",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Only include feedback given on or before this date",
            "in": "query",
            "name": "EndDate",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "`true` includes feedback from the specified account and its subaccounts",
            "in": "query",
            "name": "IncludeSubaccounts",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The URL that we will request when the feedback summary is complete",
            "in": "query",
            "name": "StatusCallback",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method we use to make requests to the StatusCallback URL",
            "in": "query",
            "name": "StatusCallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.call.call_feedback_summary"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "call_feedback_count",
        "quality_score_average",
        "start_date"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Calls/FeedbackSummary/{Sid}.json": {
      "delete": {
        "description": "Delete a FeedbackSummary resource from a call",
        "parameters": [
          {
            "description": "The unique sid that identifies this account",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string that uniquely identifies this feedback summary resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "How your end user\u00e2\u20ac\u2122s perceive the quality of their calls",
      "get": {
        "description": "Fetch a FeedbackSummary resource from a call",
        "parameters": [
          {
            "description": "The unique sid that identifies this account",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string that uniquely identifies this feedback summary resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.call.call_feedback_summary"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "call_feedback_count",
        "quality_score_average",
        "start_date"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Feedback.json": {
      "description": "Describes the quality experienced during phone calls",
      "get": {
        "description": "Fetch a Feedback resource from a call",
        "parameters": [
          {
            "description": "The unique sid that identifies this account",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The call sid that uniquely identifies the call",
            "in": "path",
            "name": "CallSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.call.call_feedback"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": "Update a Feedback resource for a call",
        "parameters": [
          {
            "description": "The unique sid that identifies this account",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The call sid that uniquely identifies the call",
            "in": "path",
            "name": "CallSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The call quality expressed as an integer from 1 to 5",
            "in": "query",
            "name": "QualityScore",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Issues experienced during the call",
            "in": "query",
            "name": "Issue",
            "required": false,
            "schema": {
              "items": {
                "enum": [
                  "audio-latency",
                  "digits-not-captured",
                  "dropped-call",
                  "imperfect-audio",
                  "incorrect-caller-id",
                  "one-way-audio",
                  "post-dial-delay",
                  "unsolicited-call"
                ],
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.call.call_feedback"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "quality_score",
        "date_created"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Notifications.json": {
      "description": "Error notifications for calls",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to read",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The Call SID of the resources to read",
            "in": "path",
            "name": "CallSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Filter by log level",
            "in": "query",
            "name": "Log",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Filter by date",
            "in": "query",
            "name": "MessageDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "notifications": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.call.call_notification"
                      },
                      "type": "array"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "call_sid",
        "error_code",
        "message_date"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Notifications/{Sid}.json": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to delete",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The Call SID of the resources to delete",
            "in": "path",
            "name": "CallSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^NO[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "Error notifications for calls",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Account that created the resource to fetch",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The Call SID of the resource to fetch",
            "in": "path",
            "name": "CallSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^NO[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.call.call_notification|instance"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "call_sid",
        "error_code",
        "message_date"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Recordings.json": {
      "description": "Recordings associated with voice calls",
      "get": {
        "description": "Retrieve a list of recordings belonging to the call used to make the request",
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to read",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The Call SID of the resources to read",
            "in": "path",
            "name": "CallSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The `YYYY-MM-DD` value of the resources to read",
            "in": "query",
            "name": "DateCreated",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "recordings": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.call.call_recording"
                      },
                      "type": "array"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": "Create a recording for the call",
        "parameters": [
          {
            "description": "The SID of the Account that will create the resource",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the Call to associate the resource with",
            "in": "path",
            "name": "CallSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The recording status changes that should generate a callback",
            "in": "query",
            "name": "RecordingStatusCallbackEvent",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "The callback URL on each selected recording event",
            "in": "query",
            "name": "RecordingStatusCallback",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method we should use to call `recording_status_callback`",
            "in": "query",
            "name": "RecordingStatusCallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "Whether to trim the silence in the recording",
            "in": "query",
            "name": "Trim",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of channels that the output recording will be configured with",
            "in": "query",
            "name": "RecordingChannels",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.call.call_recording"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "call_sid",
        "status",
        "start_time",
        "duration"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Calls/{CallSid}/Recordings/{Sid}.json": {
      "delete": {
        "description": "Delete a recording from your account",
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to delete",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The Call SID of the resources to delete",
            "in": "path",
            "name": "CallSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "Recordings associated with voice calls",
      "get": {
        "description": "Fetch an instance of a recording for a call",
        "parameters": [
          {
            "description": "The SID of the Account that created the resource to fetch",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The Call SID of the resource to fetch",
            "in": "path",
            "name": "CallSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.call.call_recording"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": "Changes the status of the recording to paused, stopped, or in-progress. Note: Pass `Twilio.CURRENT` instead of recording sid to reference current active recording.",
        "parameters": [
          {
            "description": "The SID of the Account that created the resource to update",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The Call SID of the resource to update",
            "in": "path",
            "name": "CallSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The new status of the recording",
            "in": "query",
            "name": "Status",
            "required": true,
            "schema": {
              "enum": [
                "in-progress",
                "paused",
                "stopped",
                "processing",
                "completed",
                "absent"
              ],
              "type": "string"
            }
          },
          {
            "description": "Whether to record or not during the pause period.",
            "in": "query",
            "name": "PauseBehavior",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.call.call_recording"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "call_sid",
        "status",
        "start_time",
        "duration"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Calls/{Sid}.json": {
      "delete": {
        "description": "Delete a Call record from your account. Once the record is deleted, it will no longer appear in the API and Account Portal logs.",
        "parameters": [
          {
            "description": "The SID of the Account that created the resource(s) to delete",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies this resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "Connections between telephones and Twilio",
      "get": {
        "description": "Fetch the call specified by the provided Call SID",
        "parameters": [
          {
            "description": "The SID of the Account that created the resource(s) to fetch",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies this resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.call"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": "Initiates a call redirect or terminates a call",
        "parameters": [
          {
            "description": "The SID of the Account that created the resource(s) to update",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies this resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The absolute URL that returns TwiML for this call",
            "in": "query",
            "name": "Url",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "HTTP method to use to fetch TwiML",
            "in": "query",
            "name": "Method",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The new status to update the call with.",
            "in": "query",
            "name": "Status",
            "required": false,
            "schema": {
              "enum": [
                "canceled",
                "completed"
              ],
              "type": "string"
            }
          },
          {
            "description": "Fallback URL in case of error",
            "in": "query",
            "name": "FallbackUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "HTTP Method to use with fallback_url",
            "in": "query",
            "name": "FallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL we should call to send status information to your application",
            "in": "query",
            "name": "StatusCallback",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "HTTP Method to use to call status_callback",
            "in": "query",
            "name": "StatusCallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.call"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "from",
        "to",
        "status",
        "start_time"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Conferences.json": {
      "description": "Voice call conferences",
      "get": {
        "description": "Retrieve a list of conferences belonging to the account used to make the request",
        "parameters": [
          {
            "description": "The SID of the Account that created the resource(s) to read",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The `YYYY-MM-DD` value of the resources to read",
            "in": "query",
            "name": "DateCreated",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "The `YYYY-MM-DD` value of the resources to read",
            "in": "query",
            "name": "DateUpdated",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "The string that identifies the Conference resources to read",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The status of the resources to read",
            "in": "query",
            "name": "Status",
            "required": false,
            "schema": {
              "enum": [
                "init",
                "in-progress",
                "completed"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "conferences": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.conference"
                      },
                      "type": "array"
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name",
        "status"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants.json": {
      "description": "Conference participants",
      "get": {
        "description": "Retrieve a list of participants belonging to the account used to make the request",
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to read",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the conference with the participants to read",
            "in": "path",
            "name": "ConferenceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Whether to return only participants that are muted",
            "in": "query",
            "name": "Muted",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether to return only participants that are on hold",
            "in": "query",
            "name": "Hold",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether to return only participants who are coaching another call",
            "in": "query",
            "name": "Coaching",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "participants": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.conference.participant"
                      },
                      "type": "array"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Account that will create the resource",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the participant's conference",
            "in": "path",
            "name": "ConferenceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The `from` phone number used to invite a participant",
            "in": "query",
            "name": "From",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number, client id, or sip address of the new participant",
            "in": "query",
            "name": "To",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The URL we should call to send status information to your application",
            "in": "query",
            "name": "StatusCallback",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method we should use to call `status_callback`",
            "in": "query",
            "name": "StatusCallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "Set state change events that will trigger a callback",
            "in": "query",
            "name": "StatusCallbackEvent",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "he number of seconds that we should wait for an answer",
            "in": "query",
            "name": "Timeout",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Whether to record the participant and their conferences",
            "in": "query",
            "name": "Record",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether to mute the agent",
            "in": "query",
            "name": "Muted",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether to play a notification beep to the conference when the participant joins",
            "in": "query",
            "name": "Beep",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Whether the conference starts when the participant joins the conference",
            "in": "query",
            "name": "StartConferenceOnEnter",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether to end the conference when the participant leaves",
            "in": "query",
            "name": "EndConferenceOnExit",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "URL that hosts pre-conference hold music",
            "in": "query",
            "name": "WaitUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method we should use to call `wait_url`",
            "in": "query",
            "name": "WaitMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "Whether agents can hear the state of the outbound call",
            "in": "query",
            "name": "EarlyMedia",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The maximum number of agent conference participants",
            "in": "query",
            "name": "MaxParticipants",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Whether to record the conference the participant is joining",
            "in": "query",
            "name": "ConferenceRecord",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Whether to trim leading and trailing silence from your recorded conference audio files",
            "in": "query",
            "name": "ConferenceTrim",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The callback URL for conference events",
            "in": "query",
            "name": "ConferenceStatusCallback",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "HTTP method for requesting `conference_status_callback` URL",
            "in": "query",
            "name": "ConferenceStatusCallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The conference state changes that should generate a call to `conference_status_callback`",
            "in": "query",
            "name": "ConferenceStatusCallbackEvent",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Specify `mono` or `dual` recording channels",
            "in": "query",
            "name": "RecordingChannels",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The URL that we should call using the `recording_status_callback_method` when the recording status changes",
            "in": "query",
            "name": "RecordingStatusCallback",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method we should use when we call `recording_status_callback`",
            "in": "query",
            "name": "RecordingStatusCallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The SIP username used for authentication",
            "in": "query",
            "name": "SipAuthUsername",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The SIP password for authentication",
            "in": "query",
            "name": "SipAuthPassword",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The region where we should mix the conference audio",
            "in": "query",
            "name": "Region",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The URL we should call using the `conference_recording_status_callback_method` when the conference recording is available",
            "in": "query",
            "name": "ConferenceRecordingStatusCallback",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method we should use to call `conference_recording_status_callback`",
            "in": "query",
            "name": "ConferenceRecordingStatusCallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The recording state changes that should generate a call to `recording_status_callback`",
            "in": "query",
            "name": "RecordingStatusCallbackEvent",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "The conference recording state changes that should generate a call to `conference_recording_status_callback`",
            "in": "query",
            "name": "ConferenceRecordingStatusCallbackEvent",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "Indicates if the participant changed to coach",
            "in": "query",
            "name": "Coaching",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The SID of the participant who is being `coached`",
            "in": "query",
            "name": "CallSidToCoach",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.conference.participant"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "call_sid",
        "status",
        "muted",
        "hold"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Participants/{CallSid}.json": {
      "delete": {
        "description": "Kick a participant from a given conference",
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to delete",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the conference with the participants to delete",
            "in": "path",
            "name": "ConferenceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The Call SID of the resources to delete",
            "in": "path",
            "name": "CallSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "Conference participants",
      "get": {
        "description": "Fetch an instance of a participant",
        "parameters": [
          {
            "description": "The SID of the Account that created the resource to fetch",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the conference with the participant to fetch",
            "in": "path",
            "name": "ConferenceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The Call SID of the resource to fetch",
            "in": "path",
            "name": "CallSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.conference.participant"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": "Update the properties of the participant",
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to update",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the conference with the participant to update",
            "in": "path",
            "name": "ConferenceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The Call SID of the resources to update",
            "in": "path",
            "name": "CallSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Whether the participant should be muted",
            "in": "query",
            "name": "Muted",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether the participant should be on hold",
            "in": "query",
            "name": "Hold",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The URL we call using the `hold_method` for  music that plays when the participant is on hold",
            "in": "query",
            "name": "HoldUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method we should use to call hold_url",
            "in": "query",
            "name": "HoldMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL we call using the `announce_method` for an announcement to the participant",
            "in": "query",
            "name": "AnnounceUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method we should use to call announce_url",
            "in": "query",
            "name": "AnnounceMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "URL that hosts pre-conference hold music",
            "in": "query",
            "name": "WaitUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method we should use to call `wait_url`",
            "in": "query",
            "name": "WaitMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "Whether to play a notification beep to the conference when the participant exit",
            "in": "query",
            "name": "BeepOnExit",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether to end the conference when the participant leaves",
            "in": "query",
            "name": "EndConferenceOnExit",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Indicates if the participant changed to coach",
            "in": "query",
            "name": "Coaching",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The SID of the participant who is being `coached`",
            "in": "query",
            "name": "CallSidToCoach",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.conference.participant"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "call_sid",
        "status",
        "muted",
        "hold"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Recordings.json": {
      "description": "Recordings of conferences",
      "get": {
        "description": "Retrieve a list of recordings belonging to the call used to make the request",
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to read",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Read by unique Conference SID for the recording",
            "in": "path",
            "name": "ConferenceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The `YYYY-MM-DD` value of the resources to read",
            "in": "query",
            "name": "DateCreated",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "recordings": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.conference.conference_recording"
                      },
                      "type": "array"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "conference_sid",
        "status",
        "start_time",
        "duration"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Conferences/{ConferenceSid}/Recordings/{Sid}.json": {
      "delete": {
        "description": "Delete a recording from your account",
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to delete",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Delete by the recording's conference SID",
            "in": "path",
            "name": "ConferenceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "Recordings of conferences",
      "get": {
        "description": "Fetch an instance of a recording for a call",
        "parameters": [
          {
            "description": "The SID of the Account that created the resource to fetch",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Fetch by unique Conference SID for the recording",
            "in": "path",
            "name": "ConferenceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.conference.conference_recording"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": "Changes the status of the recording to paused, stopped, or in-progress. Note: To use `Twilio.CURRENT`, pass it as recording sid.",
        "parameters": [
          {
            "description": "The SID of the Account that created the resource to update",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Update by unique Conference SID for the recording",
            "in": "path",
            "name": "ConferenceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The new status of the recording",
            "in": "query",
            "name": "Status",
            "required": true,
            "schema": {
              "enum": [
                "in-progress",
                "paused",
                "stopped",
                "processing",
                "completed",
                "absent"
              ],
              "type": "string"
            }
          },
          {
            "description": "Whether to record during a pause",
            "in": "query",
            "name": "PauseBehavior",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.conference.conference_recording"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "conference_sid",
        "status",
        "start_time",
        "duration"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Conferences/{Sid}.json": {
      "description": "Voice call conferences",
      "get": {
        "description": "Fetch an instance of a conference",
        "parameters": [
          {
            "description": "The SID of the Account that created the resource(s) to fetch",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies this resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.conference"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Account that created the resource(s) to update",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies this resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The new status of the resource",
            "in": "query",
            "name": "Status",
            "required": false,
            "schema": {
              "enum": [
                "completed"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL we should call to announce something into the conference",
            "in": "query",
            "name": "AnnounceUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "he HTTP method used to call announce_url",
            "in": "query",
            "name": "AnnounceMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.conference"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name",
        "status"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/ConnectApps.json": {
      "description": "Twilio Connect apps",
      "get": {
        "description": "Retrieve a list of connect-apps belonging to the account used to make the request",
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to read",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "connect_apps": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.connect_app"
                      },
                      "type": "array"
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/ConnectApps/{Sid}.json": {
      "delete": {
        "description": "Delete an instance of a connect-app",
        "parameters": [
          {
            "description": "The SID of the Account that created the resource to fetch",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CN[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "Twilio Connect apps",
      "get": {
        "description": "Fetch an instance of a connect-app",
        "parameters": [
          {
            "description": "The SID of the Account that created the resource to fetch",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CN[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.connect_app"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": "Update a connect-app with the specified parameters",
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to update",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CN[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The URL to redirect the user to after authorization",
            "in": "query",
            "name": "AuthorizeRedirectUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The company name to set for the Connect App",
            "in": "query",
            "name": "CompanyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The HTTP method to use when calling deauthorize_callback_url",
            "in": "query",
            "name": "DeauthorizeCallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL to call to de-authorize the Connect App",
            "in": "query",
            "name": "DeauthorizeCallbackUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "A description of the Connect App",
            "in": "query",
            "name": "Description",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A string to describe the resource",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A public URL where users can obtain more information",
            "in": "query",
            "name": "HomepageUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The set of permissions that your ConnectApp will request",
            "in": "query",
            "name": "Permissions",
            "required": false,
            "schema": {
              "items": {
                "enum": [
                  "get-all",
                  "post-all"
                ],
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.connect_app"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers.json": {
      "description": "Incoming phone numbers on a Twilio account/project",
      "get": {
        "description": "Retrieve a list of incoming-phone-numbers belonging to the account used to make the request.",
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to read",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Whether to include new phone numbers",
            "in": "query",
            "name": "Beta",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "A string that identifies the IncomingPhoneNumber resources to read",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The phone numbers of the IncomingPhoneNumber resources to read",
            "in": "query",
            "name": "PhoneNumber",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Include phone numbers based on their origin. By default, phone numbers of all origin are included.",
            "in": "query",
            "name": "Origin",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "incoming_phone_numbers": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.incoming_phone_number"
                      },
                      "type": "array"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": "Purchase a phone-number for the account.",
        "parameters": [
          {
            "description": "The SID of the Account that will create the resource",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The API version to use for incoming calls made to the new phone number",
            "in": "query",
            "name": "ApiVersion",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A string to describe the new phone number",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The SID of the application to handle SMS messages",
            "in": "query",
            "name": "SmsApplicationSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "HTTP method used with sms_fallback_url",
            "in": "query",
            "name": "SmsFallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL we call when an error occurs while executing TwiML",
            "in": "query",
            "name": "SmsFallbackUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method to use with sms url",
            "in": "query",
            "name": "SmsMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL we should call when the new phone number receives an incoming SMS message",
            "in": "query",
            "name": "SmsUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The URL we should call to send status information to your application",
            "in": "query",
            "name": "StatusCallback",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "HTTP method we should use to call status_callback",
            "in": "query",
            "name": "StatusCallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The SID of the application to handle the new phone number",
            "in": "query",
            "name": "VoiceApplicationSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Whether to lookup the caller's name",
            "in": "query",
            "name": "VoiceCallerIdLookup",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The HTTP method used with voice_fallback_url",
            "in": "query",
            "name": "VoiceFallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL we will call when an error occurs in TwiML",
            "in": "query",
            "name": "VoiceFallbackUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method used with the voice_url",
            "in": "query",
            "name": "VoiceMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL we should call when the phone number receives a call",
            "in": "query",
            "name": "VoiceUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "Status determining whether the new phone number is enabled for emergency calling",
            "in": "query",
            "name": "EmergencyStatus",
            "required": false,
            "schema": {
              "enum": [
                "Active",
                "Inactive"
              ],
              "type": "string"
            }
          },
          {
            "description": "The emergency address configuration to use for emergency calling",
            "in": "query",
            "name": "EmergencyAddressSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "SID of the trunk to handle calls to the new phone number",
            "in": "query",
            "name": "TrunkSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the Identity resource to associate with the new phone number",
            "in": "query",
            "name": "IdentitySid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RI[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the Address resource associated with the phone number",
            "in": "query",
            "name": "AddressSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Incoming call type: fax or voice",
            "in": "query",
            "name": "VoiceReceiveMode",
            "required": false,
            "schema": {
              "enum": [
                "voice",
                "fax"
              ],
              "type": "string"
            }
          },
          {
            "description": "The phone number to purchase in E.164 format",
            "in": "query",
            "name": "PhoneNumber",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The desired area code for the new phone number",
            "in": "query",
            "name": "AreaCode",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.incoming_phone_number"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "phone_number",
        "friendly_name"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/Local.json": {
      "description": "Incoming local phone numbers on a Twilio account/project",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to read",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Whether to include new phone numbers",
            "in": "query",
            "name": "Beta",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "A string that identifies the resources to read",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The phone numbers of the resources to read",
            "in": "query",
            "name": "PhoneNumber",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Include phone numbers based on their origin. By default, phone numbers of all origin are included.",
            "in": "query",
            "name": "Origin",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "incoming_phone_numbers": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.incoming_phone_number.incoming_phone_number_local"
                      },
                      "type": "array"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Account that will create the resource",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The phone number to purchase in E.164 format",
            "in": "query",
            "name": "PhoneNumber",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The API version to use for incoming calls made to the new phone number",
            "in": "query",
            "name": "ApiVersion",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A string to describe the new phone number",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The SID of the application to handle SMS messages",
            "in": "query",
            "name": "SmsApplicationSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method we use to call status_callback",
            "in": "query",
            "name": "SmsFallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL we call when an error occurs while executing TwiML",
            "in": "query",
            "name": "SmsFallbackUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method to use with sms url",
            "in": "query",
            "name": "SmsMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL we should call when the new phone number receives an incoming SMS message",
            "in": "query",
            "name": "SmsUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The URL we should call to send status information to your application",
            "in": "query",
            "name": "StatusCallback",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "HTTP method we should use to call status_callback",
            "in": "query",
            "name": "StatusCallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The SID of the application to handle the new phone number",
            "in": "query",
            "name": "VoiceApplicationSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Whether to lookup the caller's name",
            "in": "query",
            "name": "VoiceCallerIdLookup",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The HTTP method used with voice_fallback_url",
            "in": "query",
            "name": "VoiceFallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL we will call when an error occurs in TwiML",
            "in": "query",
            "name": "VoiceFallbackUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method used with the voice_url",
            "in": "query",
            "name": "VoiceMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL we should call when the phone number receives a call",
            "in": "query",
            "name": "VoiceUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The SID of the Identity resource to associate with the new phone number",
            "in": "query",
            "name": "IdentitySid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RI[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the Address resource associated with the phone number",
            "in": "query",
            "name": "AddressSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.incoming_phone_number.incoming_phone_number_local"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "phone_number",
        "friendly_name"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/Mobile.json": {
      "description": "Incoming mobile phone numbers on a Twilio account/project",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to read",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Whether to include new phone numbers",
            "in": "query",
            "name": "Beta",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "A string that identifies the resources to read",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The phone numbers of the resources to read",
            "in": "query",
            "name": "PhoneNumber",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Include phone numbers based on their origin. By default, phone numbers of all origin are included.",
            "in": "query",
            "name": "Origin",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "incoming_phone_numbers": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.incoming_phone_number.incoming_phone_number_mobile"
                      },
                      "type": "array"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Account that will create the resource",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The phone number to purchase in E.164 format",
            "in": "query",
            "name": "PhoneNumber",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The API version to use for incoming calls made to the new phone number",
            "in": "query",
            "name": "ApiVersion",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A string to describe the new phone number",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The SID of the application to handle SMS messages",
            "in": "query",
            "name": "SmsApplicationSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "HTTP method used with sms_fallback_url",
            "in": "query",
            "name": "SmsFallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL we call when an error occurs while executing TwiML",
            "in": "query",
            "name": "SmsFallbackUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method to use with sms url",
            "in": "query",
            "name": "SmsMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL we should call when the new phone number receives an incoming SMS message",
            "in": "query",
            "name": "SmsUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The URL we should call to send status information to your application",
            "in": "query",
            "name": "StatusCallback",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method we should use to call status_callback",
            "in": "query",
            "name": "StatusCallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The SID of the application to handle the new phone number",
            "in": "query",
            "name": "VoiceApplicationSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Whether to lookup the caller's name",
            "in": "query",
            "name": "VoiceCallerIdLookup",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The HTTP method used with voice_fallback_url",
            "in": "query",
            "name": "VoiceFallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL we will call when an error occurs in TwiML",
            "in": "query",
            "name": "VoiceFallbackUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method used with the voice_url",
            "in": "query",
            "name": "VoiceMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL we should call when the phone number receives a call",
            "in": "query",
            "name": "VoiceUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The SID of the Identity resource to associate with the new phone number",
            "in": "query",
            "name": "IdentitySid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RI[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the Address resource associated with the phone number",
            "in": "query",
            "name": "AddressSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.incoming_phone_number.incoming_phone_number_mobile"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "phone_number",
        "friendly_name"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/TollFree.json": {
      "description": "Incoming toll free phone numbers on a Twilio account/project",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to read",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Whether to include new phone numbers",
            "in": "query",
            "name": "Beta",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "A string that identifies the resources to read",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The phone numbers of the resources to read",
            "in": "query",
            "name": "PhoneNumber",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Include phone numbers based on their origin. By default, phone numbers of all origin are included.",
            "in": "query",
            "name": "Origin",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "incoming_phone_numbers": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.incoming_phone_number.incoming_phone_number_toll_free"
                      },
                      "type": "array"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Account that will create the resource",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The phone number to purchase in E.164 format",
            "in": "query",
            "name": "PhoneNumber",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The API version to use for incoming calls made to the new phone number",
            "in": "query",
            "name": "ApiVersion",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A string to describe the new phone number",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The SID of the application to handle SMS messages",
            "in": "query",
            "name": "SmsApplicationSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "HTTP method used with sms_fallback_url",
            "in": "query",
            "name": "SmsFallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL we call when an error occurs while executing TwiML",
            "in": "query",
            "name": "SmsFallbackUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method to use with sms_url",
            "in": "query",
            "name": "SmsMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL we should call when the new phone number receives an incoming SMS message",
            "in": "query",
            "name": "SmsUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The URL to send status information to your application",
            "in": "query",
            "name": "StatusCallback",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method we should use to call status_callback",
            "in": "query",
            "name": "StatusCallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The SID of the application to handle the new phone number",
            "in": "query",
            "name": "VoiceApplicationSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Whether to lookup the caller's name",
            "in": "query",
            "name": "VoiceCallerIdLookup",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The HTTP method used with voice_fallback_url",
            "in": "query",
            "name": "VoiceFallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL we will call when an error occurs in TwiML",
            "in": "query",
            "name": "VoiceFallbackUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method used with the voice_url",
            "in": "query",
            "name": "VoiceMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL we should call when the phone number receives a call",
            "in": "query",
            "name": "VoiceUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The SID of the Identity resource to associate with the new phone number",
            "in": "query",
            "name": "IdentitySid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RI[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the Address resource associated with the phone number",
            "in": "query",
            "name": "AddressSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.incoming_phone_number.incoming_phone_number_toll_free"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "phone_number",
        "friendly_name"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{ResourceSid}/AssignedAddOns.json": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Retrieve a list of Add-on installations currently assigned to this Number.",
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to read",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the Phone Number that installed this Add-on",
            "in": "path",
            "name": "ResourceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "assigned_add_ons": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.incoming_phone_number.incoming_phone_number_assigned_add_on"
                      },
                      "type": "array"
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "post": {
        "description": "Assign an Add-on installation to the Number specified.",
        "parameters": [
          {
            "description": "The SID of the Account that will create the resource",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the Phone Number to assign the Add-on",
            "in": "path",
            "name": "ResourceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID that identifies the Add-on installation",
            "in": "query",
            "name": "InstalledAddOnSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^XE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.incoming_phone_number.incoming_phone_number_assigned_add_on"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "unique_name",
        "friendly_name",
        "description"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{ResourceSid}/AssignedAddOns/{AssignedAddOnSid}/Extensions.json": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Retrieve a list of Extensions for the Assigned Add-on.",
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to read",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the Phone Number to which the Add-on is assigned",
            "in": "path",
            "name": "ResourceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID that uniquely identifies the assigned Add-on installation",
            "in": "path",
            "name": "AssignedAddOnSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^XE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "end": {
                      "type": "integer"
                    },
                    "extensions": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.incoming_phone_number.incoming_phone_number_assigned_add_on.incoming_phone_number_assigned_add_on_extension"
                      },
                      "type": "array"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "unique_name",
        "friendly_name",
        "product_name"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{ResourceSid}/AssignedAddOns/{AssignedAddOnSid}/Extensions/{Sid}.json": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Fetch an instance of an Extension for the Assigned Add-on.",
        "parameters": [
          {
            "description": "The SID of the Account that created the resource to fetch",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the Phone Number to which the Add-on is assigned",
            "in": "path",
            "name": "ResourceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID that uniquely identifies the assigned Add-on installation",
            "in": "path",
            "name": "AssignedAddOnSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^XE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^XF[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.incoming_phone_number.incoming_phone_number_assigned_add_on.incoming_phone_number_assigned_add_on_extension"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "unique_name",
        "friendly_name",
        "product_name"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{ResourceSid}/AssignedAddOns/{Sid}.json": {
      "delete": {
        "description": "Remove the assignment of an Add-on installation from the Number specified.",
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to delete",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the Phone Number that installed this Add-on",
            "in": "path",
            "name": "ResourceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^XE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "Fetch an instance of an Add-on installation currently assigned to this Number.",
        "parameters": [
          {
            "description": "The SID of the Account that created the resource to fetch",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the Phone Number that installed this Add-on",
            "in": "path",
            "name": "ResourceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^XE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.incoming_phone_number.incoming_phone_number_assigned_add_on"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Beta"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "unique_name",
        "friendly_name",
        "description"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/IncomingPhoneNumbers/{Sid}.json": {
      "delete": {
        "description": "Delete a phone-numbers belonging to the account used to make the request.",
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to delete",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "Incoming phone numbers on a Twilio account/project",
      "get": {
        "description": "Fetch an incoming-phone-number belonging to the account used to make the request.",
        "parameters": [
          {
            "description": "The SID of the Account that created the resource to fetch",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.incoming_phone_number"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": "Update an incoming-phone-number instance.",
        "parameters": [
          {
            "description": "The SID of the Account that created the resource to update",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the Account that created the resource to update",
            "in": "query",
            "name": "AccountSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The API version to use for incoming calls made to the phone number",
            "in": "query",
            "name": "ApiVersion",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A string to describe the resource",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique string that identifies the application",
            "in": "query",
            "name": "SmsApplicationSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "HTTP method used with sms_fallback_url",
            "in": "query",
            "name": "SmsFallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL we call when an error occurs while executing TwiML",
            "in": "query",
            "name": "SmsFallbackUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method to use with sms_url",
            "in": "query",
            "name": "SmsMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL we should call when the phone number receives an incoming SMS message",
            "in": "query",
            "name": "SmsUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The URL we should call to send status information to your application",
            "in": "query",
            "name": "StatusCallback",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method we should use to call status_callback",
            "in": "query",
            "name": "StatusCallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The SID of the application to handle the phone number",
            "in": "query",
            "name": "VoiceApplicationSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Whether to lookup the caller's name",
            "in": "query",
            "name": "VoiceCallerIdLookup",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The HTTP method used with fallback_url",
            "in": "query",
            "name": "VoiceFallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL we will call when an error occurs in TwiML",
            "in": "query",
            "name": "VoiceFallbackUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method used with the voice_url",
            "in": "query",
            "name": "VoiceMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL we should call when the phone number receives a call",
            "in": "query",
            "name": "VoiceUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "Whether the phone number is enabled for emergency calling",
            "in": "query",
            "name": "EmergencyStatus",
            "required": false,
            "schema": {
              "enum": [
                "Active",
                "Inactive"
              ],
              "type": "string"
            }
          },
          {
            "description": "The emergency address configuration to use for emergency calling",
            "in": "query",
            "name": "EmergencyAddressSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "SID of the trunk to handle phone calls to the phone number",
            "in": "query",
            "name": "TrunkSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Incoming call type: fax or voice",
            "in": "query",
            "name": "VoiceReceiveMode",
            "required": false,
            "schema": {
              "enum": [
                "voice",
                "fax"
              ],
              "type": "string"
            }
          },
          {
            "description": "Unique string that identifies the identity associated with number",
            "in": "query",
            "name": "IdentitySid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RI[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the Address resource associated with the phone number",
            "in": "query",
            "name": "AddressSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.incoming_phone_number"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "phone_number",
        "friendly_name"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Keys.json": {
      "description": "API keys",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to read",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "keys": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.key"
                      },
                      "type": "array"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Account that will be responsible for the new Key resource",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string to describe the resource",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.new_key"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name",
        "date_created"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Keys/{Sid}.json": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to delete",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^SK[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "API keys",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Account that created the resource to fetch",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^SK[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.key"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to update",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^SK[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string to describe the resource",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.key"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name",
        "date_created"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Messages.json": {
      "description": "Inbound or outbound messages",
      "get": {
        "description": "Retrieve a list of messages belonging to the account used to make the request",
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to read",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Filter by messages sent to this number",
            "in": "query",
            "name": "To",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by from number",
            "in": "query",
            "name": "From",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by date sent",
            "in": "query",
            "name": "DateSent",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "messages": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.message"
                      },
                      "type": "array"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": "Send a message from the account used to make the request",
        "parameters": [
          {
            "description": "The SID of the Account that will create the resource",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The destination phone number",
            "in": "query",
            "name": "To",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The URL we should call to send status information to your application",
            "in": "query",
            "name": "StatusCallback",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The application to use for callbacks",
            "in": "query",
            "name": "ApplicationSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The total maximum price up to 4 decimal places in US dollars acceptable for the message to be delivered.",
            "in": "query",
            "name": "MaxPrice",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Whether to confirm delivery of the message",
            "in": "query",
            "name": "ProvideFeedback",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The number of seconds that the message can remain in our outgoing queue.",
            "in": "query",
            "name": "ValidityPeriod",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Reserved",
            "in": "query",
            "name": "ForceDelivery",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether to detect Unicode characters that have a similar GSM-7 character and replace them",
            "in": "query",
            "name": "SmartEncoded",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "A JSON string that represents an interactive message",
            "in": "query",
            "name": "InteractiveData",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Whether to forcefully whitelist a from:to pair",
            "in": "query",
            "name": "ForceOptIn",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The phone number that initiated the message",
            "in": "query",
            "name": "From",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The SID of the Messaging Service you want to associate with the message.",
            "in": "query",
            "name": "MessagingServiceSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MG[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The text of the message you want to send. Can be up to 1,600 characters in length.",
            "in": "query",
            "name": "Body",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The URL of the media to send with the message",
            "in": "query",
            "name": "MediaUrl",
            "required": false,
            "schema": {
              "items": {
                "format": "uri",
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.message"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "from",
        "to",
        "status",
        "direction",
        "date_sent"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Messages/{MessageSid}/Feedback.json": {
      "description": "Customer-provided feedback on delivery confirmation",
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Account that will create the resource",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the Message resource for which the feedback was provided",
            "in": "path",
            "name": "MessageSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^(SM|MM)[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Whether the feedback has arrived",
            "in": "query",
            "name": "Outcome",
            "required": false,
            "schema": {
              "enum": [
                "confirmed",
                "umconfirmed"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.message.message_feedback"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "message_sid",
        "outcome",
        "date_created"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Messages/{MessageSid}/Media.json": {
      "description": "Media attached to MMS messages",
      "get": {
        "description": "Retrieve a list of medias belonging to the account used to make the request",
        "parameters": [
          {
            "description": "The SID of the Account that created the resource(s) to read",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the Message resource that this Media resource belongs to",
            "in": "path",
            "name": "MessageSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^(SM|MM)[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The `YYYY-MM-DD` value of the resources to read",
            "in": "query",
            "name": "DateCreated",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "media_list": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.message.media"
                      },
                      "type": "array"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "parent_sid",
        "content_type"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Messages/{MessageSid}/Media/{Sid}.json": {
      "delete": {
        "description": "Delete media from your account. Once delete, you will no longer be billed",
        "parameters": [
          {
            "description": "The SID of the Account that created the resource(s) to delete",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the Message resource that this Media resource belongs to",
            "in": "path",
            "name": "MessageSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^(SM|MM)[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies this resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ME[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "Media attached to MMS messages",
      "get": {
        "description": "Fetch a single media instance belonging to the account used to make the request",
        "parameters": [
          {
            "description": "The SID of the Account that created the resource(s) to fetch",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the Message resource that this Media resource belongs to",
            "in": "path",
            "name": "MessageSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^(SM|MM)[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies this resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ME[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.message.media"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "parent_sid",
        "content_type"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Messages/{Sid}.json": {
      "delete": {
        "description": "Deletes a message record from your account",
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to delete",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^(SM|MM)[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "Inbound or outbound messages",
      "get": {
        "description": "Fetch a message belonging to the account used to make the request",
        "parameters": [
          {
            "description": "The SID of the Account that created the resource to fetch",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^(SM|MM)[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.message"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": "To redact a message-body from a post-flight message record, post to the message instance resource with an empty body",
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to update",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^(SM|MM)[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The text of the message you want to send",
            "in": "query",
            "name": "Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.message"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "from",
        "to",
        "status",
        "direction",
        "date_sent"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Notifications.json": {
      "description": "[DEPRECATED] Log entries",
      "get": {
        "description": "Retrieve a list of notifications belonging to the account used to make the request",
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to read",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Filter by log level",
            "in": "query",
            "name": "Log",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Filter by date",
            "in": "query",
            "name": "MessageDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "notifications": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.notification"
                      },
                      "type": "array"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "call_sid",
        "error_code",
        "message_date"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Notifications/{Sid}.json": {
      "delete": {
        "description": "Delete a notification identified by the NotificationSid from an accounts log",
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to delete",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^NO[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "[DEPRECATED] Log entries",
      "get": {
        "description": "Fetch a notification belonging to the account used to make the request",
        "parameters": [
          {
            "description": "The SID of the Account that created the resource to fetch",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^NO[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.notification|instance"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "call_sid",
        "error_code",
        "message_date"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/OutgoingCallerIds.json": {
      "description": "Verified numbers that may be used as caller ID",
      "get": {
        "description": "Retrieve a list of outgoing-caller-ids belonging to the account used to make the request",
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to read",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The phone number of the OutgoingCallerId resources to read",
            "in": "query",
            "name": "PhoneNumber",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The string that identifies the OutgoingCallerId resources to read",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "outgoing_caller_ids": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.outgoing_caller_id"
                      },
                      "type": "array"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Account responsible for the new Caller ID",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The phone number to verify in E.164 format",
            "in": "query",
            "name": "PhoneNumber",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A string to describe the resource",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of seconds to delay before initiating the verification call",
            "in": "query",
            "name": "CallDelay",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The digits to dial after connecting the verification call",
            "in": "query",
            "name": "Extension",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The URL we should call to send status information to your application",
            "in": "query",
            "name": "StatusCallback",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method we should use to call status_callback",
            "in": "query",
            "name": "StatusCallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.validation_request"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "phone_number",
        "friendly_name"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/OutgoingCallerIds/{Sid}.json": {
      "delete": {
        "description": "Delete the caller-id specified from the account",
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to delete",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "Verified numbers that may be used as caller ID",
      "get": {
        "description": "Fetch an outgoing-caller-id belonging to the account used to make the request",
        "parameters": [
          {
            "description": "The SID of the Account that created the resource to fetch",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.outgoing_caller_id"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": "Updates the caller-id",
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to update",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^PN[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string to describe the resource",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.outgoing_caller_id"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "phone_number",
        "friendly_name"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Queues.json": {
      "description": "Queues of calls",
      "get": {
        "description": "Retrieve a list of queues belonging to the account used to make the request",
        "parameters": [
          {
            "description": "The unique id of the Account responsible for creating this Call",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "queues": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.queue"
                      },
                      "type": "array"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": "Create a queue",
        "parameters": [
          {
            "description": "The SID of the Account that will create the resource",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string to describe this resource",
            "in": "query",
            "name": "FriendlyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The max number of calls allowed in the queue",
            "in": "query",
            "name": "MaxSize",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.queue"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name",
        "current_size",
        "average_wait_time"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Queues/{QueueSid}/Members.json": {
      "description": "Calls in a call queue",
      "get": {
        "description": "Retrieve the members of the queue",
        "parameters": [
          {
            "description": "The SID of the Account that created the resource(s) to read",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the Queue in which to find the members",
            "in": "path",
            "name": "QueueSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^QU[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "queue_members": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.queue.member"
                      },
                      "type": "array"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "call_sid",
        "date_enqueued",
        "position",
        "wait_time"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Queues/{QueueSid}/Members/{CallSid}.json": {
      "description": "Calls in a call queue",
      "get": {
        "description": "Fetch a specific member from the queue",
        "parameters": [
          {
            "description": "The SID of the Account that created the resource(s) to fetch",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the Queue in which to find the members",
            "in": "path",
            "name": "QueueSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^QU[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The Call SID of the resource(s) to fetch",
            "in": "path",
            "name": "CallSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.queue.member"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": "Dequeue a member from a queue and have the member's call begin executing the TwiML document at that URL",
        "parameters": [
          {
            "description": "The SID of the Account that created the resource(s) to update",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the Queue in which to find the members",
            "in": "path",
            "name": "QueueSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^QU[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The Call SID of the resource(s) to update",
            "in": "path",
            "name": "CallSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The absolute URL of the Queue resource",
            "in": "query",
            "name": "Url",
            "required": true,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "How to pass the update request data",
            "in": "query",
            "name": "Method",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.queue.member"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "call_sid",
        "date_enqueued",
        "position",
        "wait_time"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Queues/{Sid}.json": {
      "delete": {
        "description": "Remove an empty queue",
        "parameters": [
          {
            "description": "The SID of the Account that created the resource(s) to delete",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies this resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^QU[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "Queues of calls",
      "get": {
        "description": "Fetch an instance of a queue identified by the QueueSid",
        "parameters": [
          {
            "description": "The SID of the Account that created the resource(s) to fetch",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies this resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^QU[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.queue"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": "Update the queue with the new parameters",
        "parameters": [
          {
            "description": "The SID of the Account that created the resource(s) to update",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies this resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^QU[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string to describe this resource",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The max number of calls allowed in the queue",
            "in": "query",
            "name": "MaxSize",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.queue"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name",
        "current_size",
        "average_wait_time"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Recordings.json": {
      "description": "Recordings of phone calls",
      "get": {
        "description": "Retrieve a list of recordings belonging to the account used to make the request",
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to read",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The `YYYY-MM-DD` value of the resources to read",
            "in": "query",
            "name": "DateCreated",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "The Call SID of the resources to read",
            "in": "query",
            "name": "CallSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CA[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Read by unique Conference SID for the recording",
            "in": "query",
            "name": "ConferenceSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CF[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "recordings": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.recording"
                      },
                      "type": "array"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "call_sid",
        "status",
        "start_time",
        "duration"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Recordings/{RecordingSid}/Transcriptions.json": {
      "description": "References to text transcriptions of call recordings",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to read",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the recording that created the transcriptions to read",
            "in": "path",
            "name": "RecordingSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "transcriptions": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.recording.recording_transcription"
                      },
                      "type": "array"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "type",
        "status",
        "duration"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Recordings/{RecordingSid}/Transcriptions/{Sid}.json": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to delete",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the recording that created the transcription to delete",
            "in": "path",
            "name": "RecordingSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "References to text transcriptions of call recordings",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Account that created the resource to fetch",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the recording that created the transcriptions to fetch",
            "in": "path",
            "name": "RecordingSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.recording.recording_transcription"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "type",
        "status",
        "duration"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Recordings/{ReferenceSid}/AddOnResults.json": {
      "description": "The results of an Add-on API call",
      "get": {
        "description": "Retrieve a list of results belonging to the recording",
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to read",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the recording to which the result to read belongs",
            "in": "path",
            "name": "ReferenceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "add_on_results": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.recording.recording_add_on_result"
                      },
                      "type": "array"
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "status",
        "add_on_sid",
        "date_created"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Recordings/{ReferenceSid}/AddOnResults/{AddOnResultSid}/Payloads.json": {
      "description": "A single Add-on results' payload",
      "get": {
        "description": "Retrieve a list of payloads belonging to the AddOnResult",
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to read",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the recording to which the AddOnResult resource that contains the payloads to read belongs",
            "in": "path",
            "name": "ReferenceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the AddOnResult to which the payloads to read belongs",
            "in": "path",
            "name": "AddOnResultSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^XR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "payloads": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.recording.recording_add_on_result.recording_add_on_result_payload"
                      },
                      "type": "array"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "label",
        "content_type"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Recordings/{ReferenceSid}/AddOnResults/{AddOnResultSid}/Payloads/{PayloadSid}/Data.json": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "ReferenceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "AddOnResultSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^XR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "PayloadSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^XH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "307": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.recording.recording_add_on_result.recording_add_on_result_payload.recording_add_on_result_payload_data"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "redirect_to"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Recordings/{ReferenceSid}/AddOnResults/{AddOnResultSid}/Payloads/{Sid}.json": {
      "delete": {
        "description": "Delete a payload from the result along with all associated Data",
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to delete",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the recording to which the AddOnResult resource that contains the payloads to delete belongs",
            "in": "path",
            "name": "ReferenceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the AddOnResult to which the payloads to delete belongs",
            "in": "path",
            "name": "AddOnResultSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^XR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^XH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "A single Add-on results' payload",
      "get": {
        "description": "Fetch an instance of a result payload",
        "parameters": [
          {
            "description": "The SID of the Account that created the resource to fetch",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the recording to which the AddOnResult resource that contains the payload to fetch belongs",
            "in": "path",
            "name": "ReferenceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the AddOnResult to which the payload to fetch belongs",
            "in": "path",
            "name": "AddOnResultSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^XR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource to fetch",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^XH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.recording.recording_add_on_result.recording_add_on_result_payload"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "label",
        "content_type"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Recordings/{ReferenceSid}/AddOnResults/{Sid}.json": {
      "delete": {
        "description": "Delete a result and purge all associated Payloads",
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to delete",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the recording to which the result to delete belongs",
            "in": "path",
            "name": "ReferenceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource to delete",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^XR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "The results of an Add-on API call",
      "get": {
        "description": "Fetch an instance of an AddOnResult",
        "parameters": [
          {
            "description": "The SID of the Account that created the resource to fetch",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the recording to which the result to fetch belongs",
            "in": "path",
            "name": "ReferenceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource to fetch",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^XR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.recording.recording_add_on_result"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "status",
        "add_on_sid",
        "date_created"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Recordings/{Sid}.json": {
      "delete": {
        "description": "Delete a recording from your account",
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to delete",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "Recordings of phone calls",
      "get": {
        "description": "Fetch an instance of a recording",
        "parameters": [
          {
            "description": "The SID of the Account that created the resource to fetch",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RE[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.recording"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "call_sid",
        "status",
        "start_time",
        "duration"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/CredentialLists.json": {
      "description": "Lists of SIP credentials",
      "get": {
        "description": "Get All Credential Lists",
        "parameters": [
          {
            "description": "The unique id of the Account that is responsible for this resource.",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "credential_lists": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.sip.sip_credential_list"
                      },
                      "type": "array"
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": "Create a Credential List",
        "parameters": [
          {
            "description": "The unique id of the Account that is responsible for this resource.",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Human readable descriptive text",
            "in": "query",
            "name": "FriendlyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_credential_list"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/CredentialLists/{CredentialListSid}/Credentials.json": {
      "description": "Username and password information for SIP Domains",
      "get": {
        "description": "Retrieve a list of credentials.",
        "parameters": [
          {
            "description": "The unique id of the Account that is responsible for this resource.",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique id that identifies the credential list that contains the desired credentials",
            "in": "path",
            "name": "CredentialListSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "credentials": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.sip.sip_credential_list.sip_credential"
                      },
                      "type": "array"
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": "Create a new credential resource.",
        "parameters": [
          {
            "description": "The unique id of the Account that is responsible for this resource.",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique id that identifies the credential list to include the created credential",
            "in": "path",
            "name": "CredentialListSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The username for this credential.",
            "in": "query",
            "name": "Username",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The password will not be returned in the response.",
            "in": "query",
            "name": "Password",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_credential_list.sip_credential"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "username",
        "credential_list_sid"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/CredentialLists/{CredentialListSid}/Credentials/{Sid}.json": {
      "delete": {
        "description": "Delete a credential resource.",
        "parameters": [
          {
            "description": "The unique id of the Account that is responsible for this resource.",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique id that identifies the credential list that contains the desired credentials",
            "in": "path",
            "name": "CredentialListSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique id that identifies the resource to delete",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "Username and password information for SIP Domains",
      "get": {
        "description": "Fetch a single credential.",
        "parameters": [
          {
            "description": "The unique id of the Account that is responsible for this resource.",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique id that identifies the credential list that contains the desired credential",
            "in": "path",
            "name": "CredentialListSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique id that identifies the resource to fetch.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_credential_list.sip_credential"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": "Update a credential resource.",
        "parameters": [
          {
            "description": "The unique id of the Account that is responsible for this resource",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique id that identifies the credential list that includes this credential",
            "in": "path",
            "name": "CredentialListSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique id that identifies the resource to update",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The password will not be returned in the response",
            "in": "query",
            "name": "Password",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_credential_list.sip_credential"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "username",
        "credential_list_sid"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/CredentialLists/{Sid}.json": {
      "delete": {
        "description": "Delete a Credential List",
        "parameters": [
          {
            "description": "The unique id of the Account that is responsible for this resource.",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Delete by unique credential list Sid",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "Lists of SIP credentials",
      "get": {
        "description": "Get a Credential List",
        "parameters": [
          {
            "description": "The unique id of the Account that is responsible for this resource.",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Fetch by unique credential list Sid",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_credential_list"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": "Update a Credential List",
        "parameters": [
          {
            "description": "The unique id of the Account that is responsible for this resource.",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Update by unique credential list Sid",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Human readable descriptive text",
            "in": "query",
            "name": "FriendlyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_credential_list"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/Domains.json": {
      "description": "Custom DNS hostnames that can accept SIP traffic",
      "get": {
        "description": "Retrieve a list of domains belonging to the account used to make the request",
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to read",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "domains": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.sip.sip_domain"
                      },
                      "type": "array"
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": "Create a new Domain",
        "parameters": [
          {
            "description": "The SID of the Account that will create the resource",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique address on Twilio to route SIP traffic",
            "in": "query",
            "name": "DomainName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A string to describe the resource",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The URL we should call when receiving a call",
            "in": "query",
            "name": "VoiceUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method to use with voice_url",
            "in": "query",
            "name": "VoiceMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL we should call when an error occurs in executing TwiML",
            "in": "query",
            "name": "VoiceFallbackUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method to use with voice_fallback_url",
            "in": "query",
            "name": "VoiceFallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL that we should call to pass status updates",
            "in": "query",
            "name": "VoiceStatusCallbackUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method we should use to call `voice_status_callback_url`",
            "in": "query",
            "name": "VoiceStatusCallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "Whether SIP registration is allowed",
            "in": "query",
            "name": "SipRegistration",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_domain"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "domain_name",
        "friendly_name"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/Auth/Calls/CredentialListMappings.json": {
      "description": "Credential lists for SIP calls",
      "get": {
        "description": "Retrieve a list of credential list mappings belonging to the domain used in the request",
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to read",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the SIP domain that contains the resources to read",
            "in": "path",
            "name": "DomainSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "contents": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.sip.sip_domain.sip_auth.sip_auth_calls.sip_auth_calls_credential_list_mapping"
                      },
                      "type": "array"
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": "Create a new credential list mapping resource",
        "parameters": [
          {
            "description": "The SID of the Account that will create the resource",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the SIP domain that will contain the new resource",
            "in": "path",
            "name": "DomainSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the CredentialList resource to map to the SIP domain",
            "in": "query",
            "name": "CredentialListSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_domain.sip_auth.sip_auth_calls.sip_auth_calls_credential_list_mapping"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/Auth/Calls/CredentialListMappings/{Sid}.json": {
      "delete": {
        "description": "Delete a credential list mapping from the requested domain",
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to delete",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the SIP domain that contains the resource to delete",
            "in": "path",
            "name": "DomainSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "Credential lists for SIP calls",
      "get": {
        "description": "Fetch a specific instance of a credential list mapping",
        "parameters": [
          {
            "description": "The SID of the Account that created the resource to fetch",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the SIP domain that contains the resource to fetch",
            "in": "path",
            "name": "DomainSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_domain.sip_auth.sip_auth_calls.sip_auth_calls_credential_list_mapping"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/Auth/Calls/IpAccessControlListMappings.json": {
      "description": "IP address lists for SIP calls",
      "get": {
        "description": "Retrieve a list of IP Access Control List mappings belonging to the domain used in the request",
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to read",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the SIP domain that contains the resources to read",
            "in": "path",
            "name": "DomainSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "contents": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.sip.sip_domain.sip_auth.sip_auth_calls.sip_auth_calls_ip_access_control_list_mapping"
                      },
                      "type": "array"
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": "Create a new IP Access Control List mapping",
        "parameters": [
          {
            "description": "The SID of the Account that will create the resource",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the SIP domain that will contain the new resource",
            "in": "path",
            "name": "DomainSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the IpAccessControlList resource to map to the SIP domain",
            "in": "query",
            "name": "IpAccessControlListSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_domain.sip_auth.sip_auth_calls.sip_auth_calls_ip_access_control_list_mapping"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/Auth/Calls/IpAccessControlListMappings/{Sid}.json": {
      "delete": {
        "description": "Delete an IP Access Control List mapping from the requested domain",
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to delete",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the SIP domain that contains the resources to delete",
            "in": "path",
            "name": "DomainSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "IP address lists for SIP calls",
      "get": {
        "description": "Fetch a specific instance of an IP Access Control List mapping",
        "parameters": [
          {
            "description": "The SID of the Account that created the resource to fetch",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the SIP domain that contains the resource to fetch",
            "in": "path",
            "name": "DomainSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_domain.sip_auth.sip_auth_calls.sip_auth_calls_ip_access_control_list_mapping"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/Auth/Registrations/CredentialListMappings.json": {
      "description": "Credential lists for SIP registrations",
      "get": {
        "description": "Retrieve a list of credential list mappings belonging to the domain used in the request",
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to read",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the SIP domain that contains the resources to read",
            "in": "path",
            "name": "DomainSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "contents": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.sip.sip_domain.sip_auth.sip_auth_registrations.sip_auth_registrations_credential_list_mapping"
                      },
                      "type": "array"
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": "Create a new credential list mapping resource",
        "parameters": [
          {
            "description": "The SID of the Account that will create the resource",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the SIP domain that will contain the new resource",
            "in": "path",
            "name": "DomainSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the CredentialList resource to map to the SIP domain",
            "in": "query",
            "name": "CredentialListSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_domain.sip_auth.sip_auth_registrations.sip_auth_registrations_credential_list_mapping"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/Auth/Registrations/CredentialListMappings/{Sid}.json": {
      "delete": {
        "description": "Delete a credential list mapping from the requested domain",
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to delete",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the SIP domain that contains the resources to delete",
            "in": "path",
            "name": "DomainSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "Credential lists for SIP registrations",
      "get": {
        "description": "Fetch a specific instance of a credential list mapping",
        "parameters": [
          {
            "description": "The SID of the Account that created the resource to fetch",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the SIP domain that contains the resource to fetch",
            "in": "path",
            "name": "DomainSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_domain.sip_auth.sip_auth_registrations.sip_auth_registrations_credential_list_mapping"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/CredentialListMappings.json": {
      "description": "Credential lists associated with a SIP Domain",
      "get": {
        "description": "Read multiple CredentialListMapping resources from an account.",
        "parameters": [
          {
            "description": "The unique sid that identifies this account",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string that identifies the SIP Domain that includes the resource to read",
            "in": "path",
            "name": "DomainSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "credential_list_mappings": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.sip.sip_domain.sip_credential_list_mapping"
                      },
                      "type": "array"
                    },
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": "Create a CredentialListMapping resource for an account.",
        "parameters": [
          {
            "description": "The unique sid that identifies this account",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string that identifies the SIP Domain for which the CredentialList resource will be mapped",
            "in": "path",
            "name": "DomainSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string that identifies the CredentialList resource to map to the SIP domain",
            "in": "query",
            "name": "CredentialListSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_domain.sip_credential_list_mapping"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/CredentialListMappings/{Sid}.json": {
      "delete": {
        "description": "Delete a CredentialListMapping resource from an account.",
        "parameters": [
          {
            "description": "The unique sid that identifies this account",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string that identifies the SIP Domain that includes the resource to delete",
            "in": "path",
            "name": "DomainSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string that identifies the resource to delete",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "Credential lists associated with a SIP Domain",
      "get": {
        "description": "Fetch a single CredentialListMapping resource from an account.",
        "parameters": [
          {
            "description": "The unique sid that identifies this account",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string that identifies the SIP Domain that includes the resource to fetch",
            "in": "path",
            "name": "DomainSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string that identifies the resource to fetch",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_domain.sip_credential_list_mapping"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/IpAccessControlListMappings.json": {
      "description": "Access control lists associated with a SIP Domain",
      "get": {
        "description": "Retrieve a list of IpAccessControlListMapping resources.",
        "parameters": [
          {
            "description": "The unique id of the Account that is responsible for this resource.",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string that uniquely identifies the SIP Domain",
            "in": "path",
            "name": "DomainSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "ip_access_control_list_mappings": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.sip.sip_domain.sip_ip_access_control_list_mapping"
                      },
                      "type": "array"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": "Create a new IpAccessControlListMapping resource.",
        "parameters": [
          {
            "description": "The unique id of the Account that is responsible for this resource.",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string that uniquely identifies the SIP Domain",
            "in": "path",
            "name": "DomainSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique id of the IP access control list to map to the SIP domain",
            "in": "query",
            "name": "IpAccessControlListSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_domain.sip_ip_access_control_list_mapping"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{DomainSid}/IpAccessControlListMappings/{Sid}.json": {
      "delete": {
        "description": "Delete an IpAccessControlListMapping resource.",
        "parameters": [
          {
            "description": "The unique id of the Account that is responsible for this resource.",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string that uniquely identifies the SIP Domain",
            "in": "path",
            "name": "DomainSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A 34 character string that uniquely identifies the resource to delete.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "Access control lists associated with a SIP Domain",
      "get": {
        "description": "Fetch an IpAccessControlListMapping resource.",
        "parameters": [
          {
            "description": "The unique id of the Account that is responsible for this resource.",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string that uniquely identifies the SIP Domain",
            "in": "path",
            "name": "DomainSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A 34 character string that uniquely identifies the resource to fetch.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_domain.sip_ip_access_control_list_mapping"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/Domains/{Sid}.json": {
      "delete": {
        "description": "Delete an instance of a Domain",
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to delete",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "Custom DNS hostnames that can accept SIP traffic",
      "get": {
        "description": "Fetch an instance of a Domain",
        "parameters": [
          {
            "description": "The SID of the Account that created the resource to fetch",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_domain"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": "Update the attributes of a domain",
        "parameters": [
          {
            "description": "The SID of the Account that created the resource to update",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^SD[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string to describe the resource",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The HTTP method used with voice_fallback_url",
            "in": "query",
            "name": "VoiceFallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL we should call when an error occurs in executing TwiML",
            "in": "query",
            "name": "VoiceFallbackUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method we should use with voice_url",
            "in": "query",
            "name": "VoiceMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The HTTP method we should use to call voice_status_callback_url",
            "in": "query",
            "name": "VoiceStatusCallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL that we should call to pass status updates",
            "in": "query",
            "name": "VoiceStatusCallbackUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The URL we should call when receiving a call",
            "in": "query",
            "name": "VoiceUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "Whether SIP registration is allowed",
            "in": "query",
            "name": "SipRegistration",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The unique address on Twilio to route SIP traffic",
            "in": "query",
            "name": "DomainName",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_domain"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "domain_name",
        "friendly_name"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/IpAccessControlLists.json": {
      "description": "Access control lists of IP address resources",
      "get": {
        "description": "Retrieve a list of IpAccessControlLists that belong to the account used to make the request",
        "parameters": [
          {
            "description": "The unique sid that identifies this account",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "ip_access_control_lists": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.sip.sip_ip_access_control_list"
                      },
                      "type": "array"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": "Create a new IpAccessControlList resource",
        "parameters": [
          {
            "description": "The unique sid that identifies this account",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A human readable description of this resource",
            "in": "query",
            "name": "FriendlyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_ip_access_control_list"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}/Addresses.json": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "IpAccessControlListSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "ip_addresses": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.sip.sip_ip_access_control_list.sip_address"
                      },
                      "type": "array"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "IpAccessControlListSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "FriendlyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "IpAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "CidrPrefixLength",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_ip_access_control_list.sip_address"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "ip_address",
        "friendly_name"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}/Addresses/{Sid}.json": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "IpAccessControlListSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "IpAccessControlListSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_ip_access_control_list.sip_address"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "IpAccessControlListSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "IpAddress",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "CidrPrefixLength",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_ip_access_control_list.sip_address"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "ip_address",
        "friendly_name"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}/IpAddresses.json": {
      "description": "IP addresses that have access to a SIP Domain",
      "get": {
        "description": "Read multiple IpAddress resources.",
        "parameters": [
          {
            "description": "The unique sid that identifies this account",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The IpAccessControlList Sid that identifies the IpAddress resources to read",
            "in": "path",
            "name": "IpAccessControlListSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "ip_addresses": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.sip.sip_ip_access_control_list.sip_ip_address"
                      },
                      "type": "array"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": "Create a new IpAddress resource.",
        "parameters": [
          {
            "description": "The unique sid that identifies this account",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The IpAccessControlList Sid with which to associate the created IpAddress resource",
            "in": "path",
            "name": "IpAccessControlListSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A human readable descriptive text for this resource, up to 64 characters long.",
            "in": "query",
            "name": "FriendlyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "An IP address in dotted decimal notation from which you want to accept traffic. Any SIP requests from this IP address will be allowed by Twilio. IPv4 only supported today.",
            "in": "query",
            "name": "IpAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "An integer representing the length of the CIDR prefix to use with this IP address when accepting traffic. By default the entire IP address is used.",
            "in": "query",
            "name": "CidrPrefixLength",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_ip_access_control_list.sip_ip_address"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "ip_address",
        "friendly_name"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/IpAccessControlLists/{IpAccessControlListSid}/IpAddresses/{Sid}.json": {
      "delete": {
        "description": "Delete an IpAddress resource.",
        "parameters": [
          {
            "description": "The unique sid that identifies this account",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The IpAccessControlList Sid that identifies the IpAddress resources to delete",
            "in": "path",
            "name": "IpAccessControlListSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string that identifies the resource to delete",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "IP addresses that have access to a SIP Domain",
      "get": {
        "description": "Read one IpAddress resource.",
        "parameters": [
          {
            "description": "The unique sid that identifies this account",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The IpAccessControlList Sid that identifies the IpAddress resources to fetch",
            "in": "path",
            "name": "IpAccessControlListSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string that identifies the IpAddress resource to fetch",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_ip_access_control_list.sip_ip_address"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": "Update an IpAddress resource.",
        "parameters": [
          {
            "description": "The unique sid that identifies this account",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The IpAccessControlList Sid that identifies the IpAddress resources to update",
            "in": "path",
            "name": "IpAccessControlListSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string that identifies the IpAddress resource to update",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "An IP address in dotted decimal notation from which you want to accept traffic. Any SIP requests from this IP address will be allowed by Twilio. IPv4 only supported today.",
            "in": "query",
            "name": "IpAddress",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A human readable descriptive text for this resource, up to 64 characters long.",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "An integer representing the length of the CIDR prefix to use with this IP address when accepting traffic. By default the entire IP address is used.",
            "in": "query",
            "name": "CidrPrefixLength",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_ip_access_control_list.sip_ip_address"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "ip_address",
        "friendly_name"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/IpAccessControlLists/{Sid}.json": {
      "delete": {
        "description": "Delete an IpAccessControlList from the requested account",
        "parameters": [
          {
            "description": "The unique sid that identifies this account",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string that identifies the resource to delete",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "Access control lists of IP address resources",
      "get": {
        "description": "Fetch a specific instance of an IpAccessControlList",
        "parameters": [
          {
            "description": "The unique sid that identifies this account",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string that identifies the resource to fetch",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_ip_access_control_list"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": "Rename an IpAccessControlList",
        "parameters": [
          {
            "description": "The unique sid that identifies this account",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string that identifies the resource to update",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A human readable description of this resource",
            "in": "query",
            "name": "FriendlyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sip.sip_ip_access_control_list"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/SIP/Regions.json": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "Feature",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "regions": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.sip.sip_region"
                      },
                      "type": "array"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "friendly_name",
        "region"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/SMS/Messages.json": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "To",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "From",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "DateSent",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "sms_messages": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.sms.sms_message"
                      },
                      "type": "array"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "To",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "From",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "StatusCallback",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "ApplicationSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AP[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "ProvideFeedback",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sms.sms_message"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "from",
        "to",
        "status",
        "direction",
        "date_sent"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/SMS/Messages/{Sid}.json": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^(SM|MM)[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.sms.sms_message"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "from",
        "to",
        "status",
        "direction",
        "date_sent"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/SMS/ShortCodes.json": {
      "description": "Messaging short codes",
      "get": {
        "description": "Retrieve a list of short-codes belonging to the account used to make the request",
        "parameters": [
          {
            "description": "The SID of the Account that created the resource(s) to read",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The string that identifies the ShortCode resources to read",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by ShortCode",
            "in": "query",
            "name": "ShortCode",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "short_codes": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.short_code"
                      },
                      "type": "array"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "short_code",
        "friendly_name"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/SMS/ShortCodes/{Sid}.json": {
      "description": "Messaging short codes",
      "get": {
        "description": "Fetch an instance of a short code",
        "parameters": [
          {
            "description": "The SID of the Account that created the resource(s) to fetch",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies this resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^SC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.short_code"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": "Update a short code with the following parameters",
        "parameters": [
          {
            "description": "The SID of the Account that created the resource(s) to update",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies this resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^SC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string to describe this resource",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The API version to use to start a new TwiML session",
            "in": "query",
            "name": "ApiVersion",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "URL Twilio will request when receiving an SMS",
            "in": "query",
            "name": "SmsUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "HTTP method to use when requesting the sms url",
            "in": "query",
            "name": "SmsMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "URL Twilio will request if an error occurs in executing TwiML",
            "in": "query",
            "name": "SmsFallbackUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "HTTP method Twilio will use with sms_fallback_url",
            "in": "query",
            "name": "SmsFallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.short_code"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "short_code",
        "friendly_name"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/SigningKeys.json": {
      "description": "Create a new signing key",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "signing_keys": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.signing_key"
                      },
                      "type": "array"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": "Create a new Signing Key for the account making the request.",
        "parameters": [
          {
            "description": "The SID of the Account that will be responsible for the new Key resource",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string to describe the resource",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.new_signing_key"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name",
        "secret"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/SigningKeys/{Sid}.json": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^SK[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^SK[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.signing_key"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": null,
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^SK[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": null,
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.signing_key"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Tokens.json": {
      "description": "Credentials for ICE servers",
      "post": {
        "description": "Create a new token",
        "parameters": [
          {
            "description": "The SID of the Account that will create the resource",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The duration in seconds the credentials are valid",
            "in": "query",
            "name": "Ttl",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.token"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "username",
        "ice_servers"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Transcriptions.json": {
      "description": "Text transcriptions of call recordings",
      "get": {
        "description": "Retrieve a list of transcriptions belonging to the account used to make the request",
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to read",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "transcriptions": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.transcription"
                      },
                      "type": "array"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "type",
        "status",
        "duration"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Transcriptions/{Sid}.json": {
      "delete": {
        "description": "Delete a transcription from the account used to make the request",
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to delete",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "Text transcriptions of call recordings",
      "get": {
        "description": "Fetch an instance of a Transcription",
        "parameters": [
          {
            "description": "The SID of the Account that created the resource to fetch",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^TR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.transcription"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "type",
        "status",
        "duration"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Usage/Records.json": {
      "description": "Twilio account usage records",
      "get": {
        "description": "Retrieve a list of usage-records belonging to the account used to make the request",
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to read",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The usage category of the UsageRecord resources to read",
            "in": "query",
            "name": "Category",
            "required": false,
            "schema": {
              "enum": [
                "agent-conference",
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "small-group-rooms",
                "small-group-rooms-data-track",
                "small-group-rooms-participant-minutes",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-germany",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ],
              "type": "string"
            }
          },
          {
            "description": "Only include usage that has occurred on or after this date",
            "in": "query",
            "name": "StartDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Only include usage that occurred on or before this date",
            "in": "query",
            "name": "EndDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Whether to include usage from the master account and all its subaccounts",
            "in": "query",
            "name": "IncludeSubaccounts",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "usage_records": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.usage.usage_record"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "category",
        "start_date",
        "end_date",
        "count",
        "count_unit"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Usage/Records/AllTime.json": {
      "description": "Usage records for all time",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to read",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The usage category of the UsageRecord resources to read",
            "in": "query",
            "name": "Category",
            "required": false,
            "schema": {
              "enum": [
                "agent-conference",
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "small-group-rooms",
                "small-group-rooms-data-track",
                "small-group-rooms-participant-minutes",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-germany",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ],
              "type": "string"
            }
          },
          {
            "description": "Only include usage that has occurred on or after this date",
            "in": "query",
            "name": "StartDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Only include usage that occurred on or before this date",
            "in": "query",
            "name": "EndDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Whether to include usage from the master account and all its subaccounts",
            "in": "query",
            "name": "IncludeSubaccounts",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "usage_records": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.usage.usage_record.usage_record_all_time"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "category",
        "start_date",
        "end_date",
        "count",
        "count_unit"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Usage/Records/Daily.json": {
      "description": "Usage records summarized by day",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to read",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The usage category of the UsageRecord resources to read",
            "in": "query",
            "name": "Category",
            "required": false,
            "schema": {
              "enum": [
                "agent-conference",
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "small-group-rooms",
                "small-group-rooms-data-track",
                "small-group-rooms-participant-minutes",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-germany",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ],
              "type": "string"
            }
          },
          {
            "description": "Only include usage that has occurred on or after this date",
            "in": "query",
            "name": "StartDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Only include usage that occurred on or before this date",
            "in": "query",
            "name": "EndDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Whether to include usage from the master account and all its subaccounts",
            "in": "query",
            "name": "IncludeSubaccounts",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "usage_records": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.usage.usage_record.usage_record_daily"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "category",
        "start_date",
        "end_date",
        "count",
        "count_unit"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Usage/Records/LastMonth.json": {
      "description": "Usage records for last month",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to read",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The usage category of the UsageRecord resources to read",
            "in": "query",
            "name": "Category",
            "required": false,
            "schema": {
              "enum": [
                "agent-conference",
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "small-group-rooms",
                "small-group-rooms-data-track",
                "small-group-rooms-participant-minutes",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-germany",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ],
              "type": "string"
            }
          },
          {
            "description": "Only include usage that has occurred on or after this date",
            "in": "query",
            "name": "StartDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Only include usage that occurred on or before this date",
            "in": "query",
            "name": "EndDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Whether to include usage from the master account and all its subaccounts",
            "in": "query",
            "name": "IncludeSubaccounts",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "usage_records": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.usage.usage_record.usage_record_last_month"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "category",
        "start_date",
        "end_date",
        "count",
        "count_unit"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Usage/Records/Monthly.json": {
      "description": "Usage records summarized by month",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to read",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The usage category of the UsageRecord resources to read",
            "in": "query",
            "name": "Category",
            "required": false,
            "schema": {
              "enum": [
                "agent-conference",
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "small-group-rooms",
                "small-group-rooms-data-track",
                "small-group-rooms-participant-minutes",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-germany",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ],
              "type": "string"
            }
          },
          {
            "description": "Only include usage that has occurred on or after this date",
            "in": "query",
            "name": "StartDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Only include usage that occurred on or before this date",
            "in": "query",
            "name": "EndDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Whether to include usage from the master account and all its subaccounts",
            "in": "query",
            "name": "IncludeSubaccounts",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "usage_records": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.usage.usage_record.usage_record_monthly"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "category",
        "start_date",
        "end_date",
        "count",
        "count_unit"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Usage/Records/ThisMonth.json": {
      "description": "Usage records for this month",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to read",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The usage category of the UsageRecord resources to read",
            "in": "query",
            "name": "Category",
            "required": false,
            "schema": {
              "enum": [
                "agent-conference",
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "small-group-rooms",
                "small-group-rooms-data-track",
                "small-group-rooms-participant-minutes",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-germany",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ],
              "type": "string"
            }
          },
          {
            "description": "Only include usage that has occurred on or after this date",
            "in": "query",
            "name": "StartDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Only include usage that occurred on or before this date",
            "in": "query",
            "name": "EndDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Whether to include usage from the master account and all its subaccounts",
            "in": "query",
            "name": "IncludeSubaccounts",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "usage_records": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.usage.usage_record.usage_record_this_month"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "category",
        "start_date",
        "end_date",
        "count",
        "count_unit"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Usage/Records/Today.json": {
      "description": "Usage records for today",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to read",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The usage category of the UsageRecord resources to read",
            "in": "query",
            "name": "Category",
            "required": false,
            "schema": {
              "enum": [
                "agent-conference",
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "small-group-rooms",
                "small-group-rooms-data-track",
                "small-group-rooms-participant-minutes",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-germany",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ],
              "type": "string"
            }
          },
          {
            "description": "Only include usage that has occurred on or after this date",
            "in": "query",
            "name": "StartDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Only include usage that occurred on or before this date",
            "in": "query",
            "name": "EndDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Whether to include usage from the master account and all its subaccounts",
            "in": "query",
            "name": "IncludeSubaccounts",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "usage_records": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.usage.usage_record.usage_record_today"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "category",
        "start_date",
        "end_date",
        "count",
        "count_unit"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Usage/Records/Yearly.json": {
      "description": "Usage records summarized by year",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to read",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The usage category of the UsageRecord resources to read",
            "in": "query",
            "name": "Category",
            "required": false,
            "schema": {
              "enum": [
                "agent-conference",
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "small-group-rooms",
                "small-group-rooms-data-track",
                "small-group-rooms-participant-minutes",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-germany",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ],
              "type": "string"
            }
          },
          {
            "description": "Only include usage that has occurred on or after this date",
            "in": "query",
            "name": "StartDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Only include usage that occurred on or before this date",
            "in": "query",
            "name": "EndDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Whether to include usage from the master account and all its subaccounts",
            "in": "query",
            "name": "IncludeSubaccounts",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "usage_records": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.usage.usage_record.usage_record_yearly"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "category",
        "start_date",
        "end_date",
        "count",
        "count_unit"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Usage/Records/Yesterday.json": {
      "description": "Usage records for yesterday",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to read",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The usage category of the UsageRecord resources to read",
            "in": "query",
            "name": "Category",
            "required": false,
            "schema": {
              "enum": [
                "agent-conference",
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "cps",
                "fraud-lookups",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "small-group-rooms",
                "small-group-rooms-data-track",
                "small-group-rooms-participant-minutes",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-germany",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ],
              "type": "string"
            }
          },
          {
            "description": "Only include usage that has occurred on or after this date",
            "in": "query",
            "name": "StartDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Only include usage that occurred on or before this date",
            "in": "query",
            "name": "EndDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Whether to include usage from the master account and all its subaccounts",
            "in": "query",
            "name": "IncludeSubaccounts",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "usage_records": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.usage.usage_record.usage_record_yesterday"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "category",
        "start_date",
        "end_date",
        "count",
        "count_unit"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Usage/Triggers.json": {
      "description": "Webhooks that notify you of usage thresholds",
      "get": {
        "description": "Retrieve a list of usage-triggers belonging to the account used to make the request",
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to read",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The frequency of recurring UsageTriggers to read",
            "in": "query",
            "name": "Recurring",
            "required": false,
            "schema": {
              "enum": [
                "daily",
                "monthly",
                "yearly",
                "alltime"
              ],
              "type": "string"
            }
          },
          {
            "description": "The trigger field of the UsageTriggers to read",
            "in": "query",
            "name": "TriggerBy",
            "required": false,
            "schema": {
              "enum": [
                "count",
                "usage",
                "price"
              ],
              "type": "string"
            }
          },
          {
            "description": "The usage category of the UsageTriggers to read",
            "in": "query",
            "name": "UsageCategory",
            "required": false,
            "schema": {
              "enum": [
                "agent-conference",
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "fraud-lookups",
                "cps",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "small-group-rooms",
                "small-group-rooms-data-track",
                "small-group-rooms-participant-minutes",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-germany",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "end": {
                      "type": "integer"
                    },
                    "first_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "next_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "previous_page_uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "start": {
                      "type": "integer"
                    },
                    "uri": {
                      "format": "uri",
                      "type": "string"
                    },
                    "usage_triggers": {
                      "items": {
                        "$ref": "#/components/schemas/api.v2010.account.usage.usage_trigger"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": "Create a new UsageTrigger",
        "parameters": [
          {
            "description": "The SID of the Account that will create the resource",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The URL we call when the trigger fires",
            "in": "query",
            "name": "CallbackUrl",
            "required": true,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The usage value at which the trigger should fire",
            "in": "query",
            "name": "TriggerValue",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The usage category the trigger watches",
            "in": "query",
            "name": "UsageCategory",
            "required": true,
            "schema": {
              "enum": [
                "agent-conference",
                "answering-machine-detection",
                "authy-authentications",
                "authy-calls-outbound",
                "authy-monthly-fees",
                "authy-phone-intelligence",
                "authy-phone-verifications",
                "authy-sms-outbound",
                "call-progess-events",
                "calleridlookups",
                "calls",
                "calls-client",
                "calls-globalconference",
                "calls-inbound",
                "calls-inbound-local",
                "calls-inbound-mobile",
                "calls-inbound-tollfree",
                "calls-outbound",
                "calls-pay-verb-transactions",
                "calls-recordings",
                "calls-sip",
                "calls-sip-inbound",
                "calls-sip-outbound",
                "carrier-lookups",
                "conversations",
                "conversations-api-requests",
                "conversations-conversation-events",
                "conversations-endpoint-connectivity",
                "conversations-events",
                "conversations-participant-events",
                "conversations-participants",
                "fraud-lookups",
                "cps",
                "group-rooms",
                "group-rooms-data-track",
                "group-rooms-encrypted-media-recorded",
                "group-rooms-media-downloaded",
                "group-rooms-media-recorded",
                "group-rooms-media-routed",
                "group-rooms-media-stored",
                "group-rooms-participant-minutes",
                "group-rooms-recorded-minutes",
                "ip-messaging",
                "ip-messaging-commands",
                "ip-messaging-data-storage",
                "ip-messaging-data-transfer",
                "ip-messaging-endpoint-connectivity",
                "lookups",
                "marketplace",
                "marketplace-algorithmia-named-entity-recognition",
                "marketplace-digital-segment-business-info",
                "marketplace-google-speech-to-text",
                "marketplace-ibm-watson-message-insights",
                "marketplace-ibm-watson-message-sentiment",
                "marketplace-ibm-watson-recording-analysis",
                "marketplace-icehook-systems-scout",
                "marketplace-infogroup-dataaxle-bizinfo",
                "marketplace-cadence-transcription",
                "marketplace-cadence-translation",
                "marketplace-capio-speech-to-text",
                "marketplace-facebook-offline-conversions",
                "marketplace-keen-io-contact-center-analytics",
                "marketplace-marchex-cleancall",
                "marketplace-marchex-sentiment-analysis-for-sms",
                "marketplace-marketplace-nextcaller-social-id",
                "marketplace-mobile-commons-opt-out-classifier",
                "marketplace-nexiwave-voicemail-to-text",
                "marketplace-nextcaller-advanced-caller-identification",
                "marketplace-nomorobo-spam-score",
                "marketplace-payfone-tcpa-compliance",
                "marketplace-telo-opencnam",
                "marketplace-truecnam-true-spam",
                "marketplace-twilio-caller-name-lookup-us",
                "marketplace-twilio-carrier-information-lookup",
                "marketplace-voicebase-pci",
                "marketplace-voicebase-transcription",
                "marketplace-whitepages-pro-caller-identification",
                "marketplace-whitepages-pro-phone-intelligence",
                "marketplace-whitepages-pro-phone-reputation",
                "marketplace-wolfram-short-answer",
                "marketplace-wolfarm-spoken-results",
                "marketplace-deepgram-phrase-detector",
                "marketplace-convriza-ababa",
                "marketplace-ibm-watson-tone-analyzer",
                "marketplace-remeeting-automatic-speech-recognition",
                "marketplace-tcpa-defense-solutions-blacklist-feed",
                "marketplace-voicebase-transcription-custom-vocabulary",
                "marketplace-ytica-contact-center-reporting-analytics",
                "mediastorage",
                "mms",
                "mms-inbound",
                "mms-inbound-longcode",
                "mms-inbound-shortcode",
                "mms-outbound",
                "mms-outbound-longcode",
                "mms-outbound-shortcode",
                "monitor-reads",
                "monitor-storage",
                "monitor-writes",
                "notify",
                "notify-actions-attempts",
                "notify-channels",
                "number-format-lookups",
                "pchat",
                "pchat-actions",
                "pchat-aps",
                "pchat-notifications",
                "pchat-reads",
                "pchat-users",
                "pchat-messages",
                "peer-to-peer-rooms-participant-minutes",
                "pfax",
                "pfax-minutes",
                "pfax-minutes-inbound",
                "pfax-minutes-outbound",
                "pfax-pages",
                "phonenumbers",
                "phonenumbers-cps",
                "phonenumbers-emergency",
                "phonenumbers-local",
                "phonenumbers-mobile",
                "phonenumbers-setups",
                "phonenumbers-tollfree",
                "premiumsupport",
                "proxy",
                "proxy-active-sessions",
                "pv",
                "pv-composition-media-downloaded",
                "pv-composition-media-encrypted",
                "pv-composition-media-stored",
                "pv-composition-minutes",
                "pv-recording-compositions",
                "pv-room-participants",
                "pv-room-participants-au1",
                "pv-room-participants-br1",
                "pv-room-participants-ie1",
                "pv-room-participants-jp1",
                "pv-room-participants-sg1",
                "pv-room-participants-us1",
                "pv-room-participants-us2",
                "pv-rooms",
                "pv-sip-endpoint-registrations",
                "recordings",
                "recordingstorage",
                "rooms-group-minutes",
                "rooms-group-bandwidth",
                "rooms-peer-to-peer-minutes",
                "shortcodes",
                "shortcodes-customerowned",
                "shortcodes-mms-enablement",
                "shortcodes-mps",
                "shortcodes-random",
                "shortcodes-uk",
                "shortcodes-vanity",
                "small-group-rooms",
                "small-group-rooms-data-track",
                "small-group-rooms-participant-minutes",
                "sms",
                "sms-inbound",
                "sms-inbound-longcode",
                "sms-inbound-shortcode",
                "sms-outbound",
                "sms-outbound-content-inspection",
                "sms-outbound-longcode",
                "sms-outbound-shortcode",
                "sms-messages-features",
                "sms-messages-features-senderid",
                "speech-recognition",
                "studio-engagements",
                "sync",
                "sync-actions",
                "sync-endpoint-hours",
                "sync-endpoint-hours-above-daily-cap",
                "taskrouter-tasks",
                "totalprice",
                "transcriptions",
                "trunking-cps",
                "trunking-emergency-calls",
                "trunking-origination",
                "trunking-origination-local",
                "trunking-origination-mobile",
                "trunking-origination-tollfree",
                "trunking-recordings",
                "trunking-secure",
                "trunking-termination",
                "turnmegabytes",
                "turnmegabytes-australia",
                "turnmegabytes-brasil",
                "turnmegabytes-germany",
                "turnmegabytes-india",
                "turnmegabytes-ireland",
                "turnmegabytes-japan",
                "turnmegabytes-singapore",
                "turnmegabytes-useast",
                "turnmegabytes-uswest",
                "twilio-interconnect",
                "video-recordings",
                "voice-insights",
                "voice-insights-client-insights-on-demand-minute",
                "voice-insights-ptsn-insights-on-demand-minute",
                "voice-insights-sip-interface-insights-on-demand-minute",
                "voice-insights-sip-trunking-insights-on-demand-minute",
                "wireless",
                "wireless-orders",
                "wireless-orders-artwork",
                "wireless-orders-bulk",
                "wireless-orders-esim",
                "wireless-orders-starter",
                "wireless-usage",
                "wireless-usage-commands",
                "wireless-usage-commands-africa",
                "wireless-usage-commands-asia",
                "wireless-usage-commands-centralandsouthamerica",
                "wireless-usage-commands-europe",
                "wireless-usage-commands-home",
                "wireless-usage-commands-northamerica",
                "wireless-usage-commands-oceania",
                "wireless-usage-commands-roaming",
                "wireless-usage-data",
                "wireless-usage-data-africa",
                "wireless-usage-data-asia",
                "wireless-usage-data-centralandsouthamerica",
                "wireless-usage-data-custom-additionalmb",
                "wireless-usage-data-custom-first5mb",
                "wireless-usage-data-domestic-roaming",
                "wireless-usage-data-europe",
                "wireless-usage-data-individual-additionalgb",
                "wireless-usage-data-individual-firstgb",
                "wireless-usage-data-international-roaming-canada",
                "wireless-usage-data-international-roaming-india",
                "wireless-usage-data-international-roaming-mexico",
                "wireless-usage-data-northamerica",
                "wireless-usage-data-oceania",
                "wireless-usage-data-pooled",
                "wireless-usage-data-pooled-downlink",
                "wireless-usage-data-pooled-uplink",
                "wireless-usage-mrc",
                "wireless-usage-mrc-custom",
                "wireless-usage-mrc-individual",
                "wireless-usage-mrc-pooled",
                "wireless-usage-mrc-suspended",
                "wireless-usage-voice",
                "wireless-usage-sms"
              ],
              "type": "string"
            }
          },
          {
            "description": "The HTTP method to use to call callback_url",
            "in": "query",
            "name": "CallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "A string to describe the resource",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The frequency of a recurring UsageTrigger",
            "in": "query",
            "name": "Recurring",
            "required": false,
            "schema": {
              "enum": [
                "daily",
                "monthly",
                "yearly",
                "alltime"
              ],
              "type": "string"
            }
          },
          {
            "description": "The field in the UsageRecord resource that fires the trigger",
            "in": "query",
            "name": "TriggerBy",
            "required": false,
            "schema": {
              "enum": [
                "count",
                "usage",
                "price"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.usage.usage_trigger"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name",
        "usage_category",
        "trigger_by"
      ]
    },
    "/2010-04-01/Accounts/{AccountSid}/Usage/Triggers/{Sid}.json": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to delete",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UT[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "Webhooks that notify you of usage thresholds",
      "get": {
        "description": "Fetch and instance of a usage-trigger",
        "parameters": [
          {
            "description": "The SID of the Account that created the resource to fetch",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UT[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.usage.usage_trigger"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": "Update an instance of a usage trigger",
        "parameters": [
          {
            "description": "The SID of the Account that created the resources to update",
            "in": "path",
            "name": "AccountSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^UT[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method to use to call callback_url",
            "in": "query",
            "name": "CallbackMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL we call when the trigger fires",
            "in": "query",
            "name": "CallbackUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "A string to describe the resource",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account.usage.usage_trigger"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name",
        "usage_category",
        "trigger_by"
      ]
    },
    "/2010-04-01/Accounts/{Sid}.json": {
      "description": "Twilio accounts (aka Project) or subaccounts",
      "get": {
        "description": "Fetch the account specified by the provided Account Sid",
        "parameters": [
          {
            "description": "Fetch by unique Account Sid",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": "Modify the properties of a given Account",
        "parameters": [
          {
            "description": "Update by unique Account Sid",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^AC[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "FriendlyName to update",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Status to update the Account with",
            "in": "query",
            "name": "Status",
            "required": false,
            "schema": {
              "enum": [
                "active",
                "suspended",
                "closed"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.v2010.account"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://api.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name",
        "status"
      ]
    }
  },
  "tags": [
    {
      "description": "This product is Generally Available.",
      "name": "GA"
    },
    {
      "description": "PLEASE NOTE that this is a Beta product that is subject to change. Use it with caution.",
      "name": "Beta"
    },
    {
      "description": "PLEASE NOTE that this is a Preview product that is subject to change. Use it with caution. If you currently do not have developer preview access, please contact help@twilio.com.",
      "name": "Preview"
    }
  ]
}