{
  "components": {
    "schemas": {
      "chat.v1.credential": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "friendly_name": {
            "type": "string"
          },
          "sandbox": {
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^CR[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "type": {
            "enum": [
              "gcm",
              "apn",
              "fcm"
            ],
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "chat.v1.service": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "consumption_report_interval": {
            "type": "integer"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "default_channel_creator_role_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^RL[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "default_channel_role_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^RL[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "default_service_role_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^RL[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "friendly_name": {
            "type": "string"
          },
          "limits": {
            "type": "object"
          },
          "links": {
            "patternProperties": {
              "^.+$": {
                "format": "uri",
                "type": "string"
              }
            },
            "type": "object"
          },
          "notifications": {
            "type": "object"
          },
          "post_webhook_url": {
            "type": "string"
          },
          "pre_webhook_url": {
            "type": "string"
          },
          "reachability_enabled": {
            "type": "boolean"
          },
          "read_status_enabled": {
            "type": "boolean"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "typing_indicator_timeout": {
            "type": "integer"
          },
          "url": {
            "format": "uri",
            "type": "string"
          },
          "webhook_filters": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "webhook_method": {
            "type": "string"
          },
          "webhooks": {
            "type": "object"
          }
        },
        "type": "object"
      },
      "chat.v1.service.channel": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "attributes": {
            "type": "string"
          },
          "created_by": {
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "friendly_name": {
            "type": "string"
          },
          "links": {
            "patternProperties": {
              "^.+$": {
                "format": "uri",
                "type": "string"
              }
            },
            "type": "object"
          },
          "members_count": {
            "type": "integer"
          },
          "messages_count": {
            "type": "integer"
          },
          "service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "type": {
            "enum": [
              "public",
              "private"
            ],
            "type": "string"
          },
          "unique_name": {
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "chat.v1.service.channel.invite": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "channel_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "created_by": {
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "identity": {
            "type": "string"
          },
          "role_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^RL[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IN[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "chat.v1.service.channel.member": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "channel_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "identity": {
            "type": "string"
          },
          "last_consumed_message_index": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          },
          "last_consumption_timestamp": {
            "format": "date-time",
            "type": "string"
          },
          "role_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^RL[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^MB[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "chat.v1.service.channel.message": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "attributes": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "channel_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "from": {
            "type": "string"
          },
          "index": {
            "type": "integer"
          },
          "service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IM[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "to": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          },
          "was_edited": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "chat.v1.service.role": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "friendly_name": {
            "type": "string"
          },
          "permissions": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^RL[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "type": {
            "enum": [
              "channel",
              "deployment"
            ],
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "chat.v1.service.user": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "attributes": {
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "friendly_name": {
            "type": "string"
          },
          "identity": {
            "type": "string"
          },
          "is_notifiable": {
            "type": "boolean"
          },
          "is_online": {
            "type": "boolean"
          },
          "joined_channels_count": {
            "type": "integer"
          },
          "links": {
            "patternProperties": {
              "^.+$": {
                "format": "uri",
                "type": "string"
              }
            },
            "type": "object"
          },
          "role_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^RL[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^US[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "chat.v1.service.user.user_channel": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "channel_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "last_consumed_message_index": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          },
          "links": {
            "patternProperties": {
              "^.+$": {
                "format": "uri",
                "type": "string"
              }
            },
            "type": "object"
          },
          "member_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^MB[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "status": {
            "enum": [
              "joined",
              "invited",
              "not_participating"
            ],
            "type": "string"
          },
          "unread_messages_count": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          }
        },
        "type": "object"
      },
      "chat.v2.credential": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "friendly_name": {
            "type": "string"
          },
          "sandbox": {
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^CR[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "type": {
            "enum": [
              "gcm",
              "apn",
              "fcm"
            ],
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "chat.v2.service": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "consumption_report_interval": {
            "type": "integer"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "default_channel_creator_role_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^RL[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "default_channel_role_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^RL[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "default_service_role_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^RL[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "friendly_name": {
            "type": "string"
          },
          "limits": {
            "type": "object"
          },
          "links": {
            "patternProperties": {
              "^.+$": {
                "format": "uri",
                "type": "string"
              }
            },
            "type": "object"
          },
          "media": {
            "type": "object"
          },
          "notifications": {
            "type": "object"
          },
          "post_webhook_retry_count": {
            "type": "integer"
          },
          "post_webhook_url": {
            "type": "string"
          },
          "pre_webhook_retry_count": {
            "type": "integer"
          },
          "pre_webhook_url": {
            "type": "string"
          },
          "reachability_enabled": {
            "type": "boolean"
          },
          "read_status_enabled": {
            "type": "boolean"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "typing_indicator_timeout": {
            "type": "integer"
          },
          "url": {
            "format": "uri",
            "type": "string"
          },
          "webhook_filters": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "webhook_method": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "chat.v2.service.binding": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "binding_type": {
            "enum": [
              "gcm",
              "apn",
              "fcm"
            ],
            "type": "string"
          },
          "credential_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^CR[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "endpoint": {
            "type": "string"
          },
          "identity": {
            "type": "string"
          },
          "links": {
            "patternProperties": {
              "^.+$": {
                "format": "uri",
                "type": "string"
              }
            },
            "type": "object"
          },
          "message_types": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^BS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "chat.v2.service.channel": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "attributes": {
            "type": "string"
          },
          "created_by": {
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "friendly_name": {
            "type": "string"
          },
          "links": {
            "patternProperties": {
              "^.+$": {
                "format": "uri",
                "type": "string"
              }
            },
            "type": "object"
          },
          "members_count": {
            "type": "integer"
          },
          "messages_count": {
            "type": "integer"
          },
          "service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "type": {
            "enum": [
              "public",
              "private"
            ],
            "type": "string"
          },
          "unique_name": {
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "chat.v2.service.channel.channel_webhook": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "channel_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "configuration": {
            "type": "object"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^WH[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "chat.v2.service.channel.invite": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "channel_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "created_by": {
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "identity": {
            "type": "string"
          },
          "role_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^RL[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IN[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "chat.v2.service.channel.member": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "attributes": {
            "type": "string"
          },
          "channel_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "identity": {
            "type": "string"
          },
          "last_consumed_message_index": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          },
          "last_consumption_timestamp": {
            "format": "date-time",
            "type": "string"
          },
          "role_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^RL[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^MB[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "chat.v2.service.channel.message": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "attributes": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "channel_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "from": {
            "type": "string"
          },
          "index": {
            "type": "integer"
          },
          "last_updated_by": {
            "type": "string"
          },
          "media": {
            "type": "object"
          },
          "service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IM[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "to": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          },
          "was_edited": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "chat.v2.service.role": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "friendly_name": {
            "type": "string"
          },
          "permissions": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^RL[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "type": {
            "enum": [
              "channel",
              "deployment"
            ],
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "chat.v2.service.user": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "attributes": {
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "friendly_name": {
            "type": "string"
          },
          "identity": {
            "type": "string"
          },
          "is_notifiable": {
            "type": "boolean"
          },
          "is_online": {
            "type": "boolean"
          },
          "joined_channels_count": {
            "type": "integer"
          },
          "links": {
            "patternProperties": {
              "^.+$": {
                "format": "uri",
                "type": "string"
              }
            },
            "type": "object"
          },
          "role_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^RL[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^US[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "chat.v2.service.user.user_binding": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "binding_type": {
            "enum": [
              "gcm",
              "apn",
              "fcm"
            ],
            "type": "string"
          },
          "credential_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^CR[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "endpoint": {
            "type": "string"
          },
          "identity": {
            "type": "string"
          },
          "message_types": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^BS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          },
          "user_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^US[0-9a-fA-F]{32}$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "chat.v2.service.user.user_channel": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "channel_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "last_consumed_message_index": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          },
          "links": {
            "patternProperties": {
              "^.+$": {
                "format": "uri",
                "type": "string"
              }
            },
            "type": "object"
          },
          "member_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^MB[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "notification_level": {
            "enum": [
              "default",
              "muted"
            ],
            "type": "string"
          },
          "service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "status": {
            "enum": [
              "joined",
              "invited",
              "not_participating"
            ],
            "type": "string"
          },
          "unread_messages_count": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "integer"
              }
            ]
          },
          "url": {
            "format": "uri",
            "type": "string"
          },
          "user_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^US[0-9a-fA-F]{32}$",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "accountSid_authToken": {
        "scheme": "basic",
        "type": "http"
      }
    }
  },
  "info": {
    "contact": {
      "email": "support@twilio.com",
      "name": "Twilio Support",
      "url": "https://support.twilio.com"
    },
    "description": "This is the public Twilio REST API.",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "termsOfService": "https://www.twilio.com/legal/tos",
    "title": "Twilio REST API",
    "version": "81ff5a4"
  },
  "openapi": "3.0.1",
  "paths": {
    "/v1/Credentials": {
      "description": "Credentials for push notifications channels",
      "get": {
        "description": null,
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "credentials": {
                      "items": {
                        "$ref": "#/components/schemas/chat.v1.credential"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The type of push-notification service the credential is for",
            "in": "query",
            "name": "Type",
            "required": true,
            "schema": {
              "enum": [
                "gcm",
                "apn",
                "fcm"
              ],
              "type": "string"
            }
          },
          {
            "description": "A string to describe the resource",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "[APN only] The URL encoded representation of the certificate",
            "in": "query",
            "name": "Certificate",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "[APN only] The URL encoded representation of the private key",
            "in": "query",
            "name": "PrivateKey",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "[APN only] Whether to send the credential to sandbox APNs",
            "in": "query",
            "name": "Sandbox",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "[GCM only] The API key for the project that was obtained from the Google Developer console for your GCM Service application credential",
            "in": "query",
            "name": "ApiKey",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "[FCM only] The Server key of your project from Firebase console",
            "in": "query",
            "name": "Secret",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v1.credential"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name",
        "type"
      ]
    },
    "/v1/Credentials/{Sid}": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "Credentials for push notifications channels",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v1.credential"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string to describe the resource",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "[APN only] The URL encoded representation of the certificate",
            "in": "query",
            "name": "Certificate",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "[APN only] The URL encoded representation of the private key",
            "in": "query",
            "name": "PrivateKey",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "[APN only] Whether to send the credential to sandbox APNs",
            "in": "query",
            "name": "Sandbox",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "[GCM only] The API key for the project that was obtained from the Google Developer console for your GCM Service application credential",
            "in": "query",
            "name": "ApiKey",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "[FCM only] The Server key of your project from Firebase console",
            "in": "query",
            "name": "Secret",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v1.credential"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name",
        "type"
      ]
    },
    "/v1/Services": {
      "description": "Top level scope for all chat resources",
      "get": {
        "description": null,
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "services": {
                      "items": {
                        "$ref": "#/components/schemas/chat.v1.service"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "A string to describe the resource",
            "in": "query",
            "name": "FriendlyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v1.service"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name",
        "date_created"
      ]
    },
    "/v1/Services/{ServiceSid}/Channels": {
      "description": "Channels represent chat rooms",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to read the resources from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The visibility of the channel to read",
            "in": "query",
            "name": "Type",
            "required": false,
            "schema": {
              "items": {
                "enum": [
                  "public",
                  "private"
                ],
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "channels": {
                      "items": {
                        "$ref": "#/components/schemas/chat.v1.service.channel"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to create the resource under",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string to describe the new resource",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "An application-defined string that uniquely identifies the resource",
            "in": "query",
            "name": "UniqueName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A valid JSON string that contains application-specific data",
            "in": "query",
            "name": "Attributes",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The visibility of the channel",
            "in": "query",
            "name": "Type",
            "required": false,
            "schema": {
              "enum": [
                "public",
                "private"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v1.service.channel"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "unique_name",
        "friendly_name"
      ]
    },
    "/v1/Services/{ServiceSid}/Channels/{ChannelSid}/Invites": {
      "description": "Pending invitations to users to become channel members",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to read the resources from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the Channel the resources to read belong to",
            "in": "path",
            "name": "ChannelSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The `identity` value of the resources to read",
            "in": "query",
            "name": "Identity",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "invites": {
                      "items": {
                        "$ref": "#/components/schemas/chat.v1.service.channel.invite"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to create the resource under",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the Channel the new resource belongs to",
            "in": "path",
            "name": "ChannelSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The `identity` value that identifies the new resource's User",
            "in": "query",
            "name": "Identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The Role assigned to the new member",
            "in": "query",
            "name": "RoleSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v1.service.channel.invite"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "identity",
        "date_created"
      ]
    },
    "/v1/Services/{ServiceSid}/Channels/{ChannelSid}/Invites/{Sid}": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to delete the resource from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the Channel the resource to delete belongs to",
            "in": "path",
            "name": "ChannelSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IN[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "Pending invitations to users to become channel members",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to fetch the resource from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the Channel the resource to fetch belongs to",
            "in": "path",
            "name": "ChannelSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IN[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v1.service.channel.invite"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "identity",
        "date_created"
      ]
    },
    "/v1/Services/{ServiceSid}/Channels/{ChannelSid}/Members": {
      "description": "Users joined to specific channels",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to read the resources from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique ID of the channel the member belongs to",
            "in": "path",
            "name": "ChannelSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The `identity` value of the resources to read",
            "in": "query",
            "name": "Identity",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "members": {
                      "items": {
                        "$ref": "#/components/schemas/chat.v1.service.channel.member"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to create the resource under",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique ID of the channel the new member belongs to",
            "in": "path",
            "name": "ChannelSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The `identity` value that identifies the new resource's User",
            "in": "query",
            "name": "Identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The SID of the Role to assign to the member",
            "in": "query",
            "name": "RoleSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v1.service.channel.member"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "identity",
        "date_created"
      ]
    },
    "/v1/Services/{ServiceSid}/Channels/{ChannelSid}/Members/{Sid}": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to delete the resource from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique ID of the channel the message to delete belongs to",
            "in": "path",
            "name": "ChannelSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MB[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "Users joined to specific channels",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to fetch the resource from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique ID of the channel the member belongs to",
            "in": "path",
            "name": "ChannelSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MB[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v1.service.channel.member"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to create the resource under",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique ID of the channel the member to update belongs to",
            "in": "path",
            "name": "ChannelSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MB[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the Role to assign to the member",
            "in": "query",
            "name": "RoleSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The index of the last consumed Message for the Channel for the Member",
            "in": "query",
            "name": "LastConsumedMessageIndex",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v1.service.channel.member"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "identity",
        "date_created"
      ]
    },
    "/v1/Services/{ServiceSid}/Channels/{ChannelSid}/Messages": {
      "description": "Individual chat messages",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to read the resources from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique ID of the Channel the message to read belongs to",
            "in": "path",
            "name": "ChannelSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The sort order of the returned messages",
            "in": "query",
            "name": "Order",
            "required": false,
            "schema": {
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "messages": {
                      "items": {
                        "$ref": "#/components/schemas/chat.v1.service.channel.message"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to create the resource under",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique ID of the channel the new resource belongs to",
            "in": "path",
            "name": "ChannelSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The message to send to the channel",
            "in": "query",
            "name": "Body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The identity of the new message's author",
            "in": "query",
            "name": "From",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A valid JSON string that contains application-specific data",
            "in": "query",
            "name": "Attributes",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v1.service.channel.message"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "from",
        "to",
        "date_created"
      ]
    },
    "/v1/Services/{ServiceSid}/Channels/{ChannelSid}/Messages/{Sid}": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to delete the resource from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique ID of the channel the message to delete belongs to",
            "in": "path",
            "name": "ChannelSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IM[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "Individual chat messages",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to fetch the resource from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique ID of the Channel the message to fetch belongs to",
            "in": "path",
            "name": "ChannelSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IM[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v1.service.channel.message"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to update the resource from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "he unique ID of the Channel the message belongs to",
            "in": "path",
            "name": "ChannelSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IM[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The message to send to the channel",
            "in": "query",
            "name": "Body",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A valid JSON string that contains application-specific data",
            "in": "query",
            "name": "Attributes",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v1.service.channel.message"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "from",
        "to",
        "date_created"
      ]
    },
    "/v1/Services/{ServiceSid}/Channels/{Sid}": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to delete the resource from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "Channels represent chat rooms",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to fetch the resource from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v1.service.channel"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to update the resource from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string to describe the resource",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "An application-defined string that uniquely identifies the resource",
            "in": "query",
            "name": "UniqueName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A valid JSON string that contains application-specific data",
            "in": "query",
            "name": "Attributes",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v1.service.channel"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "unique_name",
        "friendly_name"
      ]
    },
    "/v1/Services/{ServiceSid}/Roles": {
      "description": "Roles determining user or member permissions",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to read the resources from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "roles": {
                      "items": {
                        "$ref": "#/components/schemas/chat.v1.service.role"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to create the resource under",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string to describe the new resource",
            "in": "query",
            "name": "FriendlyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The type of role",
            "in": "query",
            "name": "Type",
            "required": true,
            "schema": {
              "enum": [
                "channel",
                "deployment"
              ],
              "type": "string"
            }
          },
          {
            "description": "A permission the role should have",
            "in": "query",
            "name": "Permission",
            "required": true,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v1.service.role"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name",
        "type"
      ]
    },
    "/v1/Services/{ServiceSid}/Roles/{Sid}": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to delete the resource from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "Roles determining user or member permissions",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to fetch the resource from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v1.service.role"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to update the resource from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A permission the role should have",
            "in": "query",
            "name": "Permission",
            "required": true,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v1.service.role"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name",
        "type"
      ]
    },
    "/v1/Services/{ServiceSid}/Users": {
      "description": "Unique chat users within a chat service",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to read the resources from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "users": {
                      "items": {
                        "$ref": "#/components/schemas/chat.v1.service.user"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to create the new resource under",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The `identity` value that identifies the new resource's User",
            "in": "query",
            "name": "Identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The SID of the Role assigned to this user",
            "in": "query",
            "name": "RoleSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A valid JSON string that contains application-specific data",
            "in": "query",
            "name": "Attributes",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A string to describe the new resource",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v1.service.user"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name",
        "date_created"
      ]
    },
    "/v1/Services/{ServiceSid}/Users/{Sid}": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to delete the resource from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "Unique chat users within a chat service",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to fetch the resource from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v1.service.user"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to update the resource from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID id of the Role assigned to this user",
            "in": "query",
            "name": "RoleSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A valid JSON string that contains application-specific data",
            "in": "query",
            "name": "Attributes",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A string to describe the resource",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v1.service.user"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name",
        "date_created"
      ]
    },
    "/v1/Services/{ServiceSid}/Users/{UserSid}/Channels": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": "List all Channels for a given User.",
        "parameters": [
          {
            "description": "The SID of the Service to read the resources from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the User to fetch the User Channel resources from",
            "in": "path",
            "name": "UserSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "channels": {
                      "items": {
                        "$ref": "#/components/schemas/chat.v1.service.user.user_channel"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "channel_sid",
        "status"
      ]
    },
    "/v1/Services/{Sid}": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "Top level scope for all chat resources",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v1.service"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string to describe the resource",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The service role assigned to users when they are added to the service",
            "in": "query",
            "name": "DefaultServiceRoleSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The channel role assigned to users when they are added to a channel",
            "in": "query",
            "name": "DefaultChannelRoleSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The channel role assigned to a channel creator when they join a new channel",
            "in": "query",
            "name": "DefaultChannelCreatorRoleSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Whether to enable the Message Consumption Horizon feature",
            "in": "query",
            "name": "ReadStatusEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether to enable the Reachability Indicator feature for this Service instance",
            "in": "query",
            "name": "ReachabilityEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "How long in seconds to wait before assuming the user is no longer typing",
            "in": "query",
            "name": "TypingIndicatorTimeout",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "DEPRECATED",
            "in": "query",
            "name": "ConsumptionReportInterval",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Whether to send a notification when a new message is added to a channel",
            "in": "query",
            "name": "Notifications.newMessage.enabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The template to use to create the notification text displayed when a new message is added to a channel",
            "in": "query",
            "name": "Notifications.newMessage.template",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Whether to send a notification when a member is added to a channel",
            "in": "query",
            "name": "Notifications.addedToChannel.enabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The template to use to create the notification text displayed when a member is added to a channel",
            "in": "query",
            "name": "Notifications.addedToChannel.template",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Whether to send a notification to a user when they are removed from a channel",
            "in": "query",
            "name": "Notifications.removedFromChannel.enabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The template to use to create the notification text displayed to a user when they are removed",
            "in": "query",
            "name": "Notifications.removedFromChannel.template",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Whether to send a notification when a user is invited to a channel",
            "in": "query",
            "name": "Notifications.invitedToChannel.enabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The template to use to create the notification text displayed when a user is invited to a channel",
            "in": "query",
            "name": "Notifications.invitedToChannel.template",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The webhook URL for pre-event webhooks",
            "in": "query",
            "name": "PreWebhookUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The URL for post-event webhooks",
            "in": "query",
            "name": "PostWebhookUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method  to use for both PRE and POST webhooks",
            "in": "query",
            "name": "WebhookMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The list of WebHook events that are enabled for this Service instance",
            "in": "query",
            "name": "WebhookFilters",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "The URL of the webhook to call in response to the on_message_send event",
            "in": "query",
            "name": "Webhooks.onMessageSend.url",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method to use when calling the webhooks.on_message_send.url",
            "in": "query",
            "name": "Webhooks.onMessageSend.method",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL of the webhook to call in response to the on_message_update event",
            "in": "query",
            "name": "Webhooks.onMessageUpdate.url",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method to use when calling the webhooks.on_message_update.url",
            "in": "query",
            "name": "Webhooks.onMessageUpdate.method",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL of the webhook to call in response to the on_message_remove event",
            "in": "query",
            "name": "Webhooks.onMessageRemove.url",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method to use when calling the webhooks.on_message_remove.url",
            "in": "query",
            "name": "Webhooks.onMessageRemove.method",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL of the webhook to call in response to the on_channel_add event",
            "in": "query",
            "name": "Webhooks.onChannelAdd.url",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method to use when calling the webhooks.on_channel_add.url",
            "in": "query",
            "name": "Webhooks.onChannelAdd.method",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL of the webhook to call in response to the on_channel_destroy event",
            "in": "query",
            "name": "Webhooks.onChannelDestroy.url",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method to use when calling the webhooks.on_channel_destroy.url",
            "in": "query",
            "name": "Webhooks.onChannelDestroy.method",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL of the webhook to call in response to the on_channel_update event",
            "in": "query",
            "name": "Webhooks.onChannelUpdate.url",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method to use when calling the webhooks.on_channel_update.url",
            "in": "query",
            "name": "Webhooks.onChannelUpdate.method",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL of the webhook to call in response to the on_member_add event",
            "in": "query",
            "name": "Webhooks.onMemberAdd.url",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method to use when calling the webhooks.on_member_add.url",
            "in": "query",
            "name": "Webhooks.onMemberAdd.method",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL of the webhook to call in response to the on_member_remove event",
            "in": "query",
            "name": "Webhooks.onMemberRemove.url",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method to use when calling the webhooks.on_member_remove.url",
            "in": "query",
            "name": "Webhooks.onMemberRemove.method",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL of the webhook to call in response to the on_message_sent event",
            "in": "query",
            "name": "Webhooks.onMessageSent.url",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The URL of the webhook to call in response to the on_message_sent event",
            "in": "query",
            "name": "Webhooks.onMessageSent.method",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL of the webhook to call in response to the on_message_updated event",
            "in": "query",
            "name": "Webhooks.onMessageUpdated.url",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method to use when calling the webhooks.on_message_updated.url",
            "in": "query",
            "name": "Webhooks.onMessageUpdated.method",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL of the webhook to call in response to the on_message_removed event",
            "in": "query",
            "name": "Webhooks.onMessageRemoved.url",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method to use when calling the webhooks.on_message_removed.url",
            "in": "query",
            "name": "Webhooks.onMessageRemoved.method",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL of the webhook to call in response to the on_channel_added event",
            "in": "query",
            "name": "Webhooks.onChannelAdded.url",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The URL of the webhook to call in response to the on_channel_added event",
            "in": "query",
            "name": "Webhooks.onChannelAdded.method",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL of the webhook to call in response to the on_channel_added event",
            "in": "query",
            "name": "Webhooks.onChannelDestroyed.url",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method to use when calling the webhooks.on_channel_destroyed.url",
            "in": "query",
            "name": "Webhooks.onChannelDestroyed.method",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "he URL of the webhook to call in response to the on_channel_updated event",
            "in": "query",
            "name": "Webhooks.onChannelUpdated.url",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method to use when calling the webhooks.on_channel_updated.url",
            "in": "query",
            "name": "Webhooks.onChannelUpdated.method",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL of the webhook to call in response to the on_channel_updated event",
            "in": "query",
            "name": "Webhooks.onMemberAdded.url",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "he HTTP method to use when calling the webhooks.on_channel_updated.url",
            "in": "query",
            "name": "Webhooks.onMemberAdded.method",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL of the webhook to call in response to the on_member_removed event",
            "in": "query",
            "name": "Webhooks.onMemberRemoved.url",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method to use when calling the webhooks.on_member_removed.url",
            "in": "query",
            "name": "Webhooks.onMemberRemoved.method",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The maximum number of Members that can be added to Channels within this Service",
            "in": "query",
            "name": "Limits.channelMembers",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The maximum number of Channels Users can be a Member of within this Service",
            "in": "query",
            "name": "Limits.userChannels",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v1.service"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name",
        "date_created"
      ]
    },
    "/v2/Credentials": {
      "description": "Credentials for push notifications channels",
      "get": {
        "description": null,
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "credentials": {
                      "items": {
                        "$ref": "#/components/schemas/chat.v2.credential"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The type of push-notification service the credential is for",
            "in": "query",
            "name": "Type",
            "required": true,
            "schema": {
              "enum": [
                "gcm",
                "apn",
                "fcm"
              ],
              "type": "string"
            }
          },
          {
            "description": "A string to describe the resource",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "[APN only] The URL encoded representation of the certificate",
            "in": "query",
            "name": "Certificate",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "[APN only] The URL encoded representation of the private key",
            "in": "query",
            "name": "PrivateKey",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "[APN only] Whether to send the credential to sandbox APNs",
            "in": "query",
            "name": "Sandbox",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "[GCM only] The API key for the project that was obtained from the Google Developer console for your GCM Service application credential",
            "in": "query",
            "name": "ApiKey",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "[FCM only] The Server key of your project from Firebase console",
            "in": "query",
            "name": "Secret",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.credential"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name",
        "type"
      ]
    },
    "/v2/Credentials/{Sid}": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "Credentials for push notifications channels",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.credential"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CR[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string to describe the resource",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "[APN only] The URL encoded representation of the certificate",
            "in": "query",
            "name": "Certificate",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "[APN only] The URL encoded representation of the private key",
            "in": "query",
            "name": "PrivateKey",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "[APN only] Whether to send the credential to sandbox APNs",
            "in": "query",
            "name": "Sandbox",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "[GCM only] The API key for the project that was obtained from the Google Developer console for your GCM Service application credential",
            "in": "query",
            "name": "ApiKey",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "[FCM only] The Server key of your project from Firebase console",
            "in": "query",
            "name": "Secret",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.credential"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name",
        "type"
      ]
    },
    "/v2/Services": {
      "description": "Top level scope for all chat resources",
      "get": {
        "description": null,
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "services": {
                      "items": {
                        "$ref": "#/components/schemas/chat.v2.service"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "A string to describe the resource",
            "in": "query",
            "name": "FriendlyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name",
        "date_created"
      ]
    },
    "/v2/Services/{ServiceSid}/Bindings": {
      "description": "Push notification subscription for users",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to read the resources from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The push technology used by the Binding resources to read",
            "in": "query",
            "name": "BindingType",
            "required": false,
            "schema": {
              "items": {
                "enum": [
                  "gcm",
                  "apn",
                  "fcm"
                ],
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "The `identity` value of the resources to read",
            "in": "query",
            "name": "Identity",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "bindings": {
                      "items": {
                        "$ref": "#/components/schemas/chat.v2.service.binding"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "endpoint",
        "identity"
      ]
    },
    "/v2/Services/{ServiceSid}/Bindings/{Sid}": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to delete the resource from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^BS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "Push notification subscription for users",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to fetch the resource from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^BS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service.binding"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "endpoint",
        "identity"
      ]
    },
    "/v2/Services/{ServiceSid}/Channels": {
      "description": "Channels represent chat rooms",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to read the resources from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The visibility of the channel to read",
            "in": "query",
            "name": "Type",
            "required": false,
            "schema": {
              "items": {
                "enum": [
                  "public",
                  "private"
                ],
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "channels": {
                      "items": {
                        "$ref": "#/components/schemas/chat.v2.service.channel"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to create the resource under",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string to describe the new resource",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "An application-defined string that uniquely identifies the resource",
            "in": "query",
            "name": "UniqueName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A valid JSON string that contains application-specific data",
            "in": "query",
            "name": "Attributes",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The visibility of the channel",
            "in": "query",
            "name": "Type",
            "required": false,
            "schema": {
              "enum": [
                "public",
                "private"
              ],
              "type": "string"
            }
          },
          {
            "description": "The ISO 8601 date and time in GMT when the resource was created",
            "in": "query",
            "name": "DateCreated",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "The ISO 8601 date and time in GMT when the resource was updated",
            "in": "query",
            "name": "DateUpdated",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "The identity of the User that created the Channel",
            "in": "query",
            "name": "CreatedBy",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service.channel"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "unique_name",
        "friendly_name"
      ]
    },
    "/v2/Services/{ServiceSid}/Channels/{ChannelSid}/Invites": {
      "description": "Pending invitations to users to become channel members",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to read the resources from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the Channel the resources to read belong to",
            "in": "path",
            "name": "ChannelSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The `identity` value of the resources to read",
            "in": "query",
            "name": "Identity",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "invites": {
                      "items": {
                        "$ref": "#/components/schemas/chat.v2.service.channel.invite"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to create the resource under",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the Channel the new resource belongs to",
            "in": "path",
            "name": "ChannelSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The `identity` value that identifies the new resource's User",
            "in": "query",
            "name": "Identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The Role assigned to the new member",
            "in": "query",
            "name": "RoleSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service.channel.invite"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "identity",
        "date_created"
      ]
    },
    "/v2/Services/{ServiceSid}/Channels/{ChannelSid}/Invites/{Sid}": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to delete the resource from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the Channel the resource to delete belongs to",
            "in": "path",
            "name": "ChannelSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IN[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "Pending invitations to users to become channel members",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to fetch the resource from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the Channel the resource to fetch belongs to",
            "in": "path",
            "name": "ChannelSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IN[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service.channel.invite"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "identity",
        "date_created"
      ]
    },
    "/v2/Services/{ServiceSid}/Channels/{ChannelSid}/Members": {
      "description": "Users joined to specific channels",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to read the resources from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique ID of the channel the member belongs to",
            "in": "path",
            "name": "ChannelSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The `identity` value of the resources to read",
            "in": "query",
            "name": "Identity",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "members": {
                      "items": {
                        "$ref": "#/components/schemas/chat.v2.service.channel.member"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to create the resource under",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique ID of the channel the new member belongs to",
            "in": "path",
            "name": "ChannelSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The `identity` value that identifies the new resource's User",
            "in": "query",
            "name": "Identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The SID of the Role to assign to the member",
            "in": "query",
            "name": "RoleSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The index of the last Message in the Channel the Member has read",
            "in": "query",
            "name": "LastConsumedMessageIndex",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          {
            "description": "The ISO 8601 based timestamp string representing the date-time of the last Message read event for the Member within the Channel",
            "in": "query",
            "name": "LastConsumptionTimestamp",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "The ISO 8601 date and time in GMT when the resource was created",
            "in": "query",
            "name": "DateCreated",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "The ISO 8601 date and time in GMT when the resource was updated",
            "in": "query",
            "name": "DateUpdated",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "A valid JSON string that contains application-specific data",
            "in": "query",
            "name": "Attributes",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service.channel.member"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "identity",
        "date_created"
      ]
    },
    "/v2/Services/{ServiceSid}/Channels/{ChannelSid}/Members/{Sid}": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to delete the resource from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique ID of the channel the message to delete belongs to",
            "in": "path",
            "name": "ChannelSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MB[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "Users joined to specific channels",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to fetch the resource from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique ID of the channel the member belongs to",
            "in": "path",
            "name": "ChannelSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MB[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service.channel.member"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to create the resource under",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique ID of the channel the member to update belongs to",
            "in": "path",
            "name": "ChannelSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MB[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the Role to assign to the member",
            "in": "query",
            "name": "RoleSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The index of the last consumed Message for the Channel for the Member",
            "in": "query",
            "name": "LastConsumedMessageIndex",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          {
            "description": "The ISO 8601 based timestamp string representing the date-time of the last Message read event for the Member within the Channel",
            "in": "query",
            "name": "LastConsumptionTimestamp",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "The ISO 8601 date and time in GMT when the resource was created",
            "in": "query",
            "name": "DateCreated",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "The ISO 8601 date and time in GMT when the resource was updated",
            "in": "query",
            "name": "DateUpdated",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "A valid JSON string that contains application-specific data",
            "in": "query",
            "name": "Attributes",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service.channel.member"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "identity",
        "date_created"
      ]
    },
    "/v2/Services/{ServiceSid}/Channels/{ChannelSid}/Messages": {
      "description": "Individual chat messages",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to read the resources from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique ID of the Channel the message to read belongs to",
            "in": "path",
            "name": "ChannelSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The sort order of the returned messages",
            "in": "query",
            "name": "Order",
            "required": false,
            "schema": {
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "messages": {
                      "items": {
                        "$ref": "#/components/schemas/chat.v2.service.channel.message"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to create the resource under",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique ID of the channel the new resource belongs to",
            "in": "path",
            "name": "ChannelSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The identity of the new message's author",
            "in": "query",
            "name": "From",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A valid JSON string that contains application-specific data",
            "in": "query",
            "name": "Attributes",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ISO 8601 date and time in GMT when the resource was created",
            "in": "query",
            "name": "DateCreated",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "The ISO 8601 date and time in GMT when the resource was updated",
            "in": "query",
            "name": "DateUpdated",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "The Identity of the User who last updated the Message",
            "in": "query",
            "name": "LastUpdatedBy",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The message to send to the channel",
            "in": "query",
            "name": "Body",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": " The Media Sid to be attached to the new Message",
            "in": "query",
            "name": "MediaSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^ME[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service.channel.message"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "from",
        "to",
        "date_created"
      ]
    },
    "/v2/Services/{ServiceSid}/Channels/{ChannelSid}/Messages/{Sid}": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to delete the resource from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique ID of the channel the message to delete belongs to",
            "in": "path",
            "name": "ChannelSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IM[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "Individual chat messages",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to fetch the resource from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique ID of the Channel the message to fetch belongs to",
            "in": "path",
            "name": "ChannelSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IM[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service.channel.message"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to update the resource from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique ID of the Channel the message belongs to",
            "in": "path",
            "name": "ChannelSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IM[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The message to send to the channel",
            "in": "query",
            "name": "Body",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A valid JSON string that contains application-specific data",
            "in": "query",
            "name": "Attributes",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ISO 8601 date and time in GMT when the resource was created",
            "in": "query",
            "name": "DateCreated",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "The ISO 8601 date and time in GMT when the resource was updated",
            "in": "query",
            "name": "DateUpdated",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "The Identity of the User who last updated the Message, if applicable",
            "in": "query",
            "name": "LastUpdatedBy",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The identity of the message's author",
            "in": "query",
            "name": "From",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service.channel.message"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "from",
        "to",
        "date_created"
      ]
    },
    "/v2/Services/{ServiceSid}/Channels/{ChannelSid}/Webhooks": {
      "description": "Webhooks for specific channels",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to read the resources from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the Channel the resources to read belong to",
            "in": "path",
            "name": "ChannelSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "webhooks": {
                      "items": {
                        "$ref": "#/components/schemas/chat.v2.service.channel.channel_webhook"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to create the resource under",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the Channel the new resource belongs to",
            "in": "path",
            "name": "ChannelSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The type of webhook",
            "in": "query",
            "name": "Type",
            "required": true,
            "schema": {
              "enum": [
                "webhook",
                "trigger",
                "studio"
              ],
              "type": "string"
            }
          },
          {
            "description": "The URL of the webhook to call",
            "in": "query",
            "name": "Configuration.url",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The HTTP method used to call `configuration.url`",
            "in": "query",
            "name": "Configuration.method",
            "required": false,
            "schema": {
              "enum": [
                "GET",
                "POST"
              ],
              "type": "string"
            }
          },
          {
            "description": "The events that cause us to call the Channel Webhook",
            "in": "query",
            "name": "Configuration.filters",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "A string that will cause us to call the webhook when it is found in a message body",
            "in": "query",
            "name": "Configuration.triggers",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "The SID of the Studio Flow to call when an event occurs",
            "in": "query",
            "name": "Configuration.flowSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The number of times to retry the webhook if the first attempt fails",
            "in": "query",
            "name": "Configuration.retryCount",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service.channel.channel_webhook"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "configuration"
      ]
    },
    "/v2/Services/{ServiceSid}/Channels/{ChannelSid}/Webhooks/{Sid}": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to delete the resource from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the channel the resource to delete belongs to",
            "in": "path",
            "name": "ChannelSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^WH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "Webhooks for specific channels",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to fetch the resource from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the Channel the resource to fetch belongs to",
            "in": "path",
            "name": "ChannelSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^WH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service.channel.channel_webhook"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to update the resource from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the Channel the resource to update belongs to",
            "in": "path",
            "name": "ChannelSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^WH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The URL of the webhook to call",
            "in": "query",
            "name": "Configuration.url",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The HTTP method used to call `configuration.url`",
            "in": "query",
            "name": "Configuration.method",
            "required": false,
            "schema": {
              "enum": [
                "GET",
                "POST"
              ],
              "type": "string"
            }
          },
          {
            "description": "The events that cause us to call the Channel Webhook",
            "in": "query",
            "name": "Configuration.filters",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "A string that will cause us to call the webhook when it is found in a message body",
            "in": "query",
            "name": "Configuration.triggers",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "The SID of the Studio Flow to call when an event occurs",
            "in": "query",
            "name": "Configuration.flowSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The number of times to retry the webhook if the first attempt fails",
            "in": "query",
            "name": "Configuration.retryCount",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service.channel.channel_webhook"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "configuration"
      ]
    },
    "/v2/Services/{ServiceSid}/Channels/{Sid}": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to delete the resource from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "Channels represent chat rooms",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to fetch the resource from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service.channel"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to update the resource from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string to describe the resource",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "An application-defined string that uniquely identifies the resource",
            "in": "query",
            "name": "UniqueName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A valid JSON string that contains application-specific data",
            "in": "query",
            "name": "Attributes",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ISO 8601 date and time in GMT when the resource was created",
            "in": "query",
            "name": "DateCreated",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "The ISO 8601 date and time in GMT when the resource was updated",
            "in": "query",
            "name": "DateUpdated",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "The identity of the User that created the Channel",
            "in": "query",
            "name": "CreatedBy",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service.channel"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "unique_name",
        "friendly_name"
      ]
    },
    "/v2/Services/{ServiceSid}/Roles": {
      "description": "Roles determining user or member permissions",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to read the resources from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "roles": {
                      "items": {
                        "$ref": "#/components/schemas/chat.v2.service.role"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to create the resource under",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string to describe the new resource",
            "in": "query",
            "name": "FriendlyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The type of role",
            "in": "query",
            "name": "Type",
            "required": true,
            "schema": {
              "enum": [
                "channel",
                "deployment"
              ],
              "type": "string"
            }
          },
          {
            "description": "A permission the role should have",
            "in": "query",
            "name": "Permission",
            "required": true,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service.role"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name",
        "type"
      ]
    },
    "/v2/Services/{ServiceSid}/Roles/{Sid}": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to delete the resource from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "Roles determining user or member permissions",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to fetch the resource from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service.role"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to update the resource from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A permission the role should have",
            "in": "query",
            "name": "Permission",
            "required": true,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service.role"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name",
        "type"
      ]
    },
    "/v2/Services/{ServiceSid}/Users": {
      "description": "Unique chat users within a chat service",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to read the resources from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "users": {
                      "items": {
                        "$ref": "#/components/schemas/chat.v2.service.user"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to create the new resource under",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The `identity` value that identifies the new resource's User",
            "in": "query",
            "name": "Identity",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The SID of the Role assigned to this user",
            "in": "query",
            "name": "RoleSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A valid JSON string that contains application-specific data",
            "in": "query",
            "name": "Attributes",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A string to describe the new resource",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service.user"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name",
        "identity",
        "date_created"
      ]
    },
    "/v2/Services/{ServiceSid}/Users/{Sid}": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to delete the resource from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "Unique chat users within a chat service",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to fetch the resource from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service.user"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to update the resource from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID id of the Role assigned to this user",
            "in": "query",
            "name": "RoleSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A valid JSON string that contains application-specific data",
            "in": "query",
            "name": "Attributes",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A string to describe the resource",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service.user"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name",
        "identity",
        "date_created"
      ]
    },
    "/v2/Services/{ServiceSid}/Users/{UserSid}/Bindings": {
      "description": "List of bindings for a given user",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to read the resource from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the User of the User Bindings to read",
            "in": "path",
            "name": "UserSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The push technology used by the User Binding resources to read",
            "in": "query",
            "name": "BindingType",
            "required": false,
            "schema": {
              "items": {
                "enum": [
                  "gcm",
                  "apn",
                  "fcm"
                ],
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "bindings": {
                      "items": {
                        "$ref": "#/components/schemas/chat.v2.service.user.user_binding"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "endpoint",
        "identity",
        "binding_type"
      ]
    },
    "/v2/Services/{ServiceSid}/Users/{UserSid}/Bindings/{Sid}": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to delete the resource from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the User of the User Bindings to delete",
            "in": "path",
            "name": "UserSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^BS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "List of bindings for a given user",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to fetch the resource from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the User for the binding",
            "in": "path",
            "name": "UserSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^BS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service.user.user_binding"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "endpoint",
        "identity",
        "binding_type"
      ]
    },
    "/v2/Services/{ServiceSid}/Users/{UserSid}/Channels": {
      "description": "List of channels for a given user",
      "get": {
        "description": "List all Channels for a given User.",
        "parameters": [
          {
            "description": "The SID of the Service to read the resources from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the User to fetch the User Channel resources from",
            "in": "path",
            "name": "UserSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "channels": {
                      "items": {
                        "$ref": "#/components/schemas/chat.v2.service.user.user_channel"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "channel_sid",
        "status"
      ]
    },
    "/v2/Services/{ServiceSid}/Users/{UserSid}/Channels/{ChannelSid}": {
      "description": "List of channels for a given user",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to fetch the User Channel resource from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the User to fetch the User Channel resource from",
            "in": "path",
            "name": "UserSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the Channel that has the User Channel to fetch",
            "in": "path",
            "name": "ChannelSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service.user.user_channel"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The SID of the Service to update the resource from",
            "in": "path",
            "name": "ServiceSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the User to update the User Channel resource from",
            "in": "path",
            "name": "UserSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^US[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The SID of the Channel with the User Channel resource to update",
            "in": "path",
            "name": "ChannelSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The push notification level to assign to the User Channel",
            "in": "query",
            "name": "NotificationLevel",
            "required": true,
            "schema": {
              "enum": [
                "default",
                "muted"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service.user.user_channel"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "channel_sid",
        "status"
      ]
    },
    "/v2/Services/{Sid}": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "description": "Top level scope for all chat resources",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The unique string that identifies the resource",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IS[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A string to describe the resource",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The service role assigned to users when they are added to the service",
            "in": "query",
            "name": "DefaultServiceRoleSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The channel role assigned to users when they are added to a channel",
            "in": "query",
            "name": "DefaultChannelRoleSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The channel role assigned to a channel creator when they join a new channel",
            "in": "query",
            "name": "DefaultChannelCreatorRoleSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^RL[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Whether to enable the Message Consumption Horizon feature",
            "in": "query",
            "name": "ReadStatusEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether to enable the Reachability Indicator feature for this Service instance",
            "in": "query",
            "name": "ReachabilityEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "How long in seconds to wait before assuming the user is no longer typing",
            "in": "query",
            "name": "TypingIndicatorTimeout",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "DEPRECATED",
            "in": "query",
            "name": "ConsumptionReportInterval",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Whether to send a notification when a new message is added to a channel",
            "in": "query",
            "name": "Notifications.newMessage.enabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The template to use to create the notification text displayed when a new message is added to a channel",
            "in": "query",
            "name": "Notifications.newMessage.template",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the sound to play when a new message is added to a channel",
            "in": "query",
            "name": "Notifications.newMessage.sound",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Whether the new message badge is enabled",
            "in": "query",
            "name": "Notifications.newMessage.badgeCountEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Whether to send a notification when a member is added to a channel",
            "in": "query",
            "name": "Notifications.addedToChannel.enabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The template to use to create the notification text displayed when a member is added to a channel",
            "in": "query",
            "name": "Notifications.addedToChannel.template",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the sound to play when a member is added to a channel",
            "in": "query",
            "name": "Notifications.addedToChannel.sound",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Whether to send a notification to a user when they are removed from a channel",
            "in": "query",
            "name": "Notifications.removedFromChannel.enabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The template to use to create the notification text displayed to a user when they are removed",
            "in": "query",
            "name": "Notifications.removedFromChannel.template",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the sound to play to a user when they are removed from a channel",
            "in": "query",
            "name": "Notifications.removedFromChannel.sound",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Whether to send a notification when a user is invited to a channel",
            "in": "query",
            "name": "Notifications.invitedToChannel.enabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The template to use to create the notification text displayed when a user is invited to a channel",
            "in": "query",
            "name": "Notifications.invitedToChannel.template",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the sound to play when a user is invited to a channel",
            "in": "query",
            "name": "Notifications.invitedToChannel.sound",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The webhook URL for pre-event webhooks",
            "in": "query",
            "name": "PreWebhookUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The URL for post-event webhooks",
            "in": "query",
            "name": "PostWebhookUrl",
            "required": false,
            "schema": {
              "format": "uri",
              "type": "string"
            }
          },
          {
            "description": "The HTTP method  to use for both PRE and POST webhooks",
            "in": "query",
            "name": "WebhookMethod",
            "required": false,
            "schema": {
              "enum": [
                "head",
                "get",
                "post",
                "patch",
                "put",
                "delete",
                "HEAD",
                "GET",
                "POST",
                "PATCH",
                "PUT",
                "DELETE"
              ],
              "type": "string"
            }
          },
          {
            "description": "The list of WebHook events that are enabled for this Service instance",
            "in": "query",
            "name": "WebhookFilters",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "The maximum number of Members that can be added to Channels within this Service",
            "in": "query",
            "name": "Limits.channelMembers",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The maximum number of Channels Users can be a Member of within this Service",
            "in": "query",
            "name": "Limits.userChannels",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The message to send when a media message has no text",
            "in": "query",
            "name": "Media.compatibilityMessage",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Count of times webhook will be retried in case of timeout or 429/503/504 HTTP responses",
            "in": "query",
            "name": "PreWebhookRetryCount",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The number of times calls to the `post_webhook_url` will be retried",
            "in": "query",
            "name": "PostWebhookRetryCount",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Whether to log notifications",
            "in": "query",
            "name": "Notifications.logEnabled",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chat.v2.service"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "GA"
        ]
      },
      "servers": [
        {
          "url": "https://chat.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name",
        "date_created"
      ]
    }
  },
  "tags": [
    {
      "description": "This product is Generally Available.",
      "name": "GA"
    }
  ]
}