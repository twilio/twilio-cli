name: Platform Executable Release
on:
  workflow_dispatch:
    inputs:
      formula:
        description: 'Artifact Prefix'
        default: twilio
jobs:
  get-tag:
    runs-on: ubuntu-latest
    outputs:
     TAG_NAME: ${{steps.get-tag.outputs.TAG_NAME}}
    steps:
     - uses: actions/checkout@v2
     - name: Getting latest tag
       id: get-tag
       run: |
        git fetch --prune --unshallow
        echo "::set-output name=TAG_NAME::$(git describe --tags $(git rev-list --tags --max-count=1))"
  platform-executables-release:
    name: Publish for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: [get-tag]
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: deb/${{ github.event.inputs.formula }}_${{ needs.get-tag.outputs.TAG_NAME }}-1_amd64.deb
            asset_name: ${{ github.event.inputs.formula }}-${{ needs.get-tag.outputs.TAG_NAME }}.deb
            command_name: sudo npx oclif-dev pack:deb
          - os: macos-latest
            artifact_name: win/${{ github.event.inputs.formula }}-v${{ needs.get-tag.outputs.TAG_NAME }}-x86.exe
            asset_name: ${{ github.event.inputs.formula }}-${{ needs.get-tag.outputs.TAG_NAME }}.exe
            command_name: npx oclif-dev pack:win
          - os: macos-latest
            artifact_name: macos/${{ github.event.inputs.formula }}-v${{ needs.get-tag.outputs.TAG_NAME }}.pkg
            asset_name: ${{ github.event.inputs.formula }}-${{ needs.get-tag.outputs.TAG_NAME }}.pkg
            command_name: npx oclif-dev pack:macos

    steps:
      - uses: actions/checkout@v2
      - run: |
          npm install
          if [ "$RUNNER_OS" == "macOS" ]; then
            brew install makensis
          fi
          ${{ matrix.command_name }}
      - name: Upload binaries to release
        run: node .github/scripts/update-platform-executables.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FILE: dist/${{ matrix.artifact_name }}
          ASSET_NAME: ${{ matrix.asset_name }}
          TAG_NAME: ${{ needs.get-tag.outputs.TAG_NAME }}
          REPO_NAME: twilio/twilio-cli
  notify-complete-fail:
    if: ${{ failure() || cancelled() }}
    needs: [ platform-executables-release ]
    name: Notify Release Failed
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.ALERT_SLACK_WEB_HOOK }}
          SLACK_COLOR: "#ff3333"
          SLACK_USERNAME: CLI Release Bot
          SLACK_ICON_EMOJI: ":ship:"
          SLACK_TITLE: "Twilio Cli"
          SLACK_MESSAGE: 'Platform Executable Release Failed'
          MSG_MINIMAL: actions url
